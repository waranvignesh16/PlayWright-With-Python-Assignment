[
  {
    "Api name": "Introduction",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk APIs facilitate integration with other Zoho applications and third-party tools by adhering to RESTful principles. These APIs enable you to programmatically fetch and edit data in the different modules in Zoho Desk, such as Tickets, Contacts, Accounts and so on. All the APIs follow HTTP rules and error codes. To keep yourself updated about the changes in our APIs, follow theZoho Desk Developer APIsforum.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Getting Started",
    "Api URL": "",
    "Api Method": "",
    "Desc": "All Zoho Desk APIs require these two mandatory fields in the header.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "HTTP Methods",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk APIs enable data manipulation and retrieval through different HTTP methods.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Errors",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk uses HTTP status codes to indicate success or failure of API calls. Status codes in the 2xx range indicate success, 4xx range indicate error in the information provided, and 5xx range indicate server side errors. The following table lists some commonly used HTTP status codes.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Pagination",
    "Api URL": "",
    "Api Method": "",
    "Desc": "In Zoho Desk, you can fetch multiple resources using listing APIs, such aslist tickets,list agentsandlist departmentsand so on. The retrieval and arrangement of these resources on end-users' screen is called pagination. Pagination in listing APIs is made possible by two parameters:fromandlimit",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": "{\"data\" : [ {\"website\" : \"112121\",\"accountName\" : \"Admin Account\",\"phone\" : \"121212\",\"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\"createdTime\" : \"2015-02-16T16:57:44.000Z\",\"zohoCRMAccount\" : {\"id\" : \"32754000000537001\"},\n\"customerHappiness\" : {\"badPercentage\" : \"30\",\"okPercentage\" : \"30\",\"goodPercentage\" : \"40\"},\"id\" : \"1892000000052077\",\"email\" : \"admin@zylker.com\"} ]}"
  },
  {
    "Api name": "Include",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk enables you to retrieve different related resources through a single API request, which is made possible by theincludequery param. This query param takes a comma separated list of values corresponding to the API.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Conventions",
    "Api URL": "",
    "Api Method": "",
    "Desc": "",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Compatibility",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Backwards Compatibility on api changes is always maintained. Minor api changes like field, URL, query param deprecation will be notified via forum with a transistion period. Support will be revoked after the end of transition period. Only major api interface change will involve the version number in the URL to change.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "API Limits",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Each Zoho Desk edition provides a default number of API calls. The default number is enforced daily and applies to the entire org irrespective of factors such as the number of IP addresses used to make the call. This limitation protects the service from overload while ensuring equitable resource sharing in the multitenant environment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Authentication(OAuth)",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk's APIs use the industry-standard OAuth 2.0 protocol for authentication and authorization. This protocol delegates user authentication to the service that hosts the user account and authorizes third-party applications to access the user account. Each API request must include an OAuthToken to retrieve any resource from your Zoho Desk portal.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Step 1: Register your Application",
    "Api URL": "",
    "Api Method": "",
    "Desc": "First, register your app in Zoho's Developer Console, which you can accesshere.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Step2: Making the Authorization Request",
    "Api URL": "https://accounts.zoho.com/oauth/v2/auth",
    "Api Method": "GET",
    "Desc": "To use the Zoho Desk APIs, the user must authenticate the application to make API calls on their behalf with an access token.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Step 3: Generating Tokens",
    "Api URL": "https://accounts.zoho.com/oauth/v2/token",
    "Api Method": "POST",
    "Desc": "Invoke a URL in the following format to exchange the authorization code (obtained at the end of the previous step) with an OAuthToken.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Step 4: Refreshing your Access Tokens",
    "Api URL": "https://accounts.zoho.com/oauth/v2/token",
    "Api Method": "POST",
    "Desc": "Access tokens generally expire in one hour, which means a new access token has to be generated to keep the process going. You can eliminate the need to perform the entire procedure to generate access tokens, by using refresh tokens. Once the access token expires, the refresh token can be used to generate a new access token.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Step 5: Revoking Tokens",
    "Api URL": "https://accounts.zoho.com/oauth/v2/token/revoke",
    "Api Method": "POST",
    "Desc": "If you want to revoke your refresh token, Make a POST request with the following URL:",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Using OAuth Token In API Calls",
    "Api URL": "",
    "Api Method": "",
    "Desc": "To invoke Zoho Desk's APIs, pass the access token in the Authorization parameter in the header, as shown in the example.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "OAuth Scopes",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The various scopes accessible using Zoho Desk's APIs are as follows:",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Organization Binding",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Any OAuth token generated is linked to a Zoho Desk organization. This step of associating the token and the organization, which happens in the backend while getting authorization consent from the end user, is called organization binding.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Webhook",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Zoho Desk supports webhooks that asynchronously deliver information on events that occur in the help desk. These events include actions, such as creating or updating a ticket, contact, or account, and so on. For information on how to include Zoho Desk webhooks in your service, refer to thisdocument.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Help Center",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Your help center is one of the key channels through which customers can seek support. This portal provides your customers with access to major help modules, such as your knowledge base, user community, live chat, and ticket submission form. A well-designed and well-maintained help center ensures good self-service capabilities for your customers and lesser burden on your support agents. To know more about this please refer thisdocument",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Java SDK",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The Zoho Desk Java SDK helps you create client Java applications that can be integrated with your Zoho Desk portal. This SDK makes it easy to access and use Zoho Desk APIs where necessary. In other words, it serves as a wrapper for the REST APIs, making it easy to use Zoho Desk's functionalities in your custom applications. To know more about this SDK please refer thisdocument",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Organizations",
    "Api URL": "",
    "Api Method": "",
    "Desc": "In Zoho Desk, each business is categorized as an organization. If you have multiple businesses, set each business up as an individual organization by creating a new signup and generating a unique organization ID. All APIs except the ones directly related to organizations must include the organization ID in the header in this format: orgId:{organization_id}",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "companyName",
        "data_type": "string",
        "description": "Actual name of the organization/business"
      },
      {
        "name": "portalName",
        "data_type": "string",
        "description": "Unique name for the help desk portal. Only lower-case letters and numbers are allowed in the name."
      },
      {
        "name": "phoneNumber",
        "data_type": "string",
        "description": "Phone number of the organization"
      },
      {
        "name": "edition",
        "data_type": "string",
        "description": "Zoho Desk edition purchased. Values allowed are: FREE , ENTERPRISE , PROFESSIONAL , STANDARD and EXPRESS ."
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Unique ID of the organization"
      },
      {
        "name": "isDefault",
        "data_type": "boolean",
        "description": "Key that returns if the organization is the default organization of the user"
      },
      {
        "name": "isAdminInOrg",
        "data_type": "boolean",
        "description": "Key that returns if the user is an admin in the organization"
      },
      {
        "name": "portalURL",
        "data_type": "string",
        "description": "URL of the help desk portal"
      },
      {
        "name": "logoURL",
        "data_type": "string",
        "description": "URL of the image file displaying the organization's logo"
      },
      {
        "name": "alias",
        "data_type": "string",
        "description": "Alternative name for the help desk portal"
      },
      {
        "name": "employeeCount",
        "data_type": "string",
        "description": "Number of employees in the organization"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Brief description of the organization"
      },
      {
        "name": "mobile",
        "data_type": "string",
        "description": "Mobile number of the organization"
      },
      {
        "name": "website",
        "data_type": "string",
        "description": "Website of the organization"
      },
      {
        "name": "fax",
        "data_type": "string",
        "description": "Fax number of the organization"
      },
      {
        "name": "primaryContact",
        "data_type": "string",
        "description": "Primary contact person in the organization"
      },
      {
        "name": "street",
        "data_type": "string",
        "description": "Street in which the organization's office is located"
      },
      {
        "name": "city",
        "data_type": "string",
        "description": "City in which the organization's office is located"
      },
      {
        "name": "state",
        "data_type": "string",
        "description": "State in which the organization's office is located"
      },
      {
        "name": "zip",
        "data_type": "string",
        "description": "Zip code of the organization's address"
      },
      {
        "name": "country",
        "data_type": "string",
        "description": "Country in which the organization's office is located"
      },
      {
        "name": "currencyLocale",
        "data_type": "string",
        "description": "Currency locale in which the organization operates"
      },
      {
        "name": "currencySymbol",
        "data_type": "string",
        "description": "Currency symbol used in the organization"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get organization",
    "Api URL": "/api/v1/organizations/{organization_Id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of an organization from your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizations/3981311?includeCustomDomain=true\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "includeCustomDomain",
        "data_type": "boolean optional, default : false",
        "description": "Key that denotes if the customDomain field must be included in the API response"
      }
    ],
    "Response Example": "{\n  \"country\" : \"United States\",\n  \"city\" : \"Bernierview\",\n  \"companyName\" : \"Zylker INC.\",\n  \"description\" : \"We are Zylker Support.\",\n  \"edition\" : \"ENTERPRISE\",\n  \"employeeCount\" : \"10\",\n  \"isAdminInOrg\" : true,\n  \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n  \"portalName\" : \"zylker\",\n  \"street\" : \"70961 Powlowski Crossing\",\n  \"currencyLocale\" : \"US\",\n  \"alias\" : \"Zylker Teams\",\n  \"id\" : \"3981311\",\n  \"state\" : \"NC\",\n  \"isPayloadEncryptionEnabled\" : \"false\",\n  \"fax\" : \"8392839821\",\n  \"zip\" : \"68838-2640\",\n  \"website\" : \"www.zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"currencySymbol\" : \"$\",\n  \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n  \"customDomain\" : \"support.zylker.com\",\n  \"isDefault\" : \"false\",\n  \"phoneNumber\" : \"9884358081\",\n  \"portalURL\" : \"http://support.zylker.com/support/zylker/ShowHomePage.do\",\n  \"primaryContact\" : \"steve@zylker.com\",\n  \"currencyCode\" : \"USD\",\n  \"isSandboxPortal\" : \"false\"\n}"
  },
  {
    "Api name": "Get all organizations",
    "Api URL": "/api/v1/organizations",
    "Api Method": "GET",
    "Desc": "This API lists all organizations to which the current user belongs.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizations\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"country\" : \"United States\",\n    \"city\" : \"Bernierview\",\n    \"companyName\" : \"Zylker INC.\",\n    \"description\" : \"We are Zylker Support.\",\n    \"edition\" : \"ENTERPRISE\",\n    \"employeeCount\" : \"10\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n    \"portalName\" : \"zylker\",\n    \"street\" : \"70961 Powlowski Crossing\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Zylker Teams\",\n    \"id\" : \"3981311\",\n    \"state\" : \"NC\",\n    \"isPayloadEncryptionEnabled\" : \"false\",\n    \"fax\" : \"8392839821\",\n    \"zip\" : \"68838-2640\",\n    \"website\" : \"www.zylker.com\",\n    \"mobile\" : \"9848022338\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884358081\",\n    \"portalURL\" : \"http://support.zylker.com/support/zylker/ShowHomePage.do\",\n    \"primaryContact\" : \"steve@zylker.com\",\n    \"currencyCode\" : \"USD\",\n    \"isSandboxPortal\" : \"false\"\n  }, {\n    \"country\" : \"United States\",\n    \"city\" : \"Port Cierra\",\n    \"companyName\" : \"Nshlerin LLC.\",\n    \"description\" : \"We are Nshlerin Support.\",\n    \"edition\" : \"PROFESSIONAL\",\n    \"employeeCount\" : \"20\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/5988319/favicon?no-cache=b31a9627de49fge046fcab71sf3359eq\",\n    \"portalName\" : \"nshlerin\",\n    \"street\" : \"269 Adam Flats\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Nshlerinians\",\n    \"id\" : \"5988319\",\n    \"state\" : \"Port Cierra\",\n    \"isPayloadEncryptionEnabled\" : \"false\",\n    \"fax\" : \"987654321\",\n    \"zip\" : \"33560-8932\",\n    \"website\" : \"www.nshlerin.com\",\n    \"mobile\" : \"987654321\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"http://static.zohocdn.com/desk/app/images/portalLogo.de847024ebc0131731a3.png\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884309090\",\n    \"portalURL\" : \"http://support.nshlerin.com/support/nshlerin/ShowHomePage.do\",\n    \"primaryContact\" : \"kelvin@zylker.com\",\n    \"currencyCode\" : \"USD\",\n    \"isSandboxPortal\" : \"true\"\n  } ]\n}"
  },
  {
    "Api name": "Get accessible organizations",
    "Api URL": "/api/v1/accessibleOrganizations",
    "Api Method": "GET",
    "Desc": "This API lists all organizations which can be accessed using the current Oauth token.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accessibleOrganizations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"country\" : \"United States\",\n    \"city\" : \"Bernierview\",\n    \"companyName\" : \"Zylker INC.\",\n    \"description\" : \"We are Zylker Support.\",\n    \"edition\" : \"ENTERPRISE\",\n    \"employeeCount\" : \"10\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n    \"portalName\" : \"zylker\",\n    \"street\" : \"70961 Powlowski Crossing\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Zylker Teams\",\n    \"id\" : \"3981311\",\n    \"state\" : \"NC\",\n    \"isPayloadEncryptionEnabled\" : \"false\",\n    \"fax\" : \"8392839821\",\n    \"zip\" : \"68838-2640\",\n    \"website\" : \"www.zylker.com\",\n    \"mobile\" : \"9848022338\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884358081\",\n    \"portalURL\" : \"https://support.zylker.com/support/zylker/ShowHomePage.do\",\n    \"primaryContact\" : \"steve@zylker.com\",\n    \"currencyCode\" : \"USD\",\n    \"isSandboxPortal\" : \"false\"\n  } ]\n}"
  },
  {
    "Api name": "Update organization",
    "Api URL": "/api/v1/organizations/{organization_Id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an organization.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/organizations/3981311\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"portalName\" : \"zylkerdesk\",\n  \"companyName\" : \"Zylker Desk\",\n  \"primaryContact\" : \"kelvin@zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"employeeCount\" : \"10\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "companyName",
        "data_type": "string optional, max chars : 50",
        "description": "Actual name of the organization/business"
      },
      {
        "name": "portalName",
        "data_type": "string optional, max chars : 100",
        "description": "Unique name for the help desk portal. Only lower-case letters and numbers are allowed in the name."
      },
      {
        "name": "phoneNumber",
        "data_type": "string optional, max chars : 30",
        "description": "Phone number of the organization"
      },
      {
        "name": "edition",
        "data_type": "string optional, max chars : 100",
        "description": "Zoho Desk edition purchased. Values allowed are: FREE , ENTERPRISE , PROFESSIONAL , STANDARD and EXPRESS ."
      },
      {
        "name": "alias",
        "data_type": "string optional, max chars : 50",
        "description": "Alternative name for the help desk portal"
      },
      {
        "name": "employeeCount",
        "data_type": "string optional, max chars : 19",
        "description": "Number of employees in the organization"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 250",
        "description": "Brief description of the organization"
      },
      {
        "name": "mobile",
        "data_type": "string optional, max chars : 30",
        "description": "Mobile number of the organization"
      },
      {
        "name": "website",
        "data_type": "string optional, max chars : 50",
        "description": "Website of the organization"
      },
      {
        "name": "fax",
        "data_type": "string optional, max chars : 100",
        "description": "Fax number of the organization"
      },
      {
        "name": "primaryContact",
        "data_type": "string optional, max chars : 100",
        "description": "Primary contact person in the organization"
      },
      {
        "name": "street",
        "data_type": "string optional, max chars : 50",
        "description": "Street in which the organization's office is located"
      },
      {
        "name": "city",
        "data_type": "string optional, max chars : 50",
        "description": "City in which the organization's office is located"
      },
      {
        "name": "state",
        "data_type": "string optional, max chars : 50",
        "description": "State in which the organization's office is located"
      },
      {
        "name": "zip",
        "data_type": "string optional, max chars : 100",
        "description": "Zip code of the organization's address"
      },
      {
        "name": "country",
        "data_type": "string optional, max chars : 50",
        "description": "Country in which the organization's office is located"
      },
      {
        "name": "currencyLocale",
        "data_type": "string optional, max chars : 100",
        "description": "Currency locale in which the organization operates"
      }
    ],
    "Response Example": "-d'{\n  \"portalName\" : \"zylkerdesk\",\n  \"companyName\" : \"Zylker Desk\",\n  \"primaryContact\" : \"kelvin@zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"employeeCount\" : \"10\"\n}'"
  },
  {
    "Api name": "Get organization logo",
    "Api URL": "/api/v1/organizations/{organization_Id}/logo",
    "Api Method": "GET",
    "Desc": "This API fetches the logo set for an organization/portal in your help desk.",
    "OAuth Scope": "",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizations/3981311/logo\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "no-cache",
        "data_type": "string optional, max chars : 100",
        "description": "Key that helps avoid browser cache. Only alphanumeric values are allowed."
      },
      {
        "name": "fileSize",
        "data_type": "string optional, max chars : 100",
        "description": "Size of the image file to download. Values allowed are THUMBNAIL (image with reduced dimensions and size) and ACTUAL (image with actual dimensions and size). The default value is ACTUAL ."
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Get organization favicon",
    "Api URL": "/api/v1/organizations/{organization_Id}/favicon",
    "Api Method": "GET",
    "Desc": "This API fetches the favicon set for an organization/portal in your help desk.",
    "OAuth Scope": "",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizations/3981311/favicon\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "no-cache",
        "data_type": "string optional, max chars : 100",
        "description": "Key that helps avoid browser cache. Only alphanumeric values are allowed."
      },
      {
        "name": "fileSize",
        "data_type": "string optional, max chars : 100",
        "description": "Size of the image file to download. Values allowed are THUMBNAIL (image with reduced dimensions and size) and ACTUAL (image with actual dimensions and size). The default value is ACTUAL ."
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Update organization logo",
    "Api URL": "/api/v1/organizations/{organization_Id}/logo",
    "Api Method": "POST",
    "Desc": "This API updates the logo set for an organization/portal in your help desk.Note: To upload organization logo generate OAuthToken for the scope: Desk.settings.UPDATE,profile.orglogo.UPDATE or Desk.basic.UPDATE,profile.orglogo.UPDATE",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/organizations/3981311/logo\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "logo",
        "data_type": "Content-Type:multipart/form-data",
        "description": "Image file of the logo.The maximum file size allowed is 2 MB ; and extensions allowed are: .jpg,.png,.jpeg."
      }
    ],
    "Response Example": "{\n  \"companyLogoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\"\n}"
  },
  {
    "Api name": "Update organization favicon",
    "Api URL": "/api/v1/organizations/{organization_Id}/favicon",
    "Api Method": "POST",
    "Desc": "This API updates the favicon set for an organization/portal in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/organizations/3981311/favicon\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "favicon",
        "data_type": "Content-Type:multipart/form-data",
        "description": "Image file of the favicon.The maximum file size allowed is 2 MB ;and extensions allowed are .jpg,.png,.gif,.jpeg,.ico"
      }
    ],
    "Response Example": "{\n  \"faviIconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=ffc59c3ba6585c12fb306f5174948ff6\"\n}"
  },
  {
    "Api name": "Delete organization logo",
    "Api URL": "/api/v1/organizations/{organization_Id}/logo",
    "Api Method": "DELETE",
    "Desc": "This API deletes the logo set for an organization/portal in your help desk.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/organizations/3981311/logo\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Delete organization favicon",
    "Api URL": "/api/v1/organizations/{organization_Id}/favicon",
    "Api Method": "DELETE",
    "Desc": "This API updates the favicon set for an organization/portal in your help desk.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/organizations/3981311/favicon\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Update default organization",
    "Api URL": "/api/v1/organizations/markDefault",
    "Api Method": "POST",
    "Desc": "This API updates the default organization for the current user in Zoho Desk.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/organizations/markDefault\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"id\" : \"3981311\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long required",
        "description": "Unique ID of the organization to be marked as default org"
      }
    ],
    "Response Example": "-d'{\n  \"id\" : \"3981311\"\n}'"
  },
  {
    "Api name": "Agents",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Agents are the customer service executives in your organization. They are the primary users of the helpdesk software, using which they interact with contacts and resolve tickets.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "emailId",
        "data_type": "string",
        "description": "Email ID of the agent"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Activation status of the agent: ACTIVE or DISABLED"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the agent"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the agent"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Full name of the agent"
      },
      {
        "name": "phone",
        "data_type": "string",
        "description": "Phone number of the agent"
      },
      {
        "name": "mobile",
        "data_type": "string",
        "description": "Mobile number of the agent"
      },
      {
        "name": "extn",
        "data_type": "string",
        "description": "Extension number of the agent"
      },
      {
        "name": "associatedDepartmentIds show Attributes",
        "data_type": "list",
        "description": "Departments with which the agent is associated"
      },
      {
        "name": "associatedChatDepartmentIds show Attributes",
        "data_type": "list",
        "description": "Chat departments with which the agent is associated"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the agent"
      },
      {
        "name": "zuid",
        "data_type": "long",
        "description": "Zoho user ID of the agent"
      },
      {
        "name": "roleId",
        "data_type": "long",
        "description": "Role ID of the agent"
      },
      {
        "name": "profileId",
        "data_type": "long",
        "description": "Profile ID of the agent"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL of the image file displaying the agent's photo"
      },
      {
        "name": "isConfirmed",
        "data_type": "boolean",
        "description": "Key that returns if the agent is a confirmed user in the portal or not"
      },
      {
        "name": "rolePermissionType",
        "data_type": "string",
        "description": "The Role Permission type of Agent"
      },
      {
        "name": "aboutInfo",
        "data_type": "string",
        "description": "Agent's about info"
      },
      {
        "name": "channelExpert show Attributes",
        "data_type": "list",
        "description": "The channels handled for the Agent"
      },
      {
        "name": "countryCode",
        "data_type": "string",
        "description": "Country code of the agent. Agents can update only their countryCode. They cannot update the countryCode of other users."
      },
      {
        "name": "timeZone",
        "data_type": "string",
        "description": "The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow. One can update his own timeZone only. If it is passed for other agent it will be ignored."
      },
      {
        "name": "langCode",
        "data_type": "string",
        "description": "Language code of the agent. Agents can update only their langCode. They cannot update the langCode of other users."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get agent",
    "Api URL": "/api/v1/agents/{agent_id}",
    "Api Method": "GET",
    "Desc": "This API fetches details of an agent in your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/1892000000056096?include=profile,role,associatedDepartments,associatedChatDepartments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the agent. Values allowed are profile , role , associatedDepartments , associatedChatDepartments and verifiedEmails . You can include all four values by separating them with commas in the API request."
      }
    ],
    "Response Example": "{\n  \"associatedChatDepartments\" : [ {\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  } ],\n  \"lastName\" : \"case\",\n  \"extn\" : \"3298\",\n  \"role\" : {\n    \"name\" : \"CEO\",\n    \"id\" : \"1892000000056099\"\n  },\n  \"langCode\" : \"fr_FR\",\n  \"emailId\" : \"case@zylker.com\",\n  \"photoURL\" : null,\n  \"countryCode\" : \"en_US\",\n  \"isConfirmed\" : true,\n  \"id\" : \"1892000000056096\",\n  \"roleId\" : \"1892000000056099\",\n  \"profile\" : {\n    \"name\" : \"Administrator\",\n    \"id\" : \"1892000000056091\"\n  },\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"associatedChatDepartmentIds\" : [ \"1892000000006907\" ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"associatedDepartments\" : [ {\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  }, {\n    \"name\" : \"R & D\",\n    \"id\" : \"1892000000082069\"\n  } ],\n  \"firstName\" : \"\",\n  \"phone\" : \"492-736-6424\",\n  \"profileId\" : \"1892000000056091\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"case\",\n  \"rolePermissionType\" : \"Admin\",\n  \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "List agents",
    "Api URL": "/api/v1/agents",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of agents, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the agents must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 0-200",
        "description": "Number of agents to fetch. The default value is 10 and the maximum value supported is 200."
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters agents based on their activation status: ACTIVE , DISABLED , DELETED or IMPORTED"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "long optional",
        "description": "Comma-separated array of department IDs. Maximum number of IDs allowed is 50."
      },
      {
        "name": "profileIds see documentation",
        "data_type": "long optional",
        "description": "Comma-separated array of profile IDs. Maximum number of IDs allowed is 50."
      },
      {
        "name": "roleIds see documentation",
        "data_type": "long optional",
        "description": "Comma-separated array of role IDs. Maximum number of IDs allowed is 50."
      },
      {
        "name": "rolePermissionType",
        "data_type": "string optional, max chars : 100",
        "description": "Types of roles and permissions of the agents to list. The allowed values are AgentPublic , AgentPersonal , AgentTeamPersonal , Admin , Light , Custom , and ${NON_LIGHT} . ${NON_LIGHT} refers to agents who are not associated with the light agent profile."
      },
      {
        "name": "isConfirmed",
        "data_type": "boolean optional",
        "description": "Key that denotes if the agents must be confirmed or unconfirmed."
      },
      {
        "name": "isLightAgent",
        "data_type": "boolean optional",
        "description": "Key that denotes if the agents must be light or non light."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to agents, The allowed values are profile , role . You can include all two values by separating them with commas in the API request."
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for agents by first name, last name, or email ID. The string must contain at least one character. The supported search methods: 1) string* - Searches for agents whose first name, last name, or email ID start with the string, 2) *string* - Searches for agents whose first name, last name, or email ID contain the string, 3) string - Searches for agents whose first name, last name, or email ID is an exact match for the string"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the field that must be used for searching and listing agents. The allowed values are: firstName , lastName , name , and emailId"
      },
      {
        "name": "sortOrder",
        "data_type": "string optional, max chars : 100",
        "description": "To sort the available list of agents in either ascending or descending order. The allowed values are: asc or desc"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"case\",\n    \"extn\" : \"3298\",\n    \"isZiaAgent\" : false,\n    \"roleId\" : \"1892000000056099\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"case@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10687231\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"zyl\",\n    \"photoURL\" : null,\n    \"phone\" : \"492-736-6424\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"zyl case\",\n    \"rolePermissionType\" : \"Admin\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000056007\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"jade\",\n    \"extn\" : \"3203\",\n    \"isZiaAgent\" : false,\n    \"roleId\" : \"1892000000056899\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10657727\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\", \"1892000001019041\", \"1892000001106673\", \"1892000001109673\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3981311\",\n    \"phone\" : \"\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\" ],\n    \"name\" : \"jade\",\n    \"rolePermissionType\" : \"Light\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tasks\",\n    \"id\" : \"1892000000042001\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"john\",\n    \"extn\" : \"3228\",\n    \"isZiaAgent\" : false,\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"john@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10713988\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000001019041\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"68779989\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\" ],\n    \"name\" : \"john\",\n    \"rolePermissionType\" : \"AgentPersonal\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling Workflows and Agents\",\n    \"id\" : \"1892000000070001\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"lastName\" : \"Waugh\",\n    \"extn\" : \"4020\",\n    \"isZiaAgent\" : false,\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"ja_JP\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Tokyo\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : null,\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"Steve\",\n    \"photoURL\" : null,\n    \"phone\" : \"\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ ],\n    \"name\" : \"Steve Waugh\",\n    \"rolePermissionType\" : \"Custom\",\n    \"isConfirmed\" : false,\n    \"aboutInfo\" : \"Expert in handling Knowledge base and comunity \",\n    \"id\" : \"1892000000888059\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Get agents count",
    "Api URL": "/api/v1/agents/count",
    "Api Method": "GET",
    "Desc": "This API lists the agents count by status, confirmed and include light",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/count\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Parameter that filters agents based on their activation status: ACTIVE or DISABLED"
      },
      {
        "name": "isConfirmed",
        "data_type": "boolean optional",
        "description": "Filters Confirmed & Unconfirmed agents"
      },
      {
        "name": "includeLightAgent",
        "data_type": "boolean optional",
        "description": "Count light agent."
      }
    ],
    "Response Example": "{\n  \"count\" : 5\n}"
  },
  {
    "Api name": "Get agent details by agentId",
    "Api URL": "/api/v1/agentsByIds?agentIds={agent_ids}",
    "Api Method": "GET",
    "Desc": "This API fetches details of agents via the agent IDs passed in the API request.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agentsByIds?agentIds=1892000000056007,1892000000042001,1892000000888059\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "long required",
        "description": "Comma-separated array of agent IDs. Maximum number of IDs allowed is 50."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"case\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"case@zylker.com\",\n    \"id\" : \"1892000000056007\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"jade\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3981311\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"id\" : \"1892000000042001\",\n    \"zuid\" : \"279392\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Waugh\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000888059/photo?orgId=3981311\",\n    \"roleId\" : \"70000000127346\",\n    \"profileId\" : \"70000000120834\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"id\" : \"1892000000888059\",\n    \"zuid\" : \"91723912\"\n  } ]\n}"
  },
  {
    "Api name": "Get My Information",
    "Api URL": "/api/v1/myinfo",
    "Api Method": "GET",
    "Desc": "This API fetches details of the currently logged in agent.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myinfo?include=profile,role,associatedDepartments,associatedChatDepartments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the agent. Values allowed are profile , role , associatedDepartments , and associatedChatDepartments . You can pass multiple values by separating them with commas in the query param"
      }
    ],
    "Response Example": "{\n  \"associatedChatDepartments\" : [ {\n    \"sanitizedName\" : \"Developement\",\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  } ],\n  \"lastName\" : \"Emard\",\n  \"extn\" : \"\",\n  \"role\" : {\n    \"name\" : \"CEO\",\n    \"id\" : \"1892000000056099\"\n  },\n  \"langCode\" : \"fr_FR\",\n  \"emailId\" : \"emardtorrey@zylker.com\",\n  \"photoURL\" : null,\n  \"countryCode\" : \"en_US\",\n  \"isConfirmed\" : true,\n  \"id\" : \"1892000000056007\",\n  \"roleId\" : \"1892000000056099\",\n  \"profile\" : {\n    \"name\" : \"Administrator\",\n    \"id\" : \"1892000000056091\"\n  },\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"associatedChatDepartmentIds\" : [ \"1892000000006907\" ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"associatedDepartments\" : [ {\n    \"sanitizedName\" : \"Developement\",\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  }, {\n    \"sanitizedName\" : \"r-d\",\n    \"name\" : \"R & D\",\n    \"id\" : \"1892000000082069\"\n  } ],\n  \"firstName\" : \"Torrey\",\n  \"phone\" : \"\",\n  \"profileId\" : \"1892000000056091\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"Torrey Emard\",\n  \"rolePermissionType\" : \"Admin\",\n  \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Activate agents",
    "Api URL": "/api/v1/agents/activate",
    "Api Method": "POST",
    "Desc": "This API activates agents in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/activate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "list required",
        "description": "Ids of Agents"
      }
    ],
    "Response Example": "-d'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'"
  },
  {
    "Api name": "Deactivate agent",
    "Api URL": "/api/v1/agents/{agent_id}/deactivate",
    "Api Method": "POST",
    "Desc": "This API deactivates an agent in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/19000001075071/deactivate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Reinvite unconfirmed agents",
    "Api URL": "/api/v1/agents/reinvite",
    "Api Method": "POST",
    "Desc": "This API sends reinvitation mails to unconfirmed agents.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/reinvite\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "list required",
        "description": "Ids of Agents"
      }
    ],
    "Response Example": "-d'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'"
  },
  {
    "Api name": "Add agent",
    "Api URL": "/api/v1/agents",
    "Api Method": "POST",
    "Desc": "This API adds an agent to your help desk.Keep in mind the following points while adding an agent:TheemailId,lastName,associatedDepartmentIds, androlePermissionTypeare mandatory in the API request.To assign the profile and role for the agents, pass any of the following values with therolePermissionTypekey:For the Support Administrator profile and CEO role, pass\"rolePermissionType\":\"Admin\"For the Agent profile and public role, pass\"rolePermissionType\":\"AgentPublic\"For the Agent profile and personal role, pass\"rolePermissionType\":\"AgentPersonal\"For custom profiles and roles, pass\"rolePermissionType\":\"Custom\"and\"roleId\":\"<actual role ID>\",\"profileId\":\"<actual profile ID>\"For the light agent profile and role, pass\"rolePermissionType\":\"Light\"For the Agent profile and Personal Team  role, pass\"rolePermissionType\":\"AgentTeamPersonal\"",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"lastName\" : \"Walsh\",\n  \"firstName\" : \"Marisol\",\n  \"countryCode\" : \"en_US\",\n  \"langCode\" : \"fr_FR\",\n  \"rolePermissionType\" : \"Admin\",\n  \"emailId\" : \"marisol51@zylker.com\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "emailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the agent"
      },
      {
        "name": "lastName",
        "data_type": "string required, max chars : 50",
        "description": "Last name of the agent"
      },
      {
        "name": "firstName",
        "data_type": "string optional, max chars : 50",
        "description": "First name of the agent"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 100",
        "description": "Phone number of the agent"
      },
      {
        "name": "mobile",
        "data_type": "string optional, max chars : 100",
        "description": "Mobile number of the agent"
      },
      {
        "name": "extn",
        "data_type": "string optional, max chars : 100",
        "description": "Extension number of the agent"
      },
      {
        "name": "associatedDepartmentIds",
        "data_type": "list required",
        "description": "Departments with which the agent is associated"
      },
      {
        "name": "associatedChatDepartmentIds",
        "data_type": "list optional",
        "description": "Chat departments with which the agent is associated"
      },
      {
        "name": "rolePermissionType",
        "data_type": "string required, max chars : 100",
        "description": "The Role Permission type of Agent"
      },
      {
        "name": "aboutInfo",
        "data_type": "string optional, max chars : 255",
        "description": "Agent's about info"
      },
      {
        "name": "channelExpert",
        "data_type": "list optional",
        "description": "The channels handled for the Agent"
      },
      {
        "name": "countryCode",
        "data_type": "string optional, max chars : 100",
        "description": "Country code of the agent. Agents can update only their countryCode. They cannot update the countryCode of other users."
      },
      {
        "name": "timeZone",
        "data_type": "string optional, max chars : 100",
        "description": "The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow. One can update his own timeZone only. If it is passed for other agent it will be ignored."
      },
      {
        "name": "langCode",
        "data_type": "string optional, max chars : 100",
        "description": "Language code of the agent. Agents can update only their langCode. They cannot update the langCode of other users."
      }
    ],
    "Response Example": "-d'{\n  \"lastName\" : \"Walsh\",\n  \"firstName\" : \"Marisol\",\n  \"countryCode\" : \"en_US\",\n  \"langCode\" : \"fr_FR\",\n  \"rolePermissionType\" : \"Admin\",\n  \"emailId\" : \"marisol51@zylker.com\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}'"
  },
  {
    "Api name": "Update agent",
    "Api URL": "/api/v1/agents/{agent_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an agent.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/agents/1892000000056007\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"lastName\" : \"Marisol Walsh\",\n  \"firstName\" : \"K\",\n  \"phone\" : \"764-484-8068\",\n  \"rolePermissionType\" : \"Light\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "emailId",
        "data_type": "string optional, max chars : 100",
        "description": "Email ID of the agent"
      },
      {
        "name": "lastName",
        "data_type": "string optional, max chars : 50",
        "description": "Last name of the agent"
      },
      {
        "name": "firstName",
        "data_type": "string optional, max chars : 50",
        "description": "First name of the agent"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 100",
        "description": "Phone number of the agent"
      },
      {
        "name": "mobile",
        "data_type": "string optional, max chars : 100",
        "description": "Mobile number of the agent"
      },
      {
        "name": "extn",
        "data_type": "string optional, max chars : 100",
        "description": "Extension number of the agent"
      },
      {
        "name": "associatedDepartmentIds",
        "data_type": "list optional",
        "description": "Departments with which the agent is associated"
      },
      {
        "name": "associatedChatDepartmentIds",
        "data_type": "list optional",
        "description": "Chat departments with which the agent is associated"
      },
      {
        "name": "rolePermissionType",
        "data_type": "string optional, max chars : 100",
        "description": "The Role Permission type of Agent"
      },
      {
        "name": "aboutInfo",
        "data_type": "string optional, max chars : 255",
        "description": "Agent's about info"
      },
      {
        "name": "channelExpert",
        "data_type": "list optional",
        "description": "The channels handled for the Agent"
      },
      {
        "name": "countryCode",
        "data_type": "string optional, max chars : 100",
        "description": "Country code of the agent. Agents can update only their countryCode. They cannot update the countryCode of other users."
      },
      {
        "name": "timeZone",
        "data_type": "string optional, max chars : 100",
        "description": "The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow. One can update his own timeZone only. If it is passed for other agent it will be ignored."
      },
      {
        "name": "langCode",
        "data_type": "string optional, max chars : 100",
        "description": "Language code of the agent. Agents can update only their langCode. They cannot update the langCode of other users."
      }
    ],
    "Response Example": "-d'{\n  \"lastName\" : \"Marisol Walsh\",\n  \"firstName\" : \"K\",\n  \"phone\" : \"764-484-8068\",\n  \"rolePermissionType\" : \"Light\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}'"
  },
  {
    "Api name": "Delete unconfirmed agents",
    "Api URL": "/api/v1/agents/deleteUnconfirmed",
    "Api Method": "POST",
    "Desc": "This API deletes unconfirmed agents from your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/deleteUnconfirmed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "list required",
        "description": "Ids of Agents"
      }
    ],
    "Response Example": "-d'{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}'"
  },
  {
    "Api name": "Delete confirmed agent",
    "Api URL": "/api/v1/agents/{agent_id}/delete",
    "Api Method": "POST",
    "Desc": "This API deletes a confirmed agent from your help desk.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/19000001075071/delete\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"anonymizedName\" : \"Anonyme\",\n  \"isAnonymize\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "anonymizedName",
        "data_type": "string optional, max chars : 50",
        "description": "Nickname of the agent, which will appear on their entity history page"
      },
      {
        "name": "isAnonymize",
        "data_type": "boolean optional",
        "description": "Key that determines if the deleted agent must be anonymized in the help desk"
      }
    ],
    "Response Example": "-d'{\n  \"anonymizedName\" : \"Anonyme\",\n  \"isAnonymize\" : true\n}'"
  },
  {
    "Api name": "Anonymize deleted agent",
    "Api URL": "/api/v1/deletedAgents/{agent_id}/anonymize",
    "Api Method": "POST",
    "Desc": "This API removes the identification details of a deleted agent.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/deletedAgents/19000001075071/anonymize\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"anonymizedName\" : \"Anonyme\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "anonymizedName",
        "data_type": "string optional, max chars : 50",
        "description": "Nickname of the agent, which will appear on their entity history page"
      }
    ],
    "Response Example": "-d'{\n  \"anonymizedName\" : \"Anonyme\"\n}'"
  },
  {
    "Api name": "Upload my photo",
    "Api URL": "/api/v1/uploadMyPhoto",
    "Api Method": "POST",
    "Desc": "This API sets the profile photo for the currently logged in agent.Note: To upload your photo generate OAuthToken for the scope: Desk.settings.UPDATE,profile.userphoto.UPDATE or Desk.basic.UPDATE,profile.userphoto.UPDATE",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/uploadMyPhoto\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "userPhoto",
        "data_type": "Content-Type:multipart/form-data",
        "description": "Image file containing the agent's photo. Maximum file size allowed is 500KB; maximum file limit is one; and extensions allowed are: .jpg, .png, .gif, and .jpeg."
      }
    ],
    "Response Example": "{\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=3981311\"\n}"
  },
  {
    "Api name": "Get agent photo",
    "Api URL": "/api/v1/agents/{agent_id}/photo?orgId={org_id}",
    "Api Method": "GET",
    "Desc": "This API gets the profile photo for the given agent id.Note: To get agent photo generate OAuthToken for the scope: Desk.settings.READ,profile.userphoto.READ or Desk.basic.READ,profile.userphoto.READ",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=3981311&fileSize=THUMBNAIL\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fileSize",
        "data_type": "string optional, max chars : 100",
        "description": "Size of the image file to download. Values allowed are THUMBNAIL (image with reduced dimensions and size) and ACTUAL (image with actual dimensions and size). The default value is ACTUAL ."
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Delete My Photo",
    "Api URL": "/api/v1/deleteMyPhoto",
    "Api Method": "POST",
    "Desc": "This API deletes the profile photo of the currently logged in agent.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/deleteMyPhoto\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get My Preferences",
    "Api URL": "/api/v1/myPreferences",
    "Api Method": "GET",
    "Desc": "This API fetches the preferences of the currently logged in agent.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myPreferences\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"namePattern\" : [ \"FIRST_NAME\", \"LAST_NAME\" ],\n  \"articleAutoSuggestion\" : \"ENABLED\",\n  \"keyBoardShortcuts\" : \"ENABLED\",\n  \"pinAllAccounts\" : \"ENABLED\",\n  \"outBoxDelayTime\" : \"60S\",\n  \"collapseSidePanel\" : \"DISABLED\",\n  \"pinAllTickets\" : \"ENABLED\",\n  \"ticketConversationView\" : \"ENABLED\",\n  \"contactsView\" : \"LIST\",\n  \"accountsView\" : \"LIST\",\n  \"pinAllContacts\" : \"ENABLED\",\n  \"ticketsView\" : \"DUEDATE_QUEUE\",\n  \"datePattern\" : \"dd/MM/yyyy\",\n  \"defaultSendBehavior\" : \"Send\",\n  \"currentDepartment\" : \"allDepartment\",\n  \"timeFormat\" : \"12-hour\",\n  \"outBoxDelay\" : \"DISABLED\",\n  \"pinAllDashboards\" : \"DISABLED\",\n  \"loginLandingPage\" : \"LISTVIEW\",\n  \"loadGettingStartedPage\" : \"DISABLED\",\n  \"pinAllReports\" : \"ENABLED\"\n}"
  },
  {
    "Api name": "Update My Preferences",
    "Api URL": "/api/v1/myPreferences",
    "Api Method": "PATCH",
    "Desc": "This API updates the preferences of the currently logged in agent.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/myPreferences\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"namePattern\" : [ \"LAST_NAME\", \"FIRST_NAME\" ],\n  \"articleAutoSuggestion\" : \"ENABLED\",\n  \"keyBoardShortcuts\" : \"ENABLED\",\n  \"pinAllAccounts\" : \"ENABLED\",\n  \"outBoxDelayTime\" : \"60S\",\n  \"collapseSidePanel\" : \"DISABLED\",\n  \"pinAllTickets\" : \"ENABLED\",\n  \"ticketConversationView\" : \"ENABLED\",\n  \"contactsView\" : \"LIST\",\n  \"accountsView\" : \"LIST\",\n  \"pinAllContacts\" : \"ENABLED\",\n  \"ticketsView\" : \"STATUS_QUEUE\",\n  \"defaultSendBehavior\" : \"Send\",\n  \"datePattern\" : \"dd/MM/yyyy\",\n  \"currentDepartment\" : \"1892000000082069\",\n  \"timeFormat\" : \"12-hour\",\n  \"outBoxDelay\" : \"DISABLED\",\n  \"pinAllDashboards\" : \"DISABLED\",\n  \"loginLandingPage\" : \"LISTVIEW\",\n  \"loadGettingStartedPage\" : \"DISABLED\",\n  \"pinAllReports\" : \"ENABLED\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "namePattern",
        "data_type": "List optional",
        "description": "Pattern that defines how the names should be displayed"
      },
      {
        "name": "currentDepartment",
        "data_type": "long optional",
        "description": "A valid active departmentId to which the agent is associated | 'allDepartment'"
      },
      {
        "name": "reportDurationFormat",
        "data_type": "string optional, max chars : 100",
        "description": "Pattern that defines which duration format is used for duration fields in Reports"
      },
      {
        "name": "ui_appearance",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App appearance: light or dark or auto or pureDark"
      },
      {
        "name": "ui_lhsTheme",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Left panel appearance: light or dark"
      },
      {
        "name": "ui_pureDarkMode",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the pure dark Mode: ENABLED or DISABLED"
      },
      {
        "name": "ui_themes",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App theme: red or green or blue or yellow or orange or pink or skyBlue or teal"
      },
      {
        "name": "ui_displayLayout",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App layout that is optimal for your screen resolution: smartFocus or focusedWidth or fullWidth"
      },
      {
        "name": "ui_displayLayoutWidth",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App layout width: 59 to 89"
      },
      {
        "name": "ui_appFontFamily",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App font family: Zoho Puvi or Lato or Roboto or Vazirmatn"
      },
      {
        "name": "ui_appFontSize",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App font size: 8 to 24"
      },
      {
        "name": "core_editorFontFamily",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Editor font family: Lato or Roboto or Zoho Puvi or Arial or Carlito or Helvetica or Verdana or Wide or Courier New or Comic Sans MS or Garamond or Georgia or Narrow or Serif or Tahoma or Times New Roman or MotoyaLMaru or Trebuchet or Mulish or Vazirmatn"
      },
      {
        "name": "core_editorFontSize",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Editor Font Size: 8 or 10 or 12 or 14 or 18 or 24 36"
      },
      {
        "name": "core_isPublicComment",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Public comment: ENABLED or DISABLED"
      },
      {
        "name": "a11y_criticalLink",
        "data_type": "string optional, max chars : 100",
        "description": "Highlight the Critical link: ENABLED or DISABLED"
      },
      {
        "name": "a11y_underlineLink",
        "data_type": "string optional, max chars : 100",
        "description": "Highlight the link by Underline: ENABLED or DISABLED"
      },
      {
        "name": "a11y_highlightClick",
        "data_type": "string optional, max chars : 100",
        "description": "Highlight the Clickable area: ENABLED or DISABLED"
      },
      {
        "name": "a11Y_animationControls",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Animations: regularmotion or reducedmotion or autoReducedmotion"
      },
      {
        "name": "a11y_customScroll",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Custom scroll: ENABLED or DISABLED"
      },
      {
        "name": "a11y_zoomLevel",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App Zoom level: 8 to 24"
      },
      {
        "name": "a11y_isFontSizeAdaptToZoom",
        "data_type": "string optional, max chars : 100",
        "description": "Set the App Font size based on the zoom level: ENABLED or DISABLED"
      },
      {
        "name": "a11y_needAccessibilityShortCutInWms",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Accessibility ShortCut in wms: ENABLED or DISABLED"
      },
      {
        "name": "a11y_contrast",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the App Increased Contrast: ENABLED or DISABLED"
      },
      {
        "name": "a11y_contrastLevel",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App Contrast level: low or medium or high"
      },
      {
        "name": "a11y_isContrastRatioAdaptForBg",
        "data_type": "string optional, max chars : 100",
        "description": "Automatically Adapt the Contrast ratio for backgrounds: ENABLED or DISABLED"
      },
      {
        "name": "a11y_readingMask",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the App Rading Mask: ENABLED or DISABLED"
      },
      {
        "name": "a11y_readingMaskLevel",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Reading mask level: small or medium or full or custom"
      },
      {
        "name": "a11y_readingMaskHeight",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Reading mask height: 10 to 90"
      },
      {
        "name": "a11y_readingMaskWidth",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Reading mask width: 10 to 100"
      },
      {
        "name": "a11y_readingMaskOpacity",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Reding mask opacity: 0.15 to 0.9"
      },
      {
        "name": "core_ticketReplyActions",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Ticket Reply Action Buttons: reply or replyAll or forward or reply_replyAll or reply_forward or replyAll_forward or replyAll_reply or forward_reply or forward_replyAll or forward_replyAll_reply or forward_reply_replyAll or replyAll_forward_reply or replyAll_reply_forward or reply_forward_replyAll or reply_replyAll_forward"
      },
      {
        "name": "core_ticketReplyActionsOrder",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Ticket Reply Action Button dropdown list order: forward_replyAll_reply or forward_reply_replyAll or replyAll_forward_reply or replyAll_reply_forward or reply_forward_replyAll or reply_replyAll_forward"
      },
      {
        "name": "core_needEmptyQueueColumn",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Empty Queue column: ENABLED or DISABLED"
      },
      {
        "name": "communityListViewMode",
        "data_type": "string optional, max chars : 100",
        "description": "The way in which the community topics should be displayed. The allowed values are CLASSIC or COMPACT"
      },
      {
        "name": "communityTopicsSortOrder",
        "data_type": "string optional, max chars : 100",
        "description": "Sort the list of community topics based on order. The allowed values are ascending or descending"
      },
      {
        "name": "communityTopicsSortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort the list of community topics based on time. The allowed values are createdTime or modifiedTime"
      },
      {
        "name": "communityTopicsRecordsPerPage",
        "data_type": "string optional, max chars : 100",
        "description": "The number of community topics to be listed on a single page"
      },
      {
        "name": "core_dviBarTabWidth",
        "data_type": "string optional, max chars : 100",
        "description": "Set the width for detail view ibarTab: 357 or 1 to 100 as the decimal value"
      },
      {
        "name": "a11y_focusRing",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the focusRing: ENABLED or DISABLED"
      },
      {
        "name": "a11y_focusRingEnabledPlaces",
        "data_type": "string optional, max chars : 100",
        "description": "Select the focusRing enabled places: all or main"
      },
      {
        "name": "a11y_notificationView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the notification view: stack or list"
      },
      {
        "name": "a11y_isSuccessNotificationAutoClose",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Success notification autoClose: ENABLED or DISABLED"
      },
      {
        "name": "a11y_successNotifcationAutoCloseTime",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Success notification auto close time: 01 or 03 or 05 or 10 or 15 or 20"
      },
      {
        "name": "a11y_isErrorNotificationAutoClose",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Error notification autoClose: ENABLED or DISABLED"
      },
      {
        "name": "a11y_errorNotificationAutoCloseTime",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Error notification auto close time: 01 or 03 or 05 or 10 or 15 or 20"
      },
      {
        "name": "a11y_customCursor",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the App Custom cursor: ENABLED or DISABLED"
      },
      {
        "name": "a11y_customCursorSize",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App Custom cursor size: 8 or 16 or 24 or 32"
      },
      {
        "name": "a11y_customCursorColor",
        "data_type": "string optional, max chars : 100",
        "description": "Select the App Custom cursor color: black or white"
      },
      {
        "name": "a11y_adhdFriendly",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the adhdFriendly persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_astigmatism",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the astigmatism persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_blindness",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the blindness persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_colorBlindness",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the colorBlindness persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_dyslexia",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the dyslexia persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_epilepsy",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the epilepsy persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_elderly",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the elderly persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_motorDisabilities",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the motorDisabilities persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_seizureSafe",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the seizureSafe persona: ENABLED or DISABLED"
      },
      {
        "name": "a11y_visuallyImpaired",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the visuallyImpaired persona: ENABLED or DISABLED"
      },
      {
        "name": "core_ticketsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Tickets module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_contactsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Contacts module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_accountsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Accounts module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_contractsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Contracts module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_callsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Calls module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_tasksDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Tasks module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_eventsDvIbarPanelView",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Events module Detailview Ibar Panel view: collapse or expand"
      },
      {
        "name": "core_isTicketReplySendAndUpdateStatus",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable Ticket Reply Send and Update status: ENABLED or DISABLED"
      },
      {
        "name": "ui_tagColorVariant",
        "data_type": "string optional, max chars : 100",
        "description": "Select Tag color variant: bold or subtle or minimal"
      },
      {
        "name": "ui_isTagTextDefaultColor",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the Tag text default color: ENABLED or DISABLED"
      },
      {
        "name": "core_ticketsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Tickets Table View content style: wrap or clip"
      },
      {
        "name": "core_contactsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Contacts Table View content style: wrap or clip"
      },
      {
        "name": "core_accountsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Accounts Table View content style: wrap or clip"
      },
      {
        "name": "core_contractsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Contracts Table View content style: wrap or clip"
      },
      {
        "name": "core_callsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Calls Table View content style: wrap or clip"
      },
      {
        "name": "core_tasksTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Tasks Table View content style: wrap or clip"
      },
      {
        "name": "core_eventsTableViewContentStyle",
        "data_type": "string optional, max chars : 100",
        "description": "Select the Events Table View content style: wrap or clip"
      },
      {
        "name": "a11y_strikeThroughDisabledButton",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the strikeThrough disabled button: ENABLED or DISABLED"
      },
      {
        "name": "a11y_switchLabel",
        "data_type": "string optional, max chars : 100",
        "description": "Enable or Disable the switch label: ENABLED or DISABLED"
      },
      {
        "name": "feedNotificationFilterPreference",
        "data_type": "string optional, max chars : 100",
        "description": "Feeds Notification Preference value"
      }
    ],
    "Response Example": "-d'{\n  \"namePattern\" : [ \"LAST_NAME\", \"FIRST_NAME\" ],\n  \"articleAutoSuggestion\" : \"ENABLED\",\n  \"keyBoardShortcuts\" : \"ENABLED\",\n  \"pinAllAccounts\" : \"ENABLED\",\n  \"outBoxDelayTime\" : \"60S\",\n  \"collapseSidePanel\" : \"DISABLED\",\n  \"pinAllTickets\" : \"ENABLED\",\n  \"ticketConversationView\" : \"ENABLED\",\n  \"contactsView\" : \"LIST\",\n  \"accountsView\" : \"LIST\",\n  \"pinAllContacts\" : \"ENABLED\",\n  \"ticketsView\" : \"STATUS_QUEUE\",\n  \"defaultSendBehavior\" : \"Send\",\n  \"datePattern\" : \"dd/MM/yyyy\",\n  \"currentDepartment\" : \"1892000000082069\",\n  \"timeFormat\" : \"12-hour\",\n  \"outBoxDelay\" : \"DISABLED\",\n  \"pinAllDashboards\" : \"DISABLED\",\n  \"loginLandingPage\" : \"LISTVIEW\",\n  \"loadGettingStartedPage\" : \"DISABLED\",\n  \"pinAllReports\" : \"ENABLED\"\n}'"
  },
  {
    "Api name": "Get agent by email ID",
    "Api URL": "/api/v1/agents/email/{email}",
    "Api Method": "GET",
    "Desc": "This API fetches details of an agent via the email ID passed in the API request.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/email/case@zylker.com\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"lastName\" : \"case\",\n  \"extn\" : \"3298\",\n  \"roleId\" : \"1892000000056099\",\n  \"langCode\" : \"fr_FR\",\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"emailId\" : \"case@zylker.com\",\n  \"associatedChatDepartmentIds\" : [ ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n  \"firstName\" : \"\",\n  \"photoURL\" : null,\n  \"phone\" : \"492-736-6424\",\n  \"profileId\" : \"1892000000056091\",\n  \"countryCode\" : \"en_US\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"case\",\n  \"rolePermissionType\" : \"Admin\",\n  \"isConfirmed\" : true,\n  \"aboutInfo\" : \"Expert in handling Tasks and Automations\",\n  \"id\" : \"1892000000056007\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Schedule reassignment for deactivated or deleted agents",
    "Api URL": "/api/v1/agents/{agent_id}/reassignment",
    "Api Method": "POST",
    "Desc": "This API schedules reassignment of tickets, tasks, and automations belonging to a deleted/deactivated agent to another agent within the same department.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/19000001075071/reassignment\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentReassignment\" : [ {\n    \"departmentId\" : 19000000012754,\n    \"taskNewOwner\" : \"19000000008734\",\n    \"ticketNewOwner\" : \"19000000142005\"\n  }, {\n    \"departmentId\" : 19000000010674,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  }, {\n    \"departmentId\" : 19000000007073,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentReassignment",
        "data_type": "list required",
        "description": "Details of agents to whom the resources associated with the agent will be reassigned"
      }
    ],
    "Response Example": "-d'{\n  \"agentReassignment\" : [ {\n    \"departmentId\" : 19000000012754,\n    \"taskNewOwner\" : \"19000000008734\",\n    \"ticketNewOwner\" : \"19000000142005\"\n  }, {\n    \"departmentId\" : 19000000010674,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  }, {\n    \"departmentId\" : 19000000007073,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  } ]\n}'"
  },
  {
    "Api name": "Profiles",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Profiles control the user permissions to access help desk modules, records, fields in a record, and other utilities, such as import, export, send email, etc. Users associated with a profile can access only the functions that are assigned to that profile.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the profile"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the profile"
      },
      {
        "name": "isVisible",
        "data_type": "boolean",
        "description": "If the profile is visible in UI"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the profile. Possible values are Administrator , Standard , Light , Portal , and Custom"
      },
      {
        "name": "default",
        "data_type": "boolean",
        "description": "If the profile is system generated"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Id of the profile"
      },
      {
        "name": "permissions show Attributes",
        "data_type": "object",
        "description": "Details of the permissions for the profile"
      },
      {
        "name": "timeEntry show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "accounts show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "courses show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "contracts show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "tasks show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "kbCategory show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "contacts show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "reports show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "products show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "tickets show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "mergeTickets",
        "data_type": "boolean",
        "description": "Permission to merge Tickets"
      },
      {
        "name": "editTags",
        "data_type": "boolean",
        "description": "Edit Tags"
      },
      {
        "name": "deleteTags",
        "data_type": "boolean",
        "description": "Delete Tags"
      },
      {
        "name": "mailSend",
        "data_type": "boolean",
        "description": "Permission to send out email responses for support Tickets."
      },
      {
        "name": "changeOwner",
        "data_type": "boolean",
        "description": "Permission to change ownership for Tickets assigned to agents and that of others."
      },
      {
        "name": "unassignedChangeOwner",
        "data_type": "boolean",
        "description": "Permission to change ownership for Unassigned Tickets"
      },
      {
        "name": "addFollowers",
        "data_type": "boolean",
        "description": "Permission to add followers to a Ticket"
      },
      {
        "name": "mailReview",
        "data_type": "boolean",
        "description": "Permission to approve response emails sent for review."
      },
      {
        "name": "handleUnassigned",
        "data_type": "boolean",
        "description": "Permission to view and assign ownership for unassigned Tickets."
      },
      {
        "name": "closeTicket",
        "data_type": "boolean",
        "description": "Permission to close a Ticket"
      },
      {
        "name": "shareTickets",
        "data_type": "boolean",
        "description": "Permission to share Tickets Accross departments"
      },
      {
        "name": "revokeBlueprint",
        "data_type": "boolean",
        "description": "Permission to revoke a Blueprint"
      },
      {
        "name": "pinnedConversations",
        "data_type": "boolean",
        "description": "Permission to manage Pinned Conversations for all agents"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "chat show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "community show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "social show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "Permission to manage view social module"
      },
      {
        "name": "twitterPostCreate",
        "data_type": "boolean",
        "description": "Permission to manage create twitter post"
      },
      {
        "name": "twitterPostShare",
        "data_type": "boolean",
        "description": "Permission to manage share twitter post"
      },
      {
        "name": "twitterPostDelete",
        "data_type": "boolean",
        "description": "Permission to manage delete twitter post"
      },
      {
        "name": "twitterConversationReply",
        "data_type": "boolean",
        "description": "Permission to manage reply twitter conversation"
      },
      {
        "name": "mobileapp show Attributes",
        "data_type": "object",
        "description": "Permission details for mobile apps"
      },
      {
        "name": "deskapp",
        "data_type": "boolean",
        "description": "Desk mobile app permission of the module"
      },
      {
        "name": "radar",
        "data_type": "boolean",
        "description": "Radar mobile app permission of the module"
      },
      {
        "name": "agents show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "overview",
        "data_type": "boolean",
        "description": "Agent overview permission"
      },
      {
        "name": "viewAllFields",
        "data_type": "boolean",
        "description": "View agent all fields permission"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the agent"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the agent"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the agent"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "setup show Attributes",
        "data_type": "object",
        "description": "Permission details for settings"
      },
      {
        "name": "telephony",
        "data_type": "boolean",
        "description": "Permission to manage telephony channel"
      },
      {
        "name": "templates",
        "data_type": "boolean",
        "description": "Permission to manage templates"
      },
      {
        "name": "tabsAndFields",
        "data_type": "boolean",
        "description": "Permission to manage tabs and fields"
      },
      {
        "name": "gamification",
        "data_type": "boolean",
        "description": "Permission to manage Gamification"
      },
      {
        "name": "exportReports",
        "data_type": "boolean",
        "description": "Permission to export Reports"
      },
      {
        "name": "department",
        "data_type": "boolean",
        "description": "Permission to manage the different departments added, under setup."
      },
      {
        "name": "automation",
        "data_type": "boolean",
        "description": "Permission to manage the automation features(like Workflows, Macros etc.,) under setup."
      },
      {
        "name": "sandbox",
        "data_type": "boolean",
        "description": "Permission to manage the sandbox under setup."
      },
      {
        "name": "fetchAcrossDepartment",
        "data_type": "boolean",
        "description": "Permission to fetch data across departments"
      },
      {
        "name": "ticketStatus",
        "data_type": "boolean",
        "description": "Permission to manage the different Tickets statuses under setup."
      },
      {
        "name": "community",
        "data_type": "boolean",
        "description": "Permission to manage community channel"
      },
      {
        "name": "portal",
        "data_type": "boolean",
        "description": "Permission to manage Customer Portal channel"
      },
      {
        "name": "chat",
        "data_type": "boolean",
        "description": "Permission to manage chat channel"
      },
      {
        "name": "globalReports",
        "data_type": "boolean",
        "description": "Permission to manage global reports"
      },
      {
        "name": "exportPortalUsers",
        "data_type": "boolean",
        "description": "Permission to export portal users"
      },
      {
        "name": "webForm",
        "data_type": "boolean",
        "description": "Permission to manage web forms"
      },
      {
        "name": "manageAgents",
        "data_type": "boolean",
        "description": "Permission to manage agents"
      },
      {
        "name": "rebranding",
        "data_type": "boolean",
        "description": "Permission to manage rebranding"
      },
      {
        "name": "email",
        "data_type": "boolean",
        "description": "Permission to configure email channel"
      },
      {
        "name": "managerDashboard",
        "data_type": "boolean",
        "description": "Permission to view the dashboard on your home page with data related to all of your agents."
      },
      {
        "name": "moveRecords",
        "data_type": "boolean",
        "description": "Permission to move Records Accross departments"
      },
      {
        "name": "importHistory",
        "data_type": "boolean",
        "description": "Permission to Enable the View and Management of Import's history"
      },
      {
        "name": "social",
        "data_type": "boolean",
        "description": "Permission to manage Social Channel"
      },
      {
        "name": "permission",
        "data_type": "boolean",
        "description": "Permission to administer roles, profiles, data sharing and field-level security settings."
      },
      {
        "name": "customerHappiness",
        "data_type": "boolean",
        "description": "Permission to Ratings manage customer happiness ratings under setup"
      },
      {
        "name": "layouts",
        "data_type": "boolean",
        "description": "Permission to manage layouts"
      },
      {
        "name": "exportUsers",
        "data_type": "boolean",
        "description": "Permission to export users"
      },
      {
        "name": "portalUsers",
        "data_type": "boolean",
        "description": "Permission to invite and manage your customer portal users under setup."
      },
      {
        "name": "signUpApproval",
        "data_type": "boolean",
        "description": "Permission to manage approve end user signups"
      },
      {
        "name": "timeTracking",
        "data_type": "boolean",
        "description": "Permission to manage Time Tracking under setup."
      },
      {
        "name": "subscription",
        "data_type": "boolean",
        "description": "Permission to manage Subscription."
      },
      {
        "name": "featureConfig",
        "data_type": "boolean",
        "description": "Permission to manage General Settings"
      },
      {
        "name": "recycleBin",
        "data_type": "boolean",
        "description": "Permission to manage RecycleBin"
      },
      {
        "name": "webhooks",
        "data_type": "boolean",
        "description": "Permission to manage Webhooks."
      },
      {
        "name": "teams",
        "data_type": "boolean",
        "description": "Permission to manage teams"
      },
      {
        "name": "googleAnalytics",
        "data_type": "boolean",
        "description": "Permission to manage Google Analytics"
      },
      {
        "name": "im",
        "data_type": "boolean",
        "description": "Permission to manage IM channel."
      },
      {
        "name": "privacySettings",
        "data_type": "boolean",
        "description": "Permission to manage privacy settings"
      },
      {
        "name": "localization",
        "data_type": "boolean",
        "description": "Permission to manage localization"
      },
      {
        "name": "massReply",
        "data_type": "boolean",
        "description": "Permission to manage mass reply"
      },
      {
        "name": "manageMarketplace",
        "data_type": "boolean",
        "description": "Permission to manage marketplace"
      },
      {
        "name": "shareSnippet",
        "data_type": "boolean",
        "description": "Permission to manage share snippet"
      },
      {
        "name": "securitySettings",
        "data_type": "boolean",
        "description": "Permission to manage Security Settings"
      },
      {
        "name": "buttons",
        "data_type": "boolean",
        "description": "Permission to manage Buttons"
      },
      {
        "name": "pinnedConversations",
        "data_type": "boolean",
        "description": "Permission to manage Pinned Conversations"
      },
      {
        "name": "massComment",
        "data_type": "boolean",
        "description": "Permission to manage Mass Comment"
      },
      {
        "name": "manageAgentRoom",
        "data_type": "boolean",
        "description": "Permission to manage Agent Room"
      },
      {
        "name": "comments show Attributes",
        "data_type": "object",
        "description": "Permission details for comments"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Permission to edit comments"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Permission to delete comments"
      },
      {
        "name": "crmInteg show Attributes",
        "data_type": "object",
        "description": "Permission details for CRM integration"
      },
      {
        "name": "crmAccountsPotentials",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Potentials"
      },
      {
        "name": "crmAccountsInfo",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Info"
      },
      {
        "name": "crmAccountsActivityCalls",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Activity Calls"
      },
      {
        "name": "crmAccountsActivityEvents",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Activity Events"
      },
      {
        "name": "crmAccountsActivityTasks",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Activity Tasks"
      },
      {
        "name": "crmAccountsNotes",
        "data_type": "boolean",
        "description": "Permission to manage Crm Account Notes"
      },
      {
        "name": "crmContactsInfo",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Info"
      },
      {
        "name": "crmContactsPotentials",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Potentials"
      },
      {
        "name": "crmContactsActivityCalls",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Activity Calls"
      },
      {
        "name": "crmContactsActivityEvents",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Activity Events"
      },
      {
        "name": "crmContactsActivityTasks",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Activity Tasks"
      },
      {
        "name": "crmContactsNotes",
        "data_type": "boolean",
        "description": "Permission to manage Crm Contact Notes"
      },
      {
        "name": "calls show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "events show Attributes",
        "data_type": "object",
        "description": "Permission details for the module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "financeInteg show Attributes",
        "data_type": "object",
        "description": "Permission details for Zoho Finance integration"
      },
      {
        "name": "viewInvoice",
        "data_type": "boolean",
        "description": "Permission to manage view invoice details"
      },
      {
        "name": "createInvoice",
        "data_type": "boolean",
        "description": "Permission to manage create invoice"
      },
      {
        "name": "sendInvoice",
        "data_type": "boolean",
        "description": "Permission to manage send invoice"
      },
      {
        "name": "viewEstimate",
        "data_type": "boolean",
        "description": "Permission to manage view estimate details"
      },
      {
        "name": "createEstimate",
        "data_type": "boolean",
        "description": "Permission to manage create estimate"
      },
      {
        "name": "sendEstimate",
        "data_type": "boolean",
        "description": "Permission to manage send estimate"
      },
      {
        "name": "viewSalesOrder",
        "data_type": "boolean",
        "description": "Permission to manage view salesorder details"
      },
      {
        "name": "createSalesOrder",
        "data_type": "boolean",
        "description": "Permission to manage create salesorder"
      },
      {
        "name": "sendSalesOrder",
        "data_type": "boolean",
        "description": "Permission to manage send salesorder"
      },
      {
        "name": "viewSubscription",
        "data_type": "boolean",
        "description": "Permission to manage view salesorder details"
      },
      {
        "name": "createContact",
        "data_type": "boolean",
        "description": "Permission to manage create contact"
      },
      {
        "name": "im show Attributes",
        "data_type": "object",
        "description": "Permission details for the IM module"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "gc show Attributes",
        "data_type": "object",
        "description": "Permission details for GC"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission for GC components"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission for GC components"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission for GC components"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission for GC components"
      },
      {
        "name": "zia show Attributes",
        "data_type": "object",
        "description": "Permission details for Zia"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission for Zia components"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission for Zia components"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission for Zia components"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission for Zia components"
      },
      {
        "name": "view",
        "data_type": "boolean",
        "description": "View Permission of the module"
      },
      {
        "name": "create",
        "data_type": "boolean",
        "description": "Create Permission of the module"
      },
      {
        "name": "edit",
        "data_type": "boolean",
        "description": "Edit Permission of the module"
      },
      {
        "name": "editAllArticles",
        "data_type": "boolean",
        "description": "Edit published articles permission of the module"
      },
      {
        "name": "moderate",
        "data_type": "boolean",
        "description": "moderate post / comment of community module"
      },
      {
        "name": "delete",
        "data_type": "boolean",
        "description": "Delete Permission of the module"
      },
      {
        "name": "import",
        "data_type": "boolean",
        "description": "Import Permission of the module"
      },
      {
        "name": "export",
        "data_type": "boolean",
        "description": "Export Permission of the module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      },
      {
        "name": "radar show Attributes",
        "data_type": "object",
        "description": "Permission details for Radar"
      },
      {
        "name": "manageRadar",
        "data_type": "boolean",
        "description": "Radar mobile app acessible widget management permission"
      },
      {
        "name": "liveTraffic",
        "data_type": "boolean",
        "description": "Radar mobile app Live Traffic Widget"
      },
      {
        "name": "channelTraffic",
        "data_type": "boolean",
        "description": "Radar mobile app Channel Traffic Widget"
      },
      {
        "name": "currentStats",
        "data_type": "boolean",
        "description": "Radar mobile app Current Stats Widget"
      },
      {
        "name": "fcr",
        "data_type": "boolean",
        "description": "Radar mobile app FCR Widget"
      },
      {
        "name": "averageHandlingTime",
        "data_type": "boolean",
        "description": "Radar mobile app Average Handling Time Widget"
      },
      {
        "name": "customerHappiness",
        "data_type": "boolean",
        "description": "Radar mobile app Customer Happiness Widget"
      },
      {
        "name": "agentStats",
        "data_type": "boolean",
        "description": "Radar mobile app Agent Stats Widget"
      },
      {
        "name": "dailyTrend",
        "data_type": "boolean",
        "description": "Radar mobile app Daily Trend Widget"
      },
      {
        "name": "quickView",
        "data_type": "boolean",
        "description": "Radar mobile app Quick View Widget"
      },
      {
        "name": "feeds",
        "data_type": "boolean",
        "description": "Radar mobile app Feeds Widget"
      },
      {
        "name": "dashboards",
        "data_type": "boolean",
        "description": "Radar mobile app Dashboards Widget"
      },
      {
        "name": "mostThreadedTickets",
        "data_type": "boolean",
        "description": "Radar mobile app Most Threaded Tickets Widget"
      },
      {
        "name": "im",
        "data_type": "boolean",
        "description": "Radar mobile app IM Widget"
      },
      {
        "name": "contacts",
        "data_type": "boolean",
        "description": "Radar mobile app Contacts Widget"
      },
      {
        "name": "activities",
        "data_type": "boolean",
        "description": "Radar mobile app Activities Widget"
      },
      {
        "name": "kb",
        "data_type": "boolean",
        "description": "Radar mobile app KB Widget"
      },
      {
        "name": "auditLog",
        "data_type": "boolean",
        "description": "Radar mobile app Audit Log Widget"
      },
      {
        "name": "exceptionHandling",
        "data_type": "boolean",
        "description": "Radar mobile app Exception Handling Widget"
      },
      {
        "name": "dailyToast",
        "data_type": "boolean",
        "description": "Radar mobile app Daily Toast Widget"
      },
      {
        "name": "visualContentProtection",
        "data_type": "boolean",
        "description": "Radar mobile app Visual Content Protection"
      },
      {
        "name": "textContentProtection",
        "data_type": "boolean",
        "description": "Radar mobile app Text Content Protection"
      },
      {
        "name": "apiUsageAlerts",
        "data_type": "boolean",
        "description": "Radar mobile app API Usage Alerts Widget"
      },
      {
        "name": "activities show Attributes",
        "data_type": "object",
        "description": "Permission details for activities module"
      },
      {
        "name": "manageOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to manage personal customviews"
      },
      {
        "name": "shareOwnCustomViews",
        "data_type": "boolean",
        "description": "Permission to share personal customviews"
      },
      {
        "name": "editSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to edit others customviews"
      },
      {
        "name": "deleteSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to delete others customviews"
      },
      {
        "name": "reshareSharedCustomViews",
        "data_type": "boolean",
        "description": "Permission to share others customviews"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List profiles",
    "Api URL": "/api/v1/profiles",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of user profiles, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/profiles?visible=true\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "visible",
        "data_type": "boolean optional",
        "description": "Key that filters profiles according to their visibility in the UI"
      },
      {
        "name": "default",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the profiles must be default profiles or custom profiles"
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for profile by name or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for profiles whose name or description start with the string, 2) *string* - Searches for profiles whose name or description contain the string, 3) string -  Searches for profiles whose name or description is an exact match for the string"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"revokeBlueprint\" : true,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : true\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"manageKB\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"admin\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : true,\n        \"timeTracking\" : true,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : true,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : true,\n        \"automation\" : true,\n        \"featureConfig\" : true,\n        \"customerHappiness\" : true,\n        \"department\" : true,\n        \"portal\" : true,\n        \"webForm\" : true,\n        \"rebranding\" : true,\n        \"email\" : true,\n        \"recycleBin\" : true,\n        \"tabsAndFields\" : true,\n        \"exportUsers\" : true,\n        \"teams\" : true,\n        \"social\" : true,\n        \"templates\" : true,\n        \"sandbox\" : true,\n        \"moveRecords\" : true,\n        \"permission\" : true,\n        \"signUpApproval\" : true,\n        \"community\" : true,\n        \"importHistory\" : true,\n        \"manageAgents\" : true,\n        \"portalUsers\" : true,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : true,\n        \"telephony\" : true,\n        \"manageMarketplace\" : true\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Support Administrator\",\n    \"description\" : \"Set the privileges for support administrators.\",\n    \"id\" : \"5000000015288\",\n    \"isVisible\" : true,\n    \"type\" : \"Administrator\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : false,\n        \"import\" : false,\n        \"handleUnassigned\" : false,\n        \"edit\" : false,\n        \"closeTicket\" : false,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : false,\n        \"delete\" : false,\n        \"view\" : true,\n        \"create\" : false,\n        \"addFollowers\" : false,\n        \"export\" : true,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : false\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : false,\n        \"import\" : false,\n        \"manageKB\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"admin\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Light Agent\",\n    \"description\" : \"Set the privilege for light agents\",\n    \"id\" : \"5000000015306\",\n    \"isVisible\" : true,\n    \"type\" : \"Light\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : true,\n        \"import\" : false,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : false,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : false,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : false,\n        \"export\" : false,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"community\" : {\n        \"view\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : false,\n        \"manageKB\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"admin\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : false,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      }\n    },\n    \"name\" : \"Newbie Agent\",\n    \"description\" : \"Set the privileges for new agents.\",\n    \"id\" : \"5000000015303\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : false,\n        \"import\" : false,\n        \"handleUnassigned\" : false,\n        \"edit\" : false,\n        \"closeTicket\" : false,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : false,\n        \"delete\" : false,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : false,\n        \"export\" : true,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : false,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"community\" : {\n        \"view\" : false\n      },\n      \"products\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : false,\n        \"import\" : false,\n        \"manageKB\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"admin\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : false,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"timeEntry\" : {\n        \"view\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false\n      },\n      \"contacts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"tasks\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      }\n    },\n    \"name\" : \"Help Center\",\n    \"description\" : \"This profile will have the permissions of End Users\",\n    \"id\" : \"5000000015294\",\n    \"isVisible\" : false,\n    \"type\" : \"Portal\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : false\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"manageKB\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"admin\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Agent\",\n    \"description\" : \"Set the privileges for standard agents\",\n    \"id\" : \"5000000015291\",\n    \"isVisible\" : true,\n    \"type\" : \"Standard\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"manageKB\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"admin\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Supervisor\",\n    \"description\" : \"Set the privileges for supervisory users.\",\n    \"id\" : \"5000000015297\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"revokeBlueprint\" : false,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true,\n        \"twitterPostDelete\" : true,\n        \"twitterPostCreate\" : true,\n        \"twitterConversationReply\" : true\n      },\n      \"mobileapp\" : {\n        \"radar\" : true,\n        \"deskapp\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"manageKB\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"admin\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"localization\" : false,\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : true,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"recycleBin\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"sandbox\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : false,\n        \"telephony\" : false,\n        \"manageMarketplace\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Support Manager\",\n    \"description\" : \"Set the privileges for managerial users.\",\n    \"id\" : \"5000000015300\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  } ]\n}"
  },
  {
    "Api name": "Get profile count",
    "Api URL": "/api/v1/profiles/count",
    "Api Method": "GET",
    "Desc": "This API fetches the number of profiles configured in your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/profiles/count?visible=true\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "visible",
        "data_type": "boolean optional",
        "description": "Key that filters profiles according to their visibility in the UI"
      },
      {
        "name": "default",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the profiles must be default profiles or custom profiles"
      }
    ],
    "Response Example": "{\n  \"count\" : 8\n}"
  },
  {
    "Api name": "Get profile",
    "Api URL": "/api/v1/profiles/{profile_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular profile.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/profiles/4000000008464\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"revokeBlueprint\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true,\n      \"twitterPostDelete\" : true,\n      \"twitterPostCreate\" : true,\n      \"twitterConversationReply\" : true\n    },\n    \"mobileapp\" : {\n      \"radar\" : true,\n      \"deskapp\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"manageKB\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"admin\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"localization\" : true,\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"recycleBin\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"sandbox\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true,\n      \"manageMarketplace\" : true\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Support Administrator\",\n  \"description\" : \"Set the privileges for support administrators.\",\n  \"id\" : \"4000000008464\",\n  \"isVisible\" : true,\n  \"type\" : \"Administrator\"\n}"
  },
  {
    "Api name": "Clone profile",
    "Api URL": "/api/v1/profiles/{profile_id}/clone",
    "Api Method": "POST",
    "Desc": "This API replicates an existing profile.",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/profiles/4000000008543/clone\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Admin Advisors\",\n  \"description\" : \"Advisors from management to assist the Support Administrators.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 50",
        "description": "Name of the profile to be created"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of the profile to be created"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Admin Advisors\",\n  \"description\" : \"Advisors from management to assist the Support Administrators.\"\n}'"
  },
  {
    "Api name": "Update profile",
    "Api URL": "/api/v1/profiles/{profile_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing profile.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/profiles/4000000018001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"permissions\" : {\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : false\n    }\n  },\n  \"name\" : \"Agent Advisors\",\n  \"description\" : \"Advisors from CRM to assist the Support Agents.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string optional, max chars : 50",
        "description": "Name of the profile"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 3200",
        "description": "Description of the profile"
      },
      {
        "name": "permissions show Attributes",
        "data_type": "object optional",
        "description": "Details of the permissions for the profile"
      }
    ],
    "Response Example": "-d'{\n  \"permissions\" : {\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : false\n    }\n  },\n  \"name\" : \"Agent Advisors\",\n  \"description\" : \"Advisors from CRM to assist the Support Agents.\"\n}'"
  },
  {
    "Api name": "Delete profile",
    "Api URL": "/api/v1/profiles/{profile_id}/delete",
    "Api Method": "POST",
    "Desc": "This API deletes a profile from your help desk.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/profiles/4000000018001/delete\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"transferToProfileId\" : \"4000000008454\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "transferToProfileId",
        "data_type": "long required",
        "description": "The profile id to which the agents in the delete profile to be transferred to"
      }
    ],
    "Response Example": "-d'{\n  \"transferToProfileId\" : \"4000000008454\"\n}'"
  },
  {
    "Api name": "Get my profile details",
    "Api URL": "/api/v1/myProfile",
    "Api Method": "GET",
    "Desc": "This API fetches the configuration details and permissions defined for the profile of the currently logged in user.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myProfile\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"revokeBlueprint\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true,\n      \"twitterPostDelete\" : true,\n      \"twitterPostCreate\" : true,\n      \"twitterConversationReply\" : true\n    },\n    \"mobileapp\" : {\n      \"radar\" : true,\n      \"deskapp\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"manageKB\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"admin\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"localization\" : true,\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"recycleBin\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"sandbox\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true,\n      \"manageMarketplace\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Support Administrator\",\n  \"description\" : \"Set the privileges for support administrators.\",\n  \"id\" : \"35483000000008343\",\n  \"isVisible\" : true,\n  \"type\" : \"Administrator\"\n}"
  },
  {
    "Api name": "Get my profile permissions",
    "Api URL": "/api/v1/myProfilePermissions",
    "Api Method": "GET",
    "Desc": "This API fetches the permissions associated with the profile of the currently logged in user.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myProfilePermissions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"revokeBlueprint\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true,\n      \"twitterPostDelete\" : true,\n      \"twitterPostCreate\" : true,\n      \"twitterConversationReply\" : true\n    },\n    \"mobileapp\" : {\n      \"radar\" : true,\n      \"deskapp\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"manageKB\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"admin\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"localization\" : true,\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"recycleBin\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"sandbox\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true,\n      \"manageMarketplace\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  }\n}"
  },
  {
    "Api name": "List agents by profile",
    "Api URL": "/api/v1/profiles/{profile_id}/agents",
    "Api Method": "GET",
    "Desc": "This API lists agents mapped to a particular profile.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/profiles/6000000011303/agents?active=true\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "active",
        "data_type": "boolean optional",
        "description": "Activation status of the agents to list"
      },
      {
        "name": "confirmed",
        "data_type": "boolean optional",
        "description": "Confirmation status of the agents to list"
      }
    ],
    "Response Example": "{\n  \"agents\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"John\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=437793\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"6000000011303\",\n    \"emailId\" : \"john@zylker.com\",\n    \"id\" : \"7000000013328\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"6000000011303\",\n    \"emailId\" : \"kyle@zylker.com\",\n    \"id\" : \"7000000012958\",\n    \"zuid\" : \"5625416\"\n  } ]\n}"
  },
  {
    "Api name": "Get light agent profile",
    "Api URL": "/api/v1/lightAgentProfile",
    "Api Method": "GET",
    "Desc": "This API fetches the different permissions configured for the light agent profile.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/lightAgentProfile\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : false,\n      \"changeOwner\" : false,\n      \"import\" : false,\n      \"handleUnassigned\" : false,\n      \"edit\" : false,\n      \"closeTicket\" : false,\n      \"revokeBlueprint\" : false,\n      \"mailReview\" : false,\n      \"delete\" : false,\n      \"view\" : true,\n      \"create\" : false,\n      \"addFollowers\" : false,\n      \"export\" : true,\n      \"mailSend\" : false,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : false\n    },\n    \"comments\" : {\n      \"edit\" : false,\n      \"delete\" : false\n    },\n    \"social\" : {\n      \"view\" : true,\n      \"twitterPostDelete\" : true,\n      \"twitterPostCreate\" : true,\n      \"twitterConversationReply\" : true\n    },\n    \"mobileapp\" : {\n      \"radar\" : true,\n      \"deskapp\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : false\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : false,\n      \"import\" : false,\n      \"manageKB\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"admin\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"localization\" : false,\n      \"timeTracking\" : false,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : false,\n      \"exportPortalUsers\" : false,\n      \"layouts\" : false,\n      \"automation\" : false,\n      \"featureConfig\" : false,\n      \"customerHappiness\" : false,\n      \"department\" : false,\n      \"portal\" : false,\n      \"webForm\" : false,\n      \"rebranding\" : false,\n      \"email\" : false,\n      \"recycleBin\" : false,\n      \"tabsAndFields\" : false,\n      \"exportUsers\" : false,\n      \"teams\" : true,\n      \"social\" : false,\n      \"templates\" : false,\n      \"sandbox\" : false,\n      \"moveRecords\" : false,\n      \"permission\" : false,\n      \"signUpApproval\" : false,\n      \"community\" : false,\n      \"importHistory\" : false,\n      \"manageAgents\" : false,\n      \"portalUsers\" : false,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : false,\n      \"telephony\" : false,\n      \"manageMarketplace\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Light Agent\",\n  \"description\" : \"Set the privilege for light agents\",\n  \"id\" : \"15000000012421\",\n  \"isVisible\" : true,\n  \"type\" : \"Light\"\n}"
  },
  {
    "Api name": "Roles",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Role refers to the user role that can be defined in Zoho Desk. Roles help define organization-wide hierarchy. Users at a higher hierarchy can always access all the records of at a lower hierarchy. For example, a Support Manager can access all the Agents' records, whereas Agents can access only their records.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the role"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "A short description of the role"
      },
      {
        "name": "isVisible",
        "data_type": "boolean",
        "description": "Key that denotes if the role is visible in the UI"
      },
      {
        "name": "isDefault",
        "data_type": "boolean",
        "description": "Key that denotes if the role is the default role"
      },
      {
        "name": "shareDataWithPeers",
        "data_type": "boolean",
        "description": "Key that denotes if the role shares data with its peer roles"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the role"
      },
      {
        "name": "reportsTo",
        "data_type": "long",
        "description": "ID of the role to which the current role reports"
      },
      {
        "name": "immediateSubRoles show Attributes",
        "data_type": "list",
        "description": "IDs of roles that directly report to the current role"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List roles",
    "Api URL": "/api/v1/roles",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of roles, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/roles\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the roles must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 0-500",
        "description": "Number of roles to display. The default value is 15 and the maximum value allowed is 500."
      },
      {
        "name": "isVisible",
        "data_type": "boolean optional",
        "description": "Key that filters roles according to their visibility in the UI"
      },
      {
        "name": "isDefault",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the roles must be default roles or custom roles"
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for roles by name or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for roles whose name or description start with the string, 2) *string* - Searches for roles whose name or description contain the string, 3) string -  Searches for roles whose name or description is an exact match for the string"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : true,\n    \"immediateSubRoles\" : [ \"50000785582324\", \"50000000779019\", \"50000001319909\" ],\n    \"name\" : \"CEO\",\n    \"description\" : \"Agent belongs to this role can access all other user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000000008337\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ \"50000091844659\" ],\n    \"name\" : \"Manager\",\n    \"description\" : \"Agents belongs to this cannot see admin role users data\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000008339\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"PortalUser\",\n    \"description\" : \"User belongs to this role are portal users they can access their cases and solutions only\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000008341\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Development Team Member\",\n    \"description\" : \"Development team members from Engineering\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000469017\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Product Team Member\",\n    \"description\" : \"Products Managers\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000551386\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : true,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Sales Team Member\",\n    \"description\" : \"\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000779019\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Personal\",\n    \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000002634005\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Marketing Team Member\",\n    \"description\" : \"\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000009610999\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"LightAgent\",\n    \"description\" : \"Agents belonging to this role can access all user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000565365005\",\n    \"isVisible\" : false\n  } ]\n}"
  },
  {
    "Api name": "List agents by role",
    "Api URL": "/api/v1/roles/{role_id}/agents",
    "Api Method": "GET",
    "Desc": "This API lists agents mapped to a particular role.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/roles/50000000008446/agents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"associatedAgents\" : [ \"50000000009163\", \"50000000009300\", \"50000000010007\", \"50000000010011\", \"50000000062391\", \"50000000062393\" ]\n}"
  },
  {
    "Api name": "Create role",
    "Api URL": "/api/v1/roles",
    "Api Method": "POST",
    "Desc": "This API creates a role in your help desk.",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/roles\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 50",
        "description": "Name of the role"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 3200",
        "description": "A short description of the role"
      },
      {
        "name": "shareDataWithPeers",
        "data_type": "boolean required",
        "description": "Key that denotes if the role shares data with its peer roles"
      },
      {
        "name": "reportsTo",
        "data_type": "long optional",
        "description": "ID of the role to which the current role reports"
      }
    ],
    "Response Example": "-d'{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}'"
  },
  {
    "Api name": "Update role",
    "Api URL": "/api/v1/roles/{role_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing role.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/roles/5000000002973\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care and Sales Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string optional, max chars : 50",
        "description": "Name of the role"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 3200",
        "description": "A short description of the role"
      },
      {
        "name": "shareDataWithPeers",
        "data_type": "boolean optional",
        "description": "Key that denotes if the role shares data with its peer roles"
      },
      {
        "name": "reportsTo",
        "data_type": "long optional",
        "description": "ID of the role to which the current role reports"
      }
    ],
    "Response Example": "-d'{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care and Sales Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}'"
  },
  {
    "Api name": "Delete role",
    "Api URL": "/api/v1/roles/{role_id}/delete",
    "Api Method": "POST",
    "Desc": "This API deletes a role from your help desk.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/roles/5000000002973/delete\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"transferToRoleId\" : \"5000000008807\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "transferToRoleId",
        "data_type": "long required",
        "description": "Transfer the child-roles to the given role"
      }
    ],
    "Response Example": "-d'{\n  \"transferToRoleId\" : \"5000000008807\"\n}'"
  },
  {
    "Api name": "Get role",
    "Api URL": "/api/v1/roles/{role_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular role.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/roles/4000000012414\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"isDefault\" : true,\n  \"shareDataWithPeers\" : false,\n  \"immediateSubRoles\" : [ \"4000000012420\", \"4000000012417\" ],\n  \"name\" : \"CEO\",\n  \"description\" : \"Agent belongs to this role can access all other user's data.\",\n  \"reportsTo\" : null,\n  \"id\" : \"4000000012414\",\n  \"isVisible\" : true\n}"
  },
  {
    "Api name": "Get role count",
    "Api URL": "/api/v1/roles/count",
    "Api Method": "GET",
    "Desc": "This API fetches the number of roles configured in your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/roles/count\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isVisible",
        "data_type": "boolean optional",
        "description": "Key that filters roles according to their visibility in the UI"
      },
      {
        "name": "isDefault",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the roles must be default roles or custom roles"
      }
    ],
    "Response Example": "{\n  \"count\" : 5\n}"
  },
  {
    "Api name": "Get personal role",
    "Api URL": "/api/v1/personalRole",
    "Api Method": "GET",
    "Desc": "This API fetches the details of the personal role configured in your help desk. Agents with personal role can view only the tickets assigned to them and unassigned tickets.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/personalRole\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"isDefault\" : false,\n  \"shareDataWithPeers\" : false,\n  \"immediateSubRoles\" : [ ],\n  \"name\" : \"Personal\",\n  \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n  \"reportsTo\" : null,\n  \"id\" : \"4000000012423\",\n  \"isVisible\" : false\n}"
  },
  {
    "Api name": "List roles by role IDs",
    "Api URL": "/api/v1/rolesByIds",
    "Api Method": "GET",
    "Desc": "This API lists details of the roles whose IDs are passed in the API request.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/rolesByIds?roleIds=4000000012423,4000000012420,4000000012414\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "roleIds see documentation",
        "data_type": "long required",
        "description": "Comma separated role ids. Maximum allowed count is 50"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ \"4000000012420\", \"4000000012417\" ],\n    \"name\" : \"CEO\",\n    \"description\" : \"Agent belongs to this role can access all other user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"4000000012414\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"PortalUser\",\n    \"description\" : \"User belongs to this role are portal users they can access their cases and solutions only\",\n    \"reportsTo\" : \"4000000012414\",\n    \"id\" : \"4000000012420\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Personal\",\n    \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n    \"reportsTo\" : null,\n    \"id\" : \"4000000012423\",\n    \"isVisible\" : false\n  } ]\n}"
  },
  {
    "Api name": "Teams",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A team is a group of agents/users in a department. Just like how you can assign tickets or tasks to agents, you can also assign tickets and tasks to teams.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the team"
      },
      {
        "name": "description",
        "data_type": "String",
        "description": "A short description of the team"
      },
      {
        "name": "departmentId",
        "data_type": "Long",
        "description": "ID of the department to which the team belongs"
      },
      {
        "name": "subTeams show Attributes",
        "data_type": "list",
        "description": "List of sub-teams within the team"
      },
      {
        "name": "roles show Attributes",
        "data_type": "list",
        "description": "List of roles to add to the team"
      },
      {
        "name": "rolesWithSubordinates show Attributes",
        "data_type": "list",
        "description": "List of roles with subordinates to add to the team"
      },
      {
        "name": "agents show Attributes",
        "data_type": "list",
        "description": "List of agents to add to the team"
      },
      {
        "name": "derivedAgents show Attributes",
        "data_type": "list",
        "description": "List of agents derived with the properties set for the team"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create team",
    "Api URL": "/api/v1/teams",
    "Api Method": "POST",
    "Desc": "This API creates a team in your help desk portal.",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011307\", \"6000000011309\", \"6000000011311\" ],\n  \"name\" : \"Sales Representatives\",\n  \"description\" : \"Sales teams for customer engagement.\",\n  \"subTeams\" : [ \"6000000012001\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the team"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A short description of the team"
      },
      {
        "name": "departmentId",
        "data_type": "Long required",
        "description": "ID of the department to which the team belongs"
      },
      {
        "name": "subTeams",
        "data_type": "list optional",
        "description": "List of sub-teams within the team"
      },
      {
        "name": "roles",
        "data_type": "list optional",
        "description": "List of roles to add to the team"
      },
      {
        "name": "rolesWithSubordinates",
        "data_type": "list optional",
        "description": "List of roles with subordinates to add to the team"
      },
      {
        "name": "agents",
        "data_type": "list optional",
        "description": "List of agents to add to the team"
      }
    ],
    "Response Example": "-d'{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011307\", \"6000000011309\", \"6000000011311\" ],\n  \"name\" : \"Sales Representatives\",\n  \"description\" : \"Sales teams for customer engagement.\",\n  \"subTeams\" : [ \"6000000012001\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}'"
  },
  {
    "Api name": "Update team",
    "Api URL": "/api/v1/teams/{team_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing team.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/teams/6000000014007\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"roles\" : [ \"6000000011307\", \"6000000011311\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the team"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A short description of the team"
      },
      {
        "name": "subTeams",
        "data_type": "list optional",
        "description": "List of sub-teams within the team"
      },
      {
        "name": "roles",
        "data_type": "list optional",
        "description": "List of roles to add to the team"
      },
      {
        "name": "rolesWithSubordinates",
        "data_type": "list optional",
        "description": "List of roles with subordinates to add to the team"
      },
      {
        "name": "agents",
        "data_type": "list optional",
        "description": "List of agents to add to the team"
      }
    ],
    "Response Example": "-d'{\n  \"roles\" : [ \"6000000011307\", \"6000000011311\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}'"
  },
  {
    "Api name": "Delete team",
    "Api URL": "/api/v1/teams/{team_id}/deleteTeam",
    "Api Method": "POST",
    "Desc": "This API deletes an existing team from your help desk portal. To reassign the open and on hold tickets and tasks of the deleted team to a different team, pass theticketNewTeam,taskNewTeam,ticketNewAgent, andtaskNewAgentteam parameters in the API request. If you do not want to assign the tickets to another team, pass the values ofticketNewTeamandticketNewAgentas null. However, in the case of tasks, eithertaskNewTeamortaskNewAgentmust have a valid value. Both parameters cannot be passed as null.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/teams/6000000014007/deleteTeam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketNewAgent\" : \"5000000013005\",\n  \"ticketNewTeam\" : \"5000000013001\",\n  \"taskNewTeam\" : \"5000000013001\",\n  \"taskNewAgent\" : \"5000000013009\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ticketNewTeam",
        "data_type": "long required",
        "description": "Assign open and on hold tickets of the team being deleted to this team."
      },
      {
        "name": "ticketNewAgent",
        "data_type": "long required",
        "description": "Assign open and on hold tickets of the team being deleted to this agent."
      },
      {
        "name": "taskNewTeam",
        "data_type": "long required",
        "description": "Assign open tasks of the team being deleted to this team."
      },
      {
        "name": "taskNewAgent",
        "data_type": "long required",
        "description": "Assign open tasks of the team being deleted to this agent."
      }
    ],
    "Response Example": "-d'{\n  \"ticketNewAgent\" : \"5000000013005\",\n  \"ticketNewTeam\" : \"5000000013001\",\n  \"taskNewTeam\" : \"5000000013001\",\n  \"taskNewAgent\" : \"5000000013009\"\n}'"
  },
  {
    "Api name": "Get team",
    "Api URL": "/api/v1/teams/{team_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a team.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/teams/6000000014007\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011311\", \"6000000011307\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"derivedAgents\" : [ \"6000000009086\", \"6000000012003\" ],\n  \"id\" : \"6000000014007\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"logoUrl\" : null,\n  \"agents\" : [ \"6000000009086\" ]\n}"
  },
  {
    "Api name": "List teams from all associated departments",
    "Api URL": "/api/v1/teams",
    "Api Method": "GET",
    "Desc": "This API fetches details of all teams created in all departments to which the current user belongs.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000007253\",\n    \"roles\" : [ ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013003\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000009326\",\n    \"roles\" : [ ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013005\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/6000000011303/logo?orgId=3458634\",\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000007253\",\n    \"roles\" : [ ],\n    \"name\" : \"Engineering\",\n    \"description\" : \"Developers and Engineers.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013001\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ ]\n  } ]\n}"
  },
  {
    "Api name": "List details of team members",
    "Api URL": "/api/v1/teams/{team_id}/members",
    "Api Method": "GET",
    "Desc": "This API fetches details of all the members of a particular team.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/teams/6000000011303/members\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the team. Values allowed are profile , role . You can include all two values by separating them with commas in the API request."
      }
    ],
    "Response Example": "{\n  \"members\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"John\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=437793\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"john@zylker.com\",\n    \"id\" : \"7000000013328\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"kyle@zylker.com\",\n    \"id\" : \"7000000012958\",\n    \"zuid\" : \"5625416\"\n  } ]\n}"
  },
  {
    "Api name": "List associable teams",
    "Api URL": "/api/v1/teams/{team_id}/associables",
    "Api Method": "GET",
    "Desc": "This API lists the other teams that can be added as sub-teams to the current team.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/teams/6000000011303/associables\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"teams\" : [ 6000000011303, 6000000017021, 6000000017023, 6000000016013, 6000000017017, 6000000016015, 6000000017019, 6000000017013, 6000000017015, 6000000017009, 6000000012001, 6000000017011, 6000000017005, 6000000016025, 6000000017007, 6000000017059, 6000000016027, 6000000017001, 6000000016029, 6000000017003, 6000000016031, 6000000016017, 6000000015001, 6000000016019, 6000000016021 ]\n}"
  },
  {
    "Api name": "List associated teams of agent",
    "Api URL": "/api/v1/agents/{agent_id}/teams",
    "Api Method": "GET",
    "Desc": "This API fetches details of all the teams to which an agent belongs.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/6000000011313/teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"60000000098623\" ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ \"6000000011313\", \"60000000120230\" ],\n    \"id\" : \"6000000083003\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ \"6000000011313\" ],\n    \"id\" : \"6000000083034\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ \"6000000011313\" ]\n  } ]\n}"
  },
  {
    "Api name": "List associated teams for a role",
    "Api URL": "/api/v1/roles/{role_id}/teams",
    "Api Method": "GET",
    "Desc": "This API fetches details of all the teams associated with a particular role.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/roles/6000000008684/teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ \"6000000008684\" ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"60000000098623\" ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ \"6000000011313\", \"60000000120230\" ],\n    \"id\" : \"6000000083003\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"6000000008684\" ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ \"6000000011313\" ],\n    \"id\" : \"6000000083034\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ \"6000000011313\" ]\n  } ]\n}"
  },
  {
    "Api name": "List teams in department",
    "Api URL": "/api/v1/departments/{department_id}/teams",
    "Api Method": "GET",
    "Desc": "This API fetches details of all the teams in a particular department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/6000000007245/teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n    \"roles\" : [ \"6000000011311\", \"6000000011309\", \"6000000011307\" ],\n    \"departmentId\" : \"6000000007245\",\n    \"name\" : \"Field Agents\",\n    \"derivedAgents\" : [ \"6000000009086\" ],\n    \"description\" : \"Field Agents team for customer issues\",\n    \"id\" : \"6000000017039\",\n    \"subTeams\" : [ ],\n    \"logoUrl\" : null,\n    \"agents\" : [ \"6000000009086\" ]\n  }, {\n    \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n    \"roles\" : [ \"6000000011311\", \"6000000011309\", \"6000000011307\" ],\n    \"departmentId\" : \"6000000007245\",\n    \"name\" : \"Managers\",\n    \"derivedAgents\" : [ \"6000000009086\" ],\n    \"description\" : \"Managers\",\n    \"id\" : \"6000000016007\",\n    \"subTeams\" : [ \"6000000016011\", \"6000000014005\" ],\n    \"logoUrl\" : null,\n    \"agents\" : [ \"6000000009086\" ]\n  } ]\n}"
  },
  {
    "Api name": "Departments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Departments refer to the organizational divisions configured in your help desk, based on the business function performed by each division; for example, marketing, sales, finance, admin, and so on.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the department"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the department"
      },
      {
        "name": "nameInCustomerPortal",
        "data_type": "string",
        "description": "Display name of the department in the help center"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "A short description of the department"
      },
      {
        "name": "isVisibleInCustomerPortal",
        "data_type": "boolean",
        "description": "Key that denotes if the department is visible in the help center or not"
      },
      {
        "name": "isEnabled",
        "data_type": "boolean",
        "description": "Key that denotes if the department is enabled or not"
      },
      {
        "name": "isAssignToTeamEnabled",
        "data_type": "boolean",
        "description": "Key that denotes if the assign to team functionality is enabled or not"
      },
      {
        "name": "hasLogo",
        "data_type": "boolean",
        "description": "Key that denotes if the department has a logo or not"
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who created the department"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of creating the department"
      },
      {
        "name": "associatedAgentIds show Attributes",
        "data_type": "list",
        "description": "IDs of agents associated with the department"
      },
      {
        "name": "isDefault",
        "data_type": "boolean",
        "description": "Key that denotes if the department is the default department in the help desk portal"
      },
      {
        "name": "chatStatus",
        "data_type": "string",
        "description": "Chat status of the departments: AVAILABLE , DISABLED , NOT_CREATED"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get department",
    "Api URL": "/api/v1/departments/{department_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a department from your help desk",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/1892000000082069\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"isAssignToTeamEnabled\" : true,\n  \"chatStatus\" : \"AVAILABLE\",\n  \"hasLogo\" : true,\n  \"isVisibleInCustomerPortal\" : true,\n  \"creatorId\" : \"1892000000042001\",\n  \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\", \"1892000000888059\" ],\n  \"isDefault\" : true,\n  \"isEnabled\" : true,\n  \"name\" : \"Zylker\",\n  \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n  \"id\" : \"1892000000082069\",\n  \"nameInCustomerPortal\" : \"ZylCares\"\n}"
  },
  {
    "Api name": "List departments",
    "Api URL": "/api/v1/departments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of departments, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments?isEnabled=true&chatStatus=AVAILABLE\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isEnabled",
        "data_type": "boolean optional",
        "description": "Key that filters departments based on their enabled status"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the departments must be fetched"
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for departments by name, help center name, or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for departments whose name, help center name, or description start with the string, 2) *string* - Searches for departments whose name, help center name, or description contain the string, 3) string - Searches for departments whose name, help center name, or description is an exact match for the string"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 0-200",
        "description": "Number of departments to fetch; default value is 10 and maximum value supported is 200"
      },
      {
        "name": "chatStatus",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters departments based on their chat status. Values allowed are AVAILABLE , DISABLED , NOT_CREATED , and ${UNAVAILABLE} . ${UNAVAILABLE} refers to departments which are not available for chat."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : true,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"Zylker\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n    \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n    \"id\" : \"1892000000082069\",\n    \"nameInCustomerPortal\" : \"ZylCares\"\n  }, {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : false,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"zPad\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"zPad is the most advanced tablet that brings you the never-experienced-before processing power.\",\n    \"createdTime\" : \"2019-08-25T10:12:04.000Z\",\n    \"id\" : \"1892000000082085\",\n    \"nameInCustomerPortal\" : \"zPad\"\n  } ]\n}"
  },
  {
    "Api name": "List agents in department",
    "Api URL": "/api/v1/departments/{department_id}/agents",
    "Api Method": "GET",
    "Desc": "This API lists the agents in a department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/1892000000006907/agents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the agents must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 0-200",
        "description": "Number of agents to fetch; default value is 10 and maximum value is 200"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters agents, based on their activation status: ACTIVE or DISABLED"
      },
      {
        "name": "isLightAgent",
        "data_type": "boolean optional",
        "description": "Key that denotes if the agents must be light or non light."
      },
      {
        "name": "isConfirmed",
        "data_type": "boolean optional",
        "description": "Key that denotes if the agents must be confirmed or unconfirmed."
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for agents by first name, last name, or email ID. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for agents whose first name, last name, or email ID start with the string, 2) *string* - Searches for agents whose first name, last name, or email ID contain the string, 3) string - Searches for agents whose first name, last name, or email ID is an exact match for the string"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the field that must be used for searching and listing agents. Values allowed are: firstName , lastName , name , and emailId ."
      },
      {
        "name": "sortOrder",
        "data_type": "string optional, max chars : 100",
        "description": "To sort the available list of agents in either ascending or descending order. Values allowed are: asc or desc"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"case\",\n    \"extn\" : \"3298\",\n    \"roleId\" : \"1892000000056099\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"case@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10687231\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"12121\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"case\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000056007\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"jade\",\n    \"extn\" : \"3203\",\n    \"roleId\" : \"1892000000056899\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10657727\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\", \"1892000001019041\", \"1892000001106673\", \"1892000001109673\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n    \"phone\" : \"\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Email\", \"Forums\" ],\n    \"name\" : \"jade\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets\",\n    \"id\" : \"1892000000042001\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"john\",\n    \"extn\" : \"3228\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"john@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10713988\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000001019041\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"68779989\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"john\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000070001\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"lastName\" : \"Waugh\",\n    \"extn\" : \"4020\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"ja_JP\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : null,\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"Steve\",\n    \"photoURL\" : null,\n    \"phone\" : \"\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\" ],\n    \"name\" : \"Steve Waugh\",\n    \"isConfirmed\" : false,\n    \"aboutInfo\" : \"Expert in handling Departments\",\n    \"id\" : \"1892000000888059\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Get department count",
    "Api URL": "/api/v1/departments/count",
    "Api Method": "GET",
    "Desc": "This API returns the number of departments configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/1892000000006907/count?isEnabled=true\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isEnabled",
        "data_type": "boolean optional",
        "description": "Key that filters departments based on their enabled status"
      }
    ],
    "Response Example": "{\n  \"count\" : 5\n}"
  },
  {
    "Api name": "Get department details by department IDs",
    "Api URL": "/api/v1/departmentsByIds?departmentIds={department_ids}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of the departments whose IDs are passed in the API request.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departmentsByIds?departmentIds=1892000000082069,1892000000082085\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentIds",
        "data_type": "long required",
        "description": "Comma-separated array of department IDs. Maximum number of IDs allowed is 50."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : true,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"Zylker\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n    \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n    \"id\" : \"1892000000082069\",\n    \"nameInCustomerPortal\" : \"ZylCares\"\n  }, {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"DISABLED\",\n    \"isDefault\" : false,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"zPad\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"zPad is the most advanced tablet that brings you the never-experienced-before processing power.\",\n    \"createdTime\" : \"2018-07-06T13:11:12.000Z\",\n    \"id\" : \"1892000000082085\",\n    \"nameInCustomerPortal\" : \"zPad\"\n  } ]\n}"
  },
  {
    "Api name": "Check for duplicate departments",
    "Api URL": "/api/v1/departments/checkExists",
    "Api Method": "GET",
    "Desc": "This API checks if multiple departments have the same name.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/checkExists?departmentName=zPad\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentName",
        "data_type": "string required, max chars : 150",
        "description": "Name of the department for which you want to check duplicate entries"
      }
    ],
    "Response Example": "{\n  \"isDepartmentNameExist\" : true\n}"
  },
  {
    "Api name": "Add department",
    "Api URL": "/api/v1/departments",
    "Api Method": "POST",
    "Desc": "This API adds a department to your help desk portal.",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isAssignToTeamEnabled\" : false,\n  \"isVisibleInCustomerPortal\" : true,\n  \"name\" : \"zPhone\",\n  \"description\" : \"With the most advanced technology, the zPhone is the world’s largest selling smartphone.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\" ],\n  \"nameInCustomerPortal\" : \"zPhone\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 150",
        "description": "Name of the department"
      },
      {
        "name": "nameInCustomerPortal",
        "data_type": "string optional, max chars : 150",
        "description": "Display name of the department in the help center"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 500",
        "description": "A short description of the department"
      },
      {
        "name": "isVisibleInCustomerPortal",
        "data_type": "boolean optional",
        "description": "Key that denotes if the department is visible in the help center or not"
      },
      {
        "name": "isAssignToTeamEnabled",
        "data_type": "boolean optional",
        "description": "Key that denotes if the assign to team functionality is enabled or not"
      },
      {
        "name": "associatedAgentIds",
        "data_type": "list required",
        "description": "IDs of agents associated with the department"
      }
    ],
    "Response Example": "-d'{\n  \"isAssignToTeamEnabled\" : false,\n  \"isVisibleInCustomerPortal\" : true,\n  \"name\" : \"zPhone\",\n  \"description\" : \"With the most advanced technology, the zPhone is the world’s largest selling smartphone.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\" ],\n  \"nameInCustomerPortal\" : \"zPhone\"\n}'"
  },
  {
    "Api name": "Update department",
    "Api URL": "/api/v1/departments/{department_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing department.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/departments/1892000000082085\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isAssignToTeamEnabled\" : true,\n  \"nameInCustomerPortal\" : \"zPhone Support\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string optional, max chars : 150",
        "description": "Name of the department"
      },
      {
        "name": "nameInCustomerPortal",
        "data_type": "string optional, max chars : 150",
        "description": "Display name of the department in the help center"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 500",
        "description": "A short description of the department"
      },
      {
        "name": "isVisibleInCustomerPortal",
        "data_type": "boolean optional",
        "description": "Key that denotes if the department is visible in the help center or not"
      },
      {
        "name": "isAssignToTeamEnabled",
        "data_type": "boolean optional",
        "description": "Key that denotes if the assign to team functionality is enabled or not"
      },
      {
        "name": "associatedAgentIds",
        "data_type": "list optional",
        "description": "IDs of agents associated with the department"
      }
    ],
    "Response Example": "-d'{\n  \"isAssignToTeamEnabled\" : true,\n  \"nameInCustomerPortal\" : \"zPhone Support\"\n}'"
  },
  {
    "Api name": "Disable department",
    "Api URL": "/api/v1/departments/{department_id}/disable",
    "Api Method": "POST",
    "Desc": "This API disables a department in your help desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments/1892000000082085/disable\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"emailNewDepartment\" : \"1892000000082069\",\n  \"agentNewDepartment\" : \"1892000000082069\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentNewDepartment",
        "data_type": "Long optional",
        "description": "Agents move to new department ID"
      },
      {
        "name": "emailNewDepartment",
        "data_type": "Long optional",
        "description": "Email move to new department ID"
      }
    ],
    "Response Example": "-d'{\n  \"emailNewDepartment\" : \"1892000000082069\",\n  \"agentNewDepartment\" : \"1892000000082069\"\n}'"
  },
  {
    "Api name": "Enable department",
    "Api URL": "/api/v1/departments/{department_id}/enable",
    "Api Method": "POST",
    "Desc": "This API enables a department in your help desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments/1892000000082085/enable\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Associate agents to department",
    "Api URL": "/api/v1/departments/{department_id}/associateAgents",
    "Api Method": "POST",
    "Desc": "This API associates agents to a department.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments/1892000000082085/associateAgents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIds\" : [ \"1892000000042001\", \"1892000000056007\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "list required",
        "description": "Ids of Agents"
      }
    ],
    "Response Example": "-d'{\n  \"agentIds\" : [ \"1892000000042001\", \"1892000000056007\" ]\n}'"
  },
  {
    "Api name": "Dissociate agents from department",
    "Api URL": "/api/v1/departments/{department_id}/dissociateAgents",
    "Api Method": "POST",
    "Desc": "This API dissociates agents from a department.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments/1892000000082085/dissociateAgents\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIds\" : [ \"1892000000056007\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentIds",
        "data_type": "list required",
        "description": "Ids of Agents"
      }
    ],
    "Response Example": "-d'{\n  \"agentIds\" : [ \"1892000000056007\" ]\n}'"
  },
  {
    "Api name": "Get department logo",
    "Api URL": "/api/v1/departments/{department_id}/logo",
    "Api Method": "GET",
    "Desc": "This API fetches the logo set for a department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/1892000000082069/logo\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fileSize",
        "data_type": "string optional, max chars : 100",
        "description": "Size of the image file to download. Values allowed are THUMBNAIL (image with reduced dimensions and size) and ACTUAL (image with actual dimensions and size). The default value is ACTUAL ."
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Upload department logo",
    "Api URL": "/api/v1/departments/{department_id}/logo",
    "Api Method": "POST",
    "Desc": "This API updates the logo set for a department.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/departments/1892000000006908/logo\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "departmentLogo",
        "data_type": "Content-Type:multipart/form-data",
        "description": "Image file of the logo. Maximum file size allowed is 2MB; maximum number of files allowed is one; and extensions allowed are: jpg, png, gif, and jpeg."
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "Delete department logo",
    "Api URL": "/api/v1/departments/{department_id}/logo",
    "Api Method": "DELETE",
    "Desc": "This API removes the logo set for a department.",
    "OAuth Scope": "Desk.settings.DELETE, Desk.basic.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/departments/1892000000006908/logo\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Channels",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Channels in Zoho Desk represents the source of the tickets & threads. A channel represents the characteristic of a reply source such as reply configuration.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the channel. Possible values are SYSTEM, INTEGRATION, INSTANT_MESSAGE"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the channel"
      },
      {
        "name": "code",
        "data_type": "string",
        "description": "Unique Identifier Code of the channel"
      },
      {
        "name": "appName",
        "data_type": "string",
        "description": "Name of the application that handles the channel"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "Photo URL of the channel"
      },
      {
        "name": "departmentId",
        "data_type": "string",
        "description": "Default department ID of the channel in which the tickets will be created unless customized"
      },
      {
        "name": "acceptsReplies",
        "data_type": "string",
        "description": "Specifies whether the channel accepts replies for tickets or threads"
      },
      {
        "name": "replyConfig show Attributes",
        "data_type": "JSONObject",
        "description": "Reply configuration of the channel if the channel accepts replies for tickets or threads"
      },
      {
        "name": "updateRecords",
        "data_type": "string",
        "description": "Specifies whether the threads of the channel can be edited"
      },
      {
        "name": "acceptsAttachments",
        "data_type": "string",
        "description": "Specifies whether attachments can be added to the replies of the channel"
      },
      {
        "name": "contentTypes",
        "data_type": "string",
        "description": "List of Content types supported for the replies of the channel"
      },
      {
        "name": "includeQuotedMessage",
        "data_type": "string",
        "description": "Specifies whether previous replies has to be included as quoted message for the replies of the channel"
      },
      {
        "name": "mappedIntegration",
        "data_type": "string",
        "description": "Type of integration, only if the type is INSTANT_MESSAGE"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List configured channels",
    "Api URL": "/api/v1/channels",
    "Api Method": "GET",
    "Desc": "This API fetches currently installed channels including System, Channel integration and Instant Messaging channels",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/channels\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/sales_whatsapp_account/photo?orgId=60856948\",\n    \"code\" : \"SALES_WHATSAPP_ACCOUNT\",\n    \"appName\" : \"Sales Whatsapp Account\",\n    \"departmentId\" : \"76389000000006907\",\n    \"name\" : \"Sales Whatsapp Account\",\n    \"externalId\" : \"109000000002003\",\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"INSTANT_MESSAGE\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/youtubecat/photo?orgId=647164567\",\n    \"code\" : \"YOUTUBECAT\",\n    \"appName\" : \"Youtube Cat\",\n    \"departmentId\" : \"188422000009189044\",\n    \"name\" : \"Youtube Cat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"INTEGRATION\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"EMAIL\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Email\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : true,\n      \"contentTypes\" : [ \"text/plain\", \"text/html\" ],\n      \"includeQuotedMessage\" : true\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"TWITTER\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Twitter\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"TWITTER_DM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Twitter\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FACEBOOK\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Facebook\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FACEBOOK_DM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Facebook\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"INSTAGRAM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Instagram\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"INSTAGRAM_DM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Instagram\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"WEB\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Web\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"ONLINE_CHAT\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Chat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"OFFLINE_CHAT\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Chat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FORUMS\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Forums\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\", \"text/html\" ],\n      \"includeQuotedMessage\" : true\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"PHONE\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Phone\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"ZTI\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Phone\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"CUSTOMERPORTAL\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Web\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FEEDBACK\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"FeedBack\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FEEDBACK_WIDGET\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Feedback Widget\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  } ]\n}"
  },
  {
    "Api name": "Tickets",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Tickets are organizing units using which service agents handle customer enquiries, requests, complaints, and other such interactions in Zoho Desk.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "subject",
        "data_type": "string",
        "description": "Subject of the ticket"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long",
        "description": "ID of the department to which the ticket belongs"
      },
      {
        "name": "contactId see documentation",
        "data_type": "referred object",
        "description": "ID of the contact who raised the ticket. If a value is not available for this key, make sure to include the contact JSON object. If neither attribute is available, an error message regarding the unavailability of the contactId message is returned."
      },
      {
        "name": "contact show Attributes",
        "data_type": "Contact",
        "description": "Details of the contact who raised the ticket. This object is used for automatically creating a contact when a ticket is received. If the email ID of the contact already exists in your portal, the corresponding contactId is used for creating the ticket. Else, a contact is first created and the contactId of the new contact is mapped to the ticket. The user’s profile and field permissions are considered in the contact creation process. Either the lastName or the email attribute must be present in the object."
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the contact"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the contact"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the contact"
      },
      {
        "name": "phone",
        "data_type": "string",
        "description": "Phone number of the contact"
      },
      {
        "name": "productId",
        "data_type": "referred object",
        "description": "ID of the product to which the ticket is mapped"
      },
      {
        "name": "uploads see documentation show Attributes",
        "data_type": "list",
        "description": "File attachments in the ticket. For more information, refer to the Uploads section"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID in the ticket"
      },
      {
        "name": "phone",
        "data_type": "string",
        "description": "Phone number in the ticket"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description in the ticket"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      },
      {
        "name": "statusType",
        "data_type": "string",
        "description": "Type of ticket resolution status.The values supported are OPEN and ON HOLD and CLOSED ."
      },
      {
        "name": "assigneeId",
        "data_type": "long",
        "description": "ID of agent to whom the ticket is assigned"
      },
      {
        "name": "category",
        "data_type": "string",
        "description": "Category of the ticket"
      },
      {
        "name": "subCategory",
        "data_type": "string",
        "description": "Subcategory of the ticket"
      },
      {
        "name": "resolution",
        "data_type": "string",
        "description": "Resolution notes recorded in the ticket"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp",
        "description": "Due date for resolving the ticket"
      },
      {
        "name": "priority",
        "data_type": "string",
        "description": "Priority of the ticket"
      },
      {
        "name": "language",
        "data_type": "string",
        "description": "Language preference to set for the ticket"
      },
      {
        "name": "channel",
        "data_type": "string",
        "description": "Channel through which the ticket originated."
      },
      {
        "name": "channelCode",
        "data_type": "string",
        "description": "Code of the ticket's source channel"
      },
      {
        "name": "source show Attributes",
        "data_type": "object",
        "description": "Details of the ticket source from channel"
      },
      {
        "name": "extId",
        "data_type": "String",
        "description": "External ID of the thread"
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of the source channel"
      },
      {
        "name": "appName",
        "data_type": "String",
        "description": "Name of the application which created the channel"
      },
      {
        "name": "appPhotoURL",
        "data_type": "String",
        "description": "Photo URL of the application which created the channel."
      },
      {
        "name": "permalink",
        "data_type": "String",
        "description": "Permalink of the entity. Which is a URL to access the entity in the source channel."
      },
      {
        "name": "classification",
        "data_type": "string",
        "description": "Type of ticket. Values supported are Problem , Request , Question , and Others ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get a ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single ticket from your helpdesk.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000143237?include=contacts,products,assignee,departments,team\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Key that fetches secondary information related to the ticket. Values allowed are: contacts , products , assignee , departments , contract , isRead , team , and skills . Multiple values can be passed, with commas for separation."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2016-06-21T13:16:14.000Z\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"FORUMS\",\n  \"onholdTime\" : null,\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"uuid\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ {\n    \"name\" : \"Sample Department Name\",\n    \"id\" : \"1892000000006909\",\n    \"type\" : \"READ_WRITE\"\n  }, {\n    \"name\" : \"Sample Department Name\",\n    \"id\" : \"1892000000006911\",\n    \"type\" : \"READ_ONLY\"\n  } ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"3\",\n  \"approvalCount\" : \"1\",\n  \"isOverDue\" : false,\n  \"isTrashed\" : false,\n  \"contact\" : {\n    \"lastName\" : \"Carol\",\n    \"firstName\" : \"Lucas\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : \"8838486174\",\n    \"id\" : \"1892000000042032\",\n    \"isSpam\" : false,\n    \"type\" : null,\n    \"email\" : \"carol@zylker.com\",\n    \"account\" : {\n      \"website\" : \"www.desk.com\",\n      \"accountName\" : \"desk Account\",\n      \"id\" : \"1892000000975382\"\n    }\n  },\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"id\" : \"1892000000042034\",\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"121\",\n  \"secondaryContacts\" : [ \"1892000000042038\", \"1892000000042042\", \"1892000000042056\" ],\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"commentCount\" : \"1\",\n  \"taskCount\" : \"1\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false,\n  \"assignee\" : {\n    \"firstName\" : \"dasca\",\n    \"lastName\" : \"vins\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n    \"id\" : \"1892000000056007\",\n    \"email\" : \"jack@zylker.com\"\n  },\n  \"status\" : \"Open\",\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"ticketNumber\" : \"101\",\n  \"isRead\" : false,\n  \"description\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n  \"timeEntryCount\" : \"3\",\n  \"channelRelatedInfo\" : {\n    \"topicId\" : \"1892000000056253\",\n    \"isTopicDeleted\" : false,\n    \"forumStatus\" : \"ANALYSING\",\n    \"sourceLink\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Community/singlepost/problem-topic-forum-ticket-18-5-2018\",\n    \"topicType\" : \"PROBLEM\"\n  },\n  \"isDeleted\" : \"false\",\n  \"department\" : {\n    \"name\" : \"dasdasdasd\",\n    \"id\" : \"1892000000006907\"\n  },\n  \"followerCount\" : \"5\",\n  \"email\" : \"carol@zylker.com\",\n  \"layoutDetails\" : {\n    \"id\" : \"5000000013466\",\n    \"layoutName\" : \"Default Ticket Layout\"\n  },\n  \"channelCode\" : null,\n  \"product\" : null,\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"isFollowing\" : \"true\",\n  \"team\" : {\n    \"name\" : \"kjsdfjks\",\n    \"id\" : \"8920000000069071\",\n    \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n  },\n  \"assigneeId\" : \"1892000000056007\",\n  \"teamId\" : \"8920000000069071\",\n  \"contractId\" : null,\n  \"tagCount\" : \"2\",\n  \"attachmentCount\" : \"1\",\n  \"isEscalated\" : false,\n  \"category\" : \"general\"\n}"
  },
  {
    "Api name": "List all tickets",
    "Api URL": "/api/v1/tickets",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of tickets, based on the limit specified.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets?include=contacts,assignee,departments,team,isRead\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the tickets must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "long optional",
        "description": "Departments from which the tickets need to be queried. Note : For Predefined Views and All Department Views : You must specify the departmentId for which the tickets need to be fetched. Otherwise, it will fetch all tickets accessible across departments. For Single Department Custom View : You must specify the departmentId of the department for which the Custom View was created. The tickets will be fetched from that department."
      },
      {
        "name": "teamIds see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters tickets by Teams. Values allowed are Unassigned or a valid teamId . Multiple teamIds can be passed as comma-separated values."
      },
      {
        "name": "viewId see documentation",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "assignee",
        "data_type": "string optional, max chars : 100",
        "description": "assignee - Key that filters tickets by assignee. Values allowed are Unassigned or a valid assigneeId . Multiple assigneeIds can be passed as comma-separated values."
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by channel through which the tickets originated. You can include multiple values by separating them with a comma"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by resolution status of the ticket. You can include multiple values by separating them with a comma"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: responseDueDate or customerResponseTime or createdTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "receivedInDays",
        "data_type": "integer optional",
        "description": "Fetches recent tickets, based on customer response time . Values allowed are 15 , 30 , 90 ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the tickets. Values allowed are: contacts , products , departments , team , isRead and assignee . You can pass multiple values by separating them with commas in the API request."
      },
      {
        "name": "fields",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: statusType , webUrl , layoutId . Maximum of 30 fields is supported as comma separated values."
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters tickets by priority. Multiple priority levels can be passed as comma-separated values."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-09-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543210\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"176\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-01T14:04:07.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Forums\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : null,\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : \"9876543211\",\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker sAccount\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:49:50.000Z\",\n    \"id\" : \"1892000000094004\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-22T05:05:08.471Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"72\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b02214oc203b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  }, {\n    \"ticketNumber\" : \"191\",\n    \"subCategory\" : null,\n    \"statusType\" : \"On Hold\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Chat\",\n    \"isRead\" : true,\n    \"onholdTime\" : \"2014-03-28T12:09:10.736Z\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-10-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : null,\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker Account\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-21T09:16:03.000Z\",\n    \"id\" : \"1892000000137057\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-21T10:54:21.802Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"19\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d11bcdfb061247d9edbacb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Custom On Hold\"\n  } ]\n}"
  },
  {
    "Api name": "Get Archived Ticket List",
    "Api URL": "/api/v1/tickets/archivedTickets",
    "Api Method": "GET",
    "Desc": "This API gets the archived tickets list  in given department.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/archivedTickets?from=1&limit=50&departmentId=5853000000006907&viewType=1\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : 0-4999",
        "description": "Index number, starting from which the tickets must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the tickets must be fetched"
      },
      {
        "name": "viewType",
        "data_type": "int optional",
        "description": "View Type - Supported Values 1 for Compact view , 2 for Classic view ,4 for Table View. If view type is not specified, Classic View will be the default view"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns additional information related to a ticket. Values allowed are: contacts , products , departments , team , isRead and assignee . All six values can be passed by separating them with a comma in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"836\",\n    \"sentiment\" : null,\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Subject updated by bulk update\",\n    \"isArchived\" : true,\n    \"dueDate\" : \"2017-02-16T05:04:01.000Z\",\n    \"departmentId\" : \"5853000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"permalink\" : null,\n      \"type\" : \"SYSTEM\",\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : \"2017-02-20T10:21:02.000Z\",\n    \"responseDueDate\" : null,\n    \"createdTime\" : \"2017-02-15T08:23:11.000Z\",\n    \"id\" : \"5853000001102037\",\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2017-02-15T08:23:11.000Z\",\n    \"productId\" : null,\n    \"contactId\" : \"5853000000273060\",\n    \"threadCount\" : \"6\",\n    \"lastThread\" : {\n      \"channel\" : \"EMAIL\",\n      \"isDraft\" : true,\n      \"isForward\" : false,\n      \"direction\" : \"out\"\n    },\n    \"priority\" : null,\n    \"layoutId\" : \"5853000001987014\",\n    \"assigneeId\" : \"5853000000281047\",\n    \"commentCount\" : \"1\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : \"123421412125\",\n    \"webUrl\" : \"https://desk.zoho.com/support/arunasales/ShowHomePage.do#Cases/dv/5853000001102037\",\n    \"teamId\" : null,\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  } ]\n}"
  },
  {
    "Api name": "List all associated tickets",
    "Api URL": "/api/v1/associatedTickets",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of tickets that are associated to you from your help desk, based on the limit specified.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/associatedTickets?include=contacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the tickets must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department from which the tickets must be fetched"
      },
      {
        "name": "assignee",
        "data_type": "string optional, max chars : 100",
        "description": "assignee - Key that filters tickets by assignee. Values allowed are Unassigned or a valid assigneeId . Multiple assigneeIds can be passed as comma-separated values."
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by resolution status of the ticket. You can include multiple values by separating them with a comma"
      },
      {
        "name": "follower",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by followers of the ticket. Values allowed : a valid agentId ."
      },
      {
        "name": "commenter",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by commenters of the ticket. Values allowed : a valid agentId . As of now, either follower or commenter is supported. If both params are given, commenter will be ignored."
      },
      {
        "name": "sharedDepartmentId",
        "data_type": "long optional",
        "description": "Fetches only the tickets shared from departmentId to sharedDepartmentId . If departmentId is not provided, fetches all the tickets shared to sharedDepartmentId . sharedDepartmentId is given precedence only when isShared is false /not given."
      },
      {
        "name": "isShared",
        "data_type": "boolean optional",
        "description": "Filter all shared tickets actually belonging to departmentId if isShared is true. If departmentId is not provided and if isShared is true, shared tickets from all permitted departments will be listed. If departmentId is provided and isShared is true , tickets belonging to departmentId , but shared to any other department will be fetched. If departmentId and sharedDepartmentId is provided and isShared is true , then tickets belonging to departmentId , but shared to sharedDepartmentId will be fetched(Here permission checks are done on departmentId ). If departmentId and sharedDepartmentId is provided and isShared is false /not given, then tickets shared to sharedDepartmentId , but belonging to departmentId will be fetched(Here permission checks are done on sharedDepartmentId )."
      },
      {
        "name": "receivedInDays",
        "data_type": "integer optional",
        "description": "Fetches recent tickets, based on customer response time . Values allowed are 15 , 30 , 90 ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns additional information related to a ticket. Values allowed are: contacts, products, and assignee. All three values can be passed by separating them with a comma in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-09-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543212\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"176\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-01T14:04:07.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Forums\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : null,\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : null,\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker sAccount\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:49:50.000Z\",\n    \"id\" : \"1892000000094004\",\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-22T05:05:08.471Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"72\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"0\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b02214oc203b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  }, {\n    \"ticketNumber\" : \"191\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Chat\",\n    \"onholdTime\" : \"2014-03-28T12:09:10.736Z\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-10-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : \"9876543212\",\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker Account\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-21T09:16:03.000Z\",\n    \"id\" : \"1892000000137057\",\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-21T10:54:21.802Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"19\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d11bcdfb061247d9edbacb9d93ba74750b0284bc703b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "Create a ticket",
    "Api URL": "/api/v1/tickets",
    "Api Method": "POST",
    "Desc": "This API creates a ticket in your helpdesk.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"description\" : \"Hai This is Description\",\n  \"language\" : \"English\",\n  \"priority\" : \"High\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 255",
        "description": "Subject of the ticket"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required, range : >0",
        "description": "ID of the department to which the ticket belongs"
      },
      {
        "name": "contactId see documentation",
        "data_type": "referred object optional",
        "description": "ID of the contact who raised the ticket. If a value is not available for this key, make sure to include the contact JSON object. If neither attribute is available, an error message regarding the unavailability of the contactId message is returned."
      },
      {
        "name": "contact",
        "data_type": "Contact optional",
        "description": "Details of the contact who raised the ticket. This object is used for automatically creating a contact when a ticket is received. If the email ID of the contact already exists in your portal, the corresponding contactId is used for creating the ticket. Else, a contact is first created and the contactId of the new contact is mapped to the ticket. The user’s profile and field permissions are considered in the contact creation process. Either the lastName or the email attribute must be present in the object."
      },
      {
        "name": "productId",
        "data_type": "referred object optional",
        "description": "ID of the product to which the ticket is mapped"
      },
      {
        "name": "uploads see documentation",
        "data_type": "list optional",
        "description": "File attachments in the ticket. For more information, refer to the Uploads section"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 150",
        "description": "Email ID in the ticket"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 120",
        "description": "Phone number in the ticket"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description in the ticket"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of agent to whom the ticket is assigned"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 300",
        "description": "Category of the ticket"
      },
      {
        "name": "subCategory",
        "data_type": "string optional, max chars : 300",
        "description": "Subcategory of the ticket"
      },
      {
        "name": "resolution",
        "data_type": "string optional, max chars : 65535",
        "description": "Resolution notes recorded in the ticket"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp optional",
        "description": "Due date for resolving the ticket"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the ticket"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 255",
        "description": "Language preference to set for the ticket"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the ticket originated."
      },
      {
        "name": "classification",
        "data_type": "string optional, max chars : 120",
        "description": "Type of ticket. Values supported are Problem , Request , Question , and Others ."
      },
      {
        "name": "customFields deprecated",
        "data_type": "JSONObject optional",
        "description": "Custom fields in the ticket"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "Custom fields in the ticket"
      },
      {
        "name": "webUrl",
        "data_type": "string optional, max chars : 5000",
        "description": "URL to access the resource"
      },
      {
        "name": "sharedDepartments",
        "data_type": "list optional",
        "description": "List of departments to which the ticket is shared and the access privileges corresponding to each department"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team assigned to resolve the ticket"
      },
      {
        "name": "secondaryContacts see documentation",
        "data_type": "list optional",
        "description": "Secondary contacts, such as CC'ed users, associated with the ticket"
      },
      {
        "name": "entitySkills see documentation",
        "data_type": "list optional",
        "description": "Comma-separated array of skill IDs to be mapped with a ticket. The order of IDs (with the first ID given the highest priority) will determine how assignments are calculated."
      }
    ],
    "Response Example": "-d'{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"description\" : \"Hai This is Description\",\n  \"language\" : \"English\",\n  \"priority\" : \"High\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}'"
  },
  {
    "Api name": "Update a ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/3000000024409\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"channel\" : \"FORUMS\",\n  \"description\" : \"Sample Ticket\",\n  \"language\" : \"English\",\n  \"priority\" : \"Low\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "disableClosureNotification",
        "data_type": "boolean optional",
        "description": "Key that enables or disables sending notifications to the corresponding contact when a ticket is closed"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 255",
        "description": "Subject of the ticket"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional, range : >0",
        "description": "ID of the department to which the ticket belongs"
      },
      {
        "name": "contactId see documentation",
        "data_type": "referred object optional",
        "description": "ID of the contact who raised the ticket. If a value is not available for this key, make sure to include the contact JSON object. If neither attribute is available, an error message regarding the unavailability of the contactId message is returned."
      },
      {
        "name": "contact",
        "data_type": "Contact optional",
        "description": "Details of the contact who raised the ticket. This object is used for automatically creating a contact when a ticket is received. If the email ID of the contact already exists in your portal, the corresponding contactId is used for creating the ticket. Else, a contact is first created and the contactId of the new contact is mapped to the ticket. The user’s profile and field permissions are considered in the contact creation process. Either the lastName or the email attribute must be present in the object."
      },
      {
        "name": "productId",
        "data_type": "referred object optional",
        "description": "ID of the product to which the ticket is mapped"
      },
      {
        "name": "uploads see documentation",
        "data_type": "list optional",
        "description": "File attachments in the ticket. For more information, refer to the Uploads section"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 150",
        "description": "Email ID in the ticket"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 120",
        "description": "Phone number in the ticket"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description in the ticket"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of agent to whom the ticket is assigned"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 300",
        "description": "Category of the ticket"
      },
      {
        "name": "subCategory",
        "data_type": "string optional, max chars : 300",
        "description": "Subcategory of the ticket"
      },
      {
        "name": "resolution",
        "data_type": "string optional, max chars : 65535",
        "description": "Resolution notes recorded in the ticket"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp optional",
        "description": "Due date for resolving the ticket"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the ticket"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 255",
        "description": "Language preference to set for the ticket"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the ticket originated."
      },
      {
        "name": "classification",
        "data_type": "string optional, max chars : 120",
        "description": "Type of ticket. Values supported are Problem , Request , Question , and Others ."
      },
      {
        "name": "customFields deprecated",
        "data_type": "JSONObject optional",
        "description": "Custom fields in the ticket"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "Custom fields in the ticket"
      },
      {
        "name": "webUrl",
        "data_type": "string optional, max chars : 5000",
        "description": "URL to access the resource"
      },
      {
        "name": "sharedDepartments",
        "data_type": "list optional",
        "description": "List of departments to which the ticket is shared and the access privileges corresponding to each department"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team assigned to resolve the ticket"
      },
      {
        "name": "secondaryContacts see documentation",
        "data_type": "list optional",
        "description": "Secondary contacts, such as CC'ed users, associated with the ticket"
      },
      {
        "name": "entitySkills see documentation",
        "data_type": "list optional",
        "description": "Comma-separated array of skill IDs to be mapped with a ticket. The order of IDs (with the first ID given the highest priority) will determine how assignments are calculated."
      }
    ],
    "Response Example": "-d'{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"channel\" : \"FORUMS\",\n  \"description\" : \"Sample Ticket\",\n  \"language\" : \"English\",\n  \"priority\" : \"Low\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}'"
  },
  {
    "Api name": "Move Tickets to trash",
    "Api URL": "/api/v1/tickets/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves tickets to the Recycle Bin",
    "OAuth Scope": "Desk.tickets.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketIds\" : [ \"2000032002032\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ticketIds",
        "data_type": "list required",
        "description": "IDs of the tickets to move to the Recycle Bin"
      }
    ],
    "Response Example": "-d'{\n  \"ticketIds\" : [ \"2000032002032\" ]\n}'"
  },
  {
    "Api name": "Delete spam tickets",
    "Api URL": "/api/v1/tickets/deleteSpam",
    "Api Method": "POST",
    "Desc": "This API deletes the given spam tickets",
    "OAuth Scope": "Desk.tickets.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/deleteSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketIds\" : [ \"1892000000006907\", \"1892000000006908\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ticketIds",
        "data_type": "list required",
        "description": "IDs of the spam tickets. The maximum allowed number of IDs is 50."
      }
    ],
    "Response Example": "-d'{\n  \"ticketIds\" : [ \"1892000000006907\", \"1892000000006908\" ]\n}'"
  },
  {
    "Api name": "Merge two tickets",
    "Api URL": "/api/v1/tickets/{ticket_id}/merge",
    "Api Method": "POST",
    "Desc": "This API merges two different tickets.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000008749/merge\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"4000000018011\" ],\n  \"source\" : {\n    \"contactId\" : \"4000000018011\",\n    \"subject\" : \"4000000018011\",\n    \"priority\" : \"4000000018011\",\n    \"status\" : \"4000000018011\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the tickets to merge"
      },
      {
        "name": "source show Attributes",
        "data_type": "object optional",
        "description": "JSON object of the tickets to merge"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"4000000018011\" ],\n  \"source\" : {\n    \"contactId\" : \"4000000018011\",\n    \"subject\" : \"4000000018011\",\n    \"priority\" : \"4000000018011\",\n    \"status\" : \"4000000018011\"\n  }\n}'"
  },
  {
    "Api name": "Move ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}/move",
    "Api Method": "POST",
    "Desc": "This API helps move a ticket from one department to another.Note:The departmentId query parameter will be deprecated soon. Therefore, going forward, the departmentId attribute must be passed in the body of the API request.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000093303/move\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"1892000000082069\",\n  \"forumId\" : \"1892000000052355\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department to which you want to move the ticket"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the ticket exists"
      },
      {
        "name": "forumId",
        "data_type": "long optional",
        "description": "ID of the community sub-category to which the forum ticket (forum topic converted into a ticket) must be moved"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"1892000000082069\",\n  \"forumId\" : \"1892000000052355\"\n}'"
  },
  {
    "Api name": "Split tickets",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads/{thread_id}/split",
    "Api Method": "POST",
    "Desc": "This API splits an incoming ticket thread into a new ticket.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000047005/threads/1892000000133023/split\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2016-06-21T10:16:15.000Z\",\n  \"ticketNumber\" : \"101\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"onholdTime\" : null,\n  \"description\" : \"Real Time analysis Requirement\",\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"uuid\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"0\",\n  \"approvalCount\" : \"0\",\n  \"timeEntryCount\" : \"3\",\n  \"isOverDue\" : false,\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"id\" : \"1892000000042034\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"121\",\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"assigneeId\" : \"1892000000056007\",\n  \"commentCount\" : \"1\",\n  \"taskCount\" : \"1\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"attachmentCount\" : \"1\",\n  \"isEscalated\" : false,\n  \"isSpam\" : false,\n  \"category\" : \"general\",\n  \"status\" : \"Open\"\n}"
  },
  {
    "Api name": "Bulk update tickets",
    "Api URL": "/api/v1/tickets/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple tickets at once.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"subject\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"Ticket for support\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 32000",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"subject\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"Ticket for support\"\n}'"
  },
  {
    "Api name": "Closed many tickets",
    "Api URL": "/api/v1/closeTickets",
    "Api Method": "POST",
    "Desc": "This API closes multiple tickets at once.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/closeTickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of tickets to close"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ]\n}'"
  },
  {
    "Api name": "Mark as read",
    "Api URL": "api/v1/tickets/{ticket_id}/markAsRead",
    "Api Method": "POST",
    "Desc": "This API marks a ticket as read by the user.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000988091/markAsRead\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Mark as unread",
    "Api URL": "api/v1/tickets/{ticket_id}/markAsUnRead",
    "Api Method": "POST",
    "Desc": "This API marks a ticket as unread by the user.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000988091/markAsUnRead\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Mark ticket as spam",
    "Api URL": "/api/v1/tickets/markSpam",
    "Api Method": "POST",
    "Desc": "This API marks tickets as spam.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/markSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactSpam\" : \"true\",\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000121176\", \"1000000016435\", \"1000000016435\" ],\n  \"isSpam\" : \"true\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isSpam",
        "data_type": "boolean required",
        "description": "Key that marks or unmarks a single ticket or multiple tickets as spam"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "ID(s) of the ticket(s) that must be marked or unmarked as spam"
      },
      {
        "name": "contactSpam",
        "data_type": "boolean optional",
        "description": "Key that marks or unmarks the associated contact as spam"
      },
      {
        "name": "handleExistingTickets",
        "data_type": "boolean optional",
        "description": "Key that marks or unmarks the other tickets from the contact(s) as spam"
      }
    ],
    "Response Example": "-d'{\n  \"contactSpam\" : \"true\",\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000121176\", \"1000000016435\", \"1000000016435\" ],\n  \"isSpam\" : \"true\"\n}'"
  },
  {
    "Api name": "List all ticketQueueView count",
    "Api URL": "api/v1/ticketQueueView/count",
    "Api Method": "GET",
    "Desc": "This API returns the number of tickets in a particular view.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketQueueView/count?viewId=40000000004567&departmentId=allDepartment\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "ID of the view whose ticket count must be fetched"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "String required",
        "description": "ID of the department from which the ticket count must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to resolve the tickets"
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "List all agentsTicketsCount",
    "Api URL": "api/v1/agentsTicketsCount",
    "Api Method": "GET",
    "Desc": "This API returns the number of tickets assigned to multiple agents.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agentsTicketsCount?agentIds=4000000008734,4000000056010\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "String optional",
        "description": "ID of the department from which the ticket count must be fetched. To fetch ticket count of agents from all departments, pass the value allDepartments."
      },
      {
        "name": "agentIds",
        "data_type": "long optional",
        "description": "IDs of the agents whose ticket count must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"onholdCount\" : 1,\n    \"agentId\" : \"4000000008734\",\n    \"dueIn1HrCount\" : 0,\n    \"overDueCount\" : 2,\n    \"channel\" : [ \"Mail\", \"Phone\" ],\n    \"isOnline\" : true,\n    \"openCount\" : 18\n  }, {\n    \"onholdCount\" : 1,\n    \"agentId\" : \"4000000056010\",\n    \"dueIn1HrCount\" : 0,\n    \"overDueCount\" : 0,\n    \"isOnline\" : false,\n    \"openCount\" : 0\n  } ]\n}"
  },
  {
    "Api name": "Get ticket history",
    "Api URL": "api/v1/tickets/{ticket_id}/History",
    "Api Method": "GET",
    "Desc": "This API fetches details of all actions — called events — performed on a ticket and in the sub-tabs on the ticket detail page. To view a detailed documentation for this API, visitthis page.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/7000000025045/History?eventFilter=CommentHistory\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 0",
        "description": "Index number, starting from which the events must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-50",
        "description": "Number of events to list"
      },
      {
        "name": "eventFilter",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters events, based on their type. Values allowed are: CommentHistory , TimeEntryHistory , TaskHistory , CallHistory , EventHistory , AttachmentHistory , ApprovalHistory , SuperviseHistory , WorkflowHistory , MacroHistory , AssignmentRuleHistory , NotificationRuleHistory , SLAHistory , BlueprintHistory and SkillRelatedHistory"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "Key that filters details of actions performed by a particular agent. Value allowed is the agent's ID in Zoho Desk."
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters the history of a particular field. The value for this key must be the apiName of the field."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"actor\" : {\n      \"name\" : \"Aadavan\",\n      \"id\" : \"7000000025001\",\n      \"type\" : \"Contact\"\n    },\n    \"eventInfo\" : [ {\n      \"propertyName\" : \"Department\",\n      \"propertyType\" : \"Entity\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : {\n        \"name\" : \"Zylker Primary\",\n        \"id\" : \"7000000013224\",\n        \"type\" : \"Department\"\n      }\n    }, {\n      \"propertyName\" : \"Account Name\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Primary Account\"\n    }, {\n      \"propertyName\" : \"Contact Name\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Aadavan\"\n    }, {\n      \"propertyName\" : \"Email\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"aathavan@zylker.com\"\n    }, {\n      \"propertyName\" : \"Subject\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Ticket Subject\"\n    }, {\n      \"propertyName\" : \"Description\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"<div>Description.<br /></div>\"\n    }, {\n      \"propertyName\" : \"Status\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Open\"\n    }, {\n      \"propertyName\" : \"Case Owner\",\n      \"propertyType\" : \"Entity\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : {\n        \"name\" : \"Imman\",\n        \"id\" : \"7000000000059\",\n        \"type\" : \"Agent\"\n      }\n    }, {\n      \"propertyName\" : \"Channel\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Email\"\n    }, {\n      \"propertyName\" : \"Is Escalated\",\n      \"propertyType\" : \"Boolean\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : false\n    } ],\n    \"eventTime\" : \"2020-06-03T11:14:52.000Z\",\n    \"eventName\" : \"TicketCreated\",\n    \"source\" : \"Email\",\n    \"actorInfo\" : [ ]\n  } ]\n}"
  },
  {
    "Api name": "Get ticket resolution",
    "Api URL": "api/v1/tickets/{ticket_id}/resolution",
    "Api Method": "GET",
    "Desc": "This API fetches details related to the resolution of a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/resolution\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2015-12-12T00:00:00Z\",\n  \"author\" : {\n    \"firstName\" : \"saran\",\n    \"lastName\" : \"raj\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n    \"id\" : 160200000000068000,\n    \"email\" : \"carol@zylker.com\"\n  },\n  \"content\" : \"test resolution API\"\n}"
  },
  {
    "Api name": "Get resolution history",
    "Api URL": "api/v1/tickets/{ticket_id}/resolutionHistory",
    "Api Method": "GET",
    "Desc": "This API fetches the resolution history of a ticket",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/resolutionHistory\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number starting from which records must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-100",
        "description": "Number of records to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2015-12-12T00:00:00Z\",\n    \"author\" : {\n      \"firstName\" : \"saran\",\n      \"lastName\" : \"raj\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n      \"id\" : 160200000000068000,\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"content\" : \"update ticket resolution\"\n  }, {\n    \"modifiedTime\" : \"2015-11-12T00:00:00Z\",\n    \"author\" : {\n      \"firstName\" : \"saran\",\n      \"lastName\" : \"raj\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n      \"id\" : 160200000000068000,\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"content\" : \"add ticket resolution\"\n  } ]\n}"
  },
  {
    "Api name": "Update ticket resolution",
    "Api URL": "api/v1/tickets/{ticket_id}/resolution",
    "Api Method": "PATCH",
    "Desc": "This API updates the resolution field of a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/resolution\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isNotifyContact\" : false,\n  \"content\" : \"test resolution API\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content to add in the field"
      },
      {
        "name": "isNotifyContact",
        "data_type": "boolean optional",
        "description": "Key that specifies if the contact associated must be notified about the resolution"
      }
    ],
    "Response Example": "-d'{\n  \"isNotifyContact\" : false,\n  \"content\" : \"test resolution API\"\n}'"
  },
  {
    "Api name": "Delete ticket resolution",
    "Api URL": "api/v1/tickets/{ticket_id}/resolution",
    "Api Method": "DELETE",
    "Desc": "This API deletes a resolution added to a ticket.",
    "OAuth Scope": "Desk.tickets.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/resolution\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get ticket metrics",
    "Api URL": "/api/v1/tickets/([0-9]+)/metrics",
    "Api Method": "GET",
    "Desc": "This API fetches details related to the response and resolution times of a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000085990/metrics\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"firstResponseTime\" : \"01:50 hrs\",\n  \"reassignCount\" : 1,\n  \"outgoingCount\" : 2,\n  \"threadCount\" : 2,\n  \"totalResponseTime\" : \"02:50 hrs\",\n  \"responseCount\" : 1,\n  \"agentsHandled\" : [ {\n    \"handlingTime\" : \"00:50 hrs\",\n    \"agentId\" : 4000000012629,\n    \"agentName\" : \"XXX\"\n  }, {\n    \"handlingTime\" : \"01:50 hrs\",\n    \"agentId\" : 4000000080003,\n    \"agentName\" : \"YYY\"\n  } ],\n  \"resolutionTime\" : \"02:50 hrs\",\n  \"stagingData\" : [ {\n    \"handledTime\" : \"01:50 hrs\",\n    \"status\" : \"Open\"\n  }, {\n    \"handledTime\" : \"00:50 hrs\",\n    \"status\" : \"onhold\"\n  } ],\n  \"reopenCount\" : 0\n}"
  },
  {
    "Api name": "Empty spam tickets",
    "Api URL": "/api/v1/tickets/emptySpam",
    "Api Method": "POST",
    "Desc": "This API deletes all spam tickets.",
    "OAuth Scope": "Desk.tickets.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/emptySpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"1892000000006907\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department to which the tickets belong"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"1892000000006907\"\n}'"
  },
  {
    "Api name": "Execute Skill Based Assignment",
    "Api URL": "/api/v1/tickets/{ticket_id}/executeSkillbasedAssignment",
    "Api Method": "POST",
    "Desc": "This API assigns tickets to agents according to their designated skills and routing preferences.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1000000159323/executeSkillbasedAssignment?orgId=15157826\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"isAssigned\" : true,\n  \"newAssignee\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000000059/photo?orgId=111111\",\n    \"firstName\" : \"Alex\",\n    \"lastName\" : \"John\",\n    \"name\" : \"Alex\",\n    \"roleName\" : null,\n    \"externalId\" : null,\n    \"emailId\" : \"alex@zylker.com\",\n    \"id\" : \"1000000000059\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"alex@zylker.com\",\n    \"zuid\" : \"1231232\"\n  },\n  \"team\" : {\n    \"name\" : \"Automation Team\",\n    \"id\" : \"1000000000089\"\n  }\n}"
  },
  {
    "Api name": "Recalculate Skills",
    "Api URL": "/api/v1/tickets/{ticket_id}/recalculateSkills",
    "Api Method": "POST",
    "Desc": "This API removes existing skills and reapplies the required ones based on the ticket's current circumstances.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1000000159323/recalculateSkills\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-07-24T07:36:33.000Z\",\n  \"skillsInfo\" : [ {\n    \"weightage\" : \"10\",\n    \"skillName\" : \"Middle East\",\n    \"skillId\" : \"1000000174138\",\n    \"skillTypeId\" : \"1000000173007\",\n    \"mappingType\" : \"SYSTEM\",\n    \"skillTypeName\" : \"Region\"\n  }, {\n    \"weightage\" : \"9\",\n    \"skillName\" : \"Asia\",\n    \"skillId\" : \"1000000174140\",\n    \"skillTypeId\" : \"1000000173007\",\n    \"mappingType\" : \"SYSTEM\",\n    \"skillTypeName\" : \"Region\"\n  } ],\n  \"modifiedBy\" : \"1000000032001\",\n  \"id\" : \"1000000170017\"\n}"
  },
  {
    "Api name": "Suggest relevant articles for ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}/articleSuggestion",
    "Api Method": "GET",
    "Desc": "This API suggests help articles that could be relevant to resolving a ticket.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/22372000000103001/articleSuggestion?departmentId=40000000012359orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, range : >=0",
        "description": "Index number, starting from which the articles must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-50",
        "description": "Number of articles to list"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department to which the help article belongs. If you want to include help articles from all departments, pass 0 as the value of this key"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"creatorId\" : \"4000000000059\",\n    \"dislikeCount\" : \"0\",\n    \"modifierId\" : \"4000000000059\",\n    \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n    \"likeCount\" : \"0\",\n    \"locale\" : \"en\",\n    \"latestVersionModifierId\" : \"4000000000060\",\n    \"ownerId\" : \"4000000000059\",\n    \"title\" : \"Answering your first ticket.\",\n    \"isTrashed\" : false,\n    \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019059\",\n    \"viewCount\" : \"0\",\n    \"templateUsedUsersCount\" : \"2\",\n    \"owner\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"permission\" : \"AGENTS\",\n    \"authorId\" : \"4000000000059\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"4000000017276\",\n    \"templateUsageCount\" : \"0\",\n    \"translationId\" : \"4000000017294\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"latestVersion\" : \"1.0\",\n    \"isTemplate\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"feedbackCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n    \"attachmentCount\" : \"0\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"4000000017287\",\n      \"locale\" : \"en\"\n    },\n    \"permalink\" : \"answering-your-first-ticket\",\n    \"categoryId\" : \"4000000017287\",\n    \"latestVersionModifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"will smith\",\n      \"id\" : \"4000000000060\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234544\"\n    },\n    \"status\" : \"Published\"\n  } ]\n}"
  },
  {
    "Api name": "Threads",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Threads are conversations that occur between agents and customers. A thread can originate from multiple channels, such asFACEBOOK,TWITTER,EMAIL,TWITTER_DM,WEB,ONLINE_CHAT,OFFLINE_CHAT,FORUMS,TWILIO,ZTI,CUSTOMERPORTAL,FEEDBACK,FEEDBACK_WIDGET.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the thread"
      },
      {
        "name": "channel",
        "data_type": "string",
        "description": "Channel through which the thread originated. Values supported are FACEBOOK , TWITTER , EMAIL and FORUMS ."
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Status of the thread.Values supported are SUCCESS , PENDING , FAILED , DRAFT"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the thread"
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Formatting type of the content. Applicable only for the EMAIL channel. Values supported are html and plainText (default)."
      },
      {
        "name": "isForward",
        "data_type": "boolean",
        "description": "Key that returns if the thread was sent as a forward. Applicable only for the EMAIL channel."
      },
      {
        "name": "isPrivate",
        "data_type": "boolean",
        "description": "Specifies whether the thread is Private or Public. Forwarded threads are always private."
      },
      {
        "name": "inReplyToThreadId",
        "data_type": "long",
        "description": "ID of the thread to which current thread is a reply, applicable only for EMAIL channel"
      },
      {
        "name": "attachmentIds see documentation show Attributes",
        "data_type": "list",
        "description": "List of attachment IDs, applicable only for EMAIL channel. For information on how to retrieve attachment IDs, refer to the Uploads section."
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of creating the thread"
      },
      {
        "name": "direction",
        "data_type": "string",
        "description": "Key that returns whether the thread is incoming or outgoing"
      },
      {
        "name": "author show Attributes",
        "data_type": "object",
        "description": "Details of the user who created the thread"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the author"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the author"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the author"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the author"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of user. Values supported are AGENT and END_USER ."
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the Author. The ZohoContacts.userphoto.READ OAuth scope is mandatory to access this resource."
      },
      {
        "name": "fromEmailAddress see documentation",
        "data_type": "string",
        "description": "Mandatory parameter for creating an email thread. Applicable for EMAIL , ONLINE_CHAT , OFFLINE_CHAT , CUSTOMERPORTAL , and FORUMS channels."
      },
      {
        "name": "to",
        "data_type": "string",
        "description": "To email ID in the thread, applicable only for EMAIL channel"
      },
      {
        "name": "cc",
        "data_type": "string",
        "description": "Email ID to be CC-ed. Applicable only for EMAIL channel"
      },
      {
        "name": "bcc",
        "data_type": "string",
        "description": "Email ID to be BCC-ed., if any exist. Applicable only for EMAIL channel"
      },
      {
        "name": "phoneno",
        "data_type": "string",
        "description": "Phone number through which the thread originated, applicable only for the ZTI and TWILIO"
      },
      {
        "name": "summary",
        "data_type": "string",
        "description": "Summary of the thread"
      },
      {
        "name": "attachments show Attributes",
        "data_type": "object",
        "description": "Attachments in the thread"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Phone number through which the thread originated. Applicable only for the ZTI and TWILIO channels."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB"
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment"
      },
      {
        "name": "hasAttach",
        "data_type": "boolean",
        "description": "States whether the thread has attachments"
      },
      {
        "name": "isDescriptionThread",
        "data_type": "boolean",
        "description": "Key that denotes if the thread is the description of the ticket"
      },
      {
        "name": "channelRelatedInfo show Attributes",
        "data_type": "object",
        "description": "Secondary information related to the channel of the thread. Currently, this key is supported only for the Forums channel. Therefore, the API response will not return this information for threads generated through other channels"
      },
      {
        "name": "isBestSolution",
        "data_type": "boolean",
        "description": "Key that returns if the thread is chosen as the best solution in the forum topic"
      },
      {
        "name": "isDeleted",
        "data_type": "boolean",
        "description": "Key that returns if the thread is deleted from the forum topic or not."
      },
      {
        "name": "actions show Attributes",
        "data_type": "list",
        "description": "Actions available from the present state which will be included based on present status.It is a collection of all actions and each action has a rel,href and method.The respective links and methods to be invoked will be available under the 'href' and 'method' key for each action."
      },
      {
        "name": "rel",
        "data_type": "string",
        "description": "Type of action: send , update , or delete"
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "Link that executes the action"
      },
      {
        "name": "method",
        "data_type": "string",
        "description": "HTTP method that invokes the lin"
      },
      {
        "name": "respondedIn",
        "data_type": "string",
        "description": "Time taken by the agent to respond to the customer"
      },
      {
        "name": "canReply",
        "data_type": "boolean",
        "description": "Specifies whether replies can be added be added to this thread."
      },
      {
        "name": "source show Attributes",
        "data_type": "object",
        "description": "Details of the thread source from channel"
      },
      {
        "name": "extId",
        "data_type": "String",
        "description": "External ID of the thread"
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of the source channel"
      },
      {
        "name": "appName",
        "data_type": "String",
        "description": "Name of the application which created the channel"
      },
      {
        "name": "appPhotoURL",
        "data_type": "String",
        "description": "Photo URL of the application which created the channel."
      },
      {
        "name": "permalink",
        "data_type": "String",
        "description": "Permalink of the entity. Which is a URL to access the entity in the source channel."
      },
      {
        "name": "ticketStatus",
        "data_type": "string",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get a thread",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads/{thread_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single thread from your help desk portal.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000000135387?include=plainText\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Content of the thread in plain text format. Value allowed is plainText ."
      }
    ],
    "Response Example": "{\n  \"isDescriptionThread\" : true,\n  \"attachments\" : [ {\n    \"size\" : \"1913\",\n    \"name\" : \"ScreenShot\",\n    \"id\" : \"1892000001083005\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"bcc\" : \"\",\n  \"isContentTruncated\" : true,\n  \"canReply\" : true,\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"<div>Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation</div>\",\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2016-06-02T18:17:55.000Z\",\n  \"plainText\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"id\" : \"1892000000135387\",\n  \"contentType\" : \"text/html\",\n  \"direction\" : \"in\",\n  \"cc\" : \"\",\n  \"summary\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : null,\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"fullContentURL\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/fullContent\",\n  \"isForward\" : false,\n  \"hasAttach\" : true,\n  \"replyTo\" : \"jhonwin@zylker.com\",\n  \"attachmentCount\" : \"1\",\n  \"to\" : \"techsupport@zylker.com\",\n  \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n  \"actions\" : [ ],\n  \"status\" : \"SUCCESS\"\n}"
  },
  {
    "Api name": "Get Original Mail Content",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads/{thread_id}/originalContent",
    "Api Method": "GET",
    "Desc": "This API get the orginal mail content including mail headers",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\n/api/v1/tickets/1892000000094004/threads/1892000011194123/originalContent\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "inline",
        "data_type": "boolean optional",
        "description": "set this param as true if attachment is to be rendered"
      }
    ],
    "Response Example": "{\n  \"date\" : \"Tue, 30 Mar 2021 16:53:12 +0530\",\n  \"returnPath\" : \"<abc@zylker.com>\",\n  \"subject\" : \"Testing Mail Service\",\n  \"messageId\" : \"<17882df63bf.b181c6c3583.8110594270247400030@zylker.com>\",\n  \"from\" : \"ReplyTo <abc@zylker.com>\",\n  \"to\" : \"\\\"support\\\" <support@zylker.com>\",\n  \"content\" : \"Delivered-To: support@zylker.com\\nReturn-Path: <abc@zylker.com>\\nDomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; \\n  s=zoho; d=zoho.com; \\n  h=date:from:reply-to:to:message-id:subject:mime-version:content-type:user-agent; \\n  b=E6QQb4TtZN7WU1zmeUJx3hjj9BL0l/m6NhQU/3Oi+YlvXXhxSL6BFK0+CsAqJ/BJY/Y9hmdGNOM2\\n    I62RiQ5y8r9bUrVnGZH+Z9HvO3lPXZ4wM9kXypm9xmOo+gf0Dc2DxJKfPCvGrLT1QDzxeO+3tlPZ\\n    Xeqt6AsiCjXsXLcNUwc=  \\nReceived: from mail.zoho.com by zohomail.com.in\\n\\twith SMTP id 1617103392140118.88266397173629; Tue, 30 Mar 2021 16:53:12 +0530 (IST)\\nDate: Tue, 30 Mar 2021 16:53:12 +0530\\nFrom: ReplyTo <abc@zylker.com>\\nReply-To: abc@zylker.com\\nTo: \\\"support\\\" <support@zylker.com>\\nMessage-Id: <17882df63bf.b181c6c3583.8110594270247400030@zylker.com>\\nSubject: Testing Mail Service\\nMIME-Version: 1.0\\nContent-Type: multipart/alternative; \\n\\tboundary=\\\"----=_Part_1259_1074835283.1617103381439\\\"\\nImportance: Medium\\nUser-Agent: Zoho Mail\\nX-Mailer: Zoho Mail\\nX-ZohoMail-Owner: <17882df63bf.b181c6c3583.8110594270247400030@zylker.com>+zmo_0_abc@zylker.com\\n\\n------=_Part_1259_1074835283.1617103381439\\nContent-Type: text/plain; charset=\\\"UTF-8\\\"\\nContent-Transfer-Encoding: 7bit\\n\\nAldjfh Giri\\n\\n\\n\\n\\n\\nReplyTo\\n------=_Part_1259_1074835283.1617103381439\\nContent-Type: text/html; charset=\\\"UTF-8\\\"\\nContent-Transfer-Encoding: 7bit\\n\\n<!DOCTYPE html PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\"><html><head><meta content=\\\"text/html;charset=UTF-8\\\" http-equiv=\\\"Content-Type\\\" /></head><body><div style=\\\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt;\\\"><div><br /></div><div><br />Aldjfh Giri<br /></div><div id=\\\"\\\"><div><br /></div><div><br /></div><div>ReplyTo<br /></div><div><br /></div></div></div><br /></body></html>\\n------=_Part_1259_1074835283.1617103381439--\\n\\n\"\n}"
  },
  {
    "Api name": "Get Latest thread",
    "Api URL": "/api/v1/tickets/{ticket_id}/latestThread",
    "Api Method": "GET",
    "Desc": "This API fetches the most recent thread of a ticket.Note:TheAPI responsefor 'Get Latest Thread' will bedynamic, based on the channel from which the latest thread is received. For example, if the latest thread is received via theEmailchannel, the API will return the keyscc, to, and bcc, along with other details. These keys will not be included in the response for threads received via other channels.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/latestThread\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "needPublic",
        "data_type": "boolean optional, default : false",
        "description": "Key that denotes if the thread must be a public thread"
      },
      {
        "name": "needIncomingThread",
        "data_type": "boolean optional, default : false",
        "description": "Key that denotes if the thread must be an incoming threads only"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Content of the thread in plain text format. Value allowed is plainText ."
      },
      {
        "name": "threadStatus",
        "data_type": "string optional, max chars : 100",
        "description": "Receipt status of the thread. Values allowed are success and failed"
      }
    ],
    "Response Example": "{\n  \"cc\" : \"\",\n  \"summary\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"attachments\" : [ {\n    \"size\" : \"1913\",\n    \"name\" : \"ScreenShot\",\n    \"id\" : \"1892000001083005\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"bcc\" : \"\",\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : null,\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"isForward\" : false,\n  \"hasAttach\" : true,\n  \"replyTo\" : \"jhonwin@zylker.com\",\n  \"createdTime\" : \"2016-06-02T18:17:55.000Z\",\n  \"to\" : \"techsupport@zylker.com\",\n  \"id\" : \"1892000001083008\",\n  \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"SUCCESS\",\n  \"direction\" : \"in\"\n}"
  },
  {
    "Api name": "Send For Review",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads/{thread_id}/sendForReview",
    "Api Method": "POST",
    "Desc": "This API saves drafts of agent's responses to customers and sends them to a manager/senior agent for review.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000000012313/sendForReview\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List all threads",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads",
    "Api Method": "GET",
    "Desc": "This API lists all threads in your helpdesk.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000042034/threads\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the threads must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 100, range : 1-200",
        "description": "Number of threads to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the threads by sendDateTime. If the value of sortBy key is: \" sendDateTime \" - sorting will be done in ascending order \" -sendDateTime \" - (prefix the value with a \"-\") sorting will be done in descending order Note: If this sortBy key is not specified, the sorting will be done in descending order by default based on sendDateTime."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isDescriptionThread\" : true,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/user/176276372673/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FORUMS\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : null,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : {\n      \"isDeleted\" : \"false\",\n      \"isBestSolution\" : \"true\",\n      \"externalLink\" : null\n    },\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2015-03-25T13:40:23.031Z\",\n    \"attachmentCount\" : \"7\",\n    \"id\" : \"1892000000413186\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  }, {\n    \"summary\" : \"Customer Rating\",\n    \"cc\" : \"\",\n    \"isDescriptionThread\" : false,\n    \"bcc\" : \"\",\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"EMAIL\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"isForward\" : false,\n    \"hasAttach\" : true,\n    \"responderId\" : \"1892000000042001\",\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : \"00:05:14\",\n    \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n    \"attachmentCount\" : \"4\",\n    \"id\" : \"1892000001004072\",\n    \"to\" : \"carol@zylker.com\",\n    \"fromEmailAddress\" : \"techsupport@zylker.com\",\n    \"actions\" : [ {\n      \"method\" : \"POST\",\n      \"rel\" : \"send\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/resendFailedThread?threadId=1892000001083008\"\n    } ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"FAILED\",\n    \"direction\" : \"out\"\n  }, {\n    \"summary\" : \"Please fix this problem, since it is urgent posted the issue on Facebook \",\n    \"isDescriptionThread\" : false,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2150000000043591/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FACEBOOK\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : \"https://desk.zoho.com/api/v1/ratingOptions/31138000005998227/logo?orgId=54983163\",\n    \"hasAttach\" : false,\n    \"responderId\" : \"2150000000043591\",\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : \"00:04:09\",\n    \"createdTime\" : \"2016-07-25T10:04:43.739Z\",\n    \"attachmentCount\" : \"6\",\n    \"id\" : \"2150000002498038\",\n    \"actions\" : [ {\n      \"method\" : \"POST\",\n      \"rel\" : \"send\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n    }, {\n      \"method\" : \"DELETE\",\n      \"rel\" : \"delete\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n    } ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"DRAFT\",\n    \"direction\" : \"out\"\n  }, {\n    \"isDescriptionThread\" : false,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/user/176276372673/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FEEDBACK\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : null,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2015-03-25T13:40:23.031Z\",\n    \"attachmentCount\" : \"5\",\n    \"id\" : \"1892000000413189\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  } ]\n}"
  },
  {
    "Api name": "List conversations",
    "Api URL": "/api/v1/tickets/{ticket_id}/conversations",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of threads and comments recorded on a ticket, based on the limit specified.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000321001/conversations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Starting index from which the conversations should be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 100, range : 1-200",
        "description": "Number of conversations to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"We have found the root cause for the issue and fixed it. How would you rate our customer service? Good Okey Bad\",\n    \"isDescriptionThread\" : true,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FORUMS\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"type\" : \"thread\",\n    \"lastRatingIconURL\" : \"https://desk.zoho.com/api/v1/ratingOptions/31138000005998227/logo?orgId=54983163\",\n    \"isForward\" : false,\n    \"hasAttach\" : false,\n    \"responderId\" : \"1892000000042001\",\n    \"channelRelatedInfo\" : {\n      \"isDeleted\" : \"false\",\n      \"isBestSolution\" : \"true\",\n      \"externalLink\" : null\n    },\n    \"respondedIn\" : \"00:05:14\",\n    \"createdTime\" : \"2016-07-07T10:12:04.177Z\",\n    \"attachmentCount\" : \"7\",\n    \"id\" : \"1892000001080014\",\n    \"fromEmailAddress\" : \"techsupport@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"out\"\n  }, {\n    \"summary\" : \"Any update regarding the issue\",\n    \"cc\" : \"productmanagement@zylker.com\",\n    \"isDescriptionThread\" : false,\n    \"bcc\" : \"\",\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : null,\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"EMAIL\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"type\" : \"thread\",\n    \"lastRatingIconURL\" : null,\n    \"isForward\" : false,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2016-07-07T10:02:04.663Z\",\n    \"attachmentCount\" : \"6\",\n    \"id\" : \"1892000001080004\",\n    \"to\" : \"techsupport@zylker.com\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  }, {\n    \"modifiedTime\" : \"2016-02-16T14:12:20.000Z\",\n    \"commentedTime\" : \"2016-02-16T09:21:58.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000886025\",\n    \"type\" : \"comment\",\n    \"content\" : \"There is a major issue with the real time dashboard feature . Kindly look into it\",\n    \"commenterId\" : \"1892000000042001\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Send Reply via Integrated Custom Channels",
    "Api URL": "/api/v1/tickets/{ticket_id}/sendReply",
    "Api Method": "POST",
    "Desc": "This API sends a reply to any of the configured non-system channels. The channel must be able to handle the reply otherwise the reply will fail. Available channels to be used in this API can be fetched using Get Channels API.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/sendReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"YOUTUBE\",\n  \"content\" : \"Thank you for your valueable comment.\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"YOUTUBE\",\n  \"content\" : \"Thank you for your valueable comment.\"\n}'"
  },
  {
    "Api name": "Send Email Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/sendReply",
    "Api Method": "POST",
    "Desc": "This API sends an email reply. The from address in the email must be a from address configured in your help desk portal.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/sendReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketStatus\" : \"Closed\",\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have identified the root cause and fixed it.\",\n  \"isForward\" : \"true\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isPrivate",
        "data_type": "boolean optional, default : false",
        "description": "Specify whether the thread is Private"
      },
      {
        "name": "sendImmediately",
        "data_type": "boolean optional, default : false",
        "description": "Specify whether the reply has to sent immediately"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 100",
        "description": "Channel through which the thread originated. Values supported are FACEBOOK , TWITTER , EMAIL and FORUMS ."
      },
      {
        "name": "content",
        "data_type": "string required, max chars : 16000000",
        "description": "Content of the thread"
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Formatting type of the content. Applicable only for the EMAIL channel. Values supported are html and plainText (default)."
      },
      {
        "name": "isForward",
        "data_type": "boolean optional",
        "description": "Key that returns if the thread was sent as a forward. Applicable only for the EMAIL channel."
      },
      {
        "name": "isPrivate",
        "data_type": "boolean optional",
        "description": "Specifies whether the thread is Private or Public. Forwarded threads are always private."
      },
      {
        "name": "inReplyToThreadId",
        "data_type": "long optional",
        "description": "ID of the thread to which current thread is a reply, applicable only for EMAIL channel"
      },
      {
        "name": "attachmentIds see documentation",
        "data_type": "list optional",
        "description": "List of attachment IDs, applicable only for EMAIL channel. For information on how to retrieve attachment IDs, refer to the Uploads section."
      },
      {
        "name": "direction",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns whether the thread is incoming or outgoing"
      },
      {
        "name": "fromEmailAddress see documentation",
        "data_type": "string optional, max chars : 300",
        "description": "Mandatory parameter for creating an email thread. Applicable for EMAIL , ONLINE_CHAT , OFFLINE_CHAT , CUSTOMERPORTAL , and FORUMS channels."
      },
      {
        "name": "to",
        "data_type": "string optional, max chars : 13000",
        "description": "To email ID in the thread, applicable only for EMAIL channel"
      },
      {
        "name": "cc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be CC-ed. Applicable only for EMAIL channel"
      },
      {
        "name": "bcc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be BCC-ed., if any exist. Applicable only for EMAIL channel"
      },
      {
        "name": "hasAttach",
        "data_type": "boolean optional",
        "description": "States whether the thread has attachments"
      },
      {
        "name": "ticketStatus",
        "data_type": "string optional, max chars : 120",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      }
    ],
    "Response Example": "-d'{\n  \"ticketStatus\" : \"Closed\",\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have identified the root cause and fixed it.\",\n  \"isForward\" : \"true\"\n}'"
  },
  {
    "Api name": "Send Facebook Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/sendReply",
    "Api Method": "POST",
    "Desc": "This API adds a reply to a Facebook post",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/sendReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"We are looking into the issue.\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"We are looking into the issue.\"\n}'"
  },
  {
    "Api name": "Send Twitter Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/sendReply",
    "Api Method": "POST",
    "Desc": "This API sends a reply to a tweet.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/sendReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"TWITTER\",\n  \"content\" : \"The problem has been fixed. Sorry for the inconvenience caused.\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"TWITTER\",\n  \"content\" : \"The problem has been fixed. Sorry for the inconvenience caused.\"\n}'"
  },
  {
    "Api name": "Send Forum Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/sendReply",
    "Api Method": "POST",
    "Desc": "This API sends a reply to a comment on a forum post. While using this API, make sure to add the _ZohoDiscussions.basic.ALL_ scope in the request.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/sendReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}'"
  },
  {
    "Api name": "Draft Email Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/draftReply",
    "Api Method": "POST",
    "Desc": "This API drafts an email reply. The from address in the email must be a from address configured in your help desk portal.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have escaled the issue. Will update you regarding the progress.\",\n  \"isForward\" : \"true\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 100",
        "description": "Channel through which the thread originated. Values supported are FACEBOOK , TWITTER , EMAIL and FORUMS ."
      },
      {
        "name": "content",
        "data_type": "string required, max chars : 16000000",
        "description": "Content of the thread"
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Formatting type of the content. Applicable only for the EMAIL channel. Values supported are html and plainText (default)."
      },
      {
        "name": "isForward",
        "data_type": "boolean optional",
        "description": "Key that returns if the thread was sent as a forward. Applicable only for the EMAIL channel."
      },
      {
        "name": "isPrivate",
        "data_type": "boolean optional",
        "description": "Specifies whether the thread is Private or Public. Forwarded threads are always private."
      },
      {
        "name": "inReplyToThreadId",
        "data_type": "long optional",
        "description": "ID of the thread to which current thread is a reply, applicable only for EMAIL channel"
      },
      {
        "name": "attachmentIds see documentation",
        "data_type": "list optional",
        "description": "List of attachment IDs, applicable only for EMAIL channel. For information on how to retrieve attachment IDs, refer to the Uploads section."
      },
      {
        "name": "direction",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns whether the thread is incoming or outgoing"
      },
      {
        "name": "fromEmailAddress see documentation",
        "data_type": "string optional, max chars : 300",
        "description": "Mandatory parameter for creating an email thread. Applicable for EMAIL , ONLINE_CHAT , OFFLINE_CHAT , CUSTOMERPORTAL , and FORUMS channels."
      },
      {
        "name": "to",
        "data_type": "string optional, max chars : 13000",
        "description": "To email ID in the thread, applicable only for EMAIL channel"
      },
      {
        "name": "cc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be CC-ed. Applicable only for EMAIL channel"
      },
      {
        "name": "bcc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be BCC-ed., if any exist. Applicable only for EMAIL channel"
      },
      {
        "name": "hasAttach",
        "data_type": "boolean optional",
        "description": "States whether the thread has attachments"
      },
      {
        "name": "ticketStatus",
        "data_type": "string optional, max chars : 120",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      }
    ],
    "Response Example": "-d'{\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have escaled the issue. Will update you regarding the progress.\",\n  \"isForward\" : \"true\"\n}'"
  },
  {
    "Api name": "Draft Facebook Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/draftReply",
    "Api Method": "POST",
    "Desc": "This API drafts a reply to a Facebook post.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"The issue has been fixed\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"The issue has been fixed\"\n}'"
  },
  {
    "Api name": "Draft Forum Reply",
    "Api URL": "/api/v1/tickets/{ticket_id}/draftReply",
    "Api Method": "POST",
    "Desc": "This API drafts a reply to a forum post.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}'",
    "Params": [],
    "Response Example": "-d'{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}'"
  },
  {
    "Api name": "Update Draft",
    "Api URL": "/api/v1/tickets/{ticket_id}/draftReply/{thread_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates a draft thread created via theEMAIL,FACEBOOK, orFORUMchannel.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"channel\" : \"EMAIL\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We are analysing the issue currently , will update you with a solution as early as possible\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 100",
        "description": "Channel through which the thread originated. Values supported are FACEBOOK , TWITTER , EMAIL and FORUMS ."
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 16000000",
        "description": "Content of the thread"
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Formatting type of the content. Applicable only for the EMAIL channel. Values supported are html and plainText (default)."
      },
      {
        "name": "isForward",
        "data_type": "boolean optional",
        "description": "Key that returns if the thread was sent as a forward. Applicable only for the EMAIL channel."
      },
      {
        "name": "isPrivate",
        "data_type": "boolean optional",
        "description": "Specifies whether the thread is Private or Public. Forwarded threads are always private."
      },
      {
        "name": "inReplyToThreadId",
        "data_type": "long optional",
        "description": "ID of the thread to which current thread is a reply, applicable only for EMAIL channel"
      },
      {
        "name": "attachmentIds see documentation",
        "data_type": "list optional",
        "description": "List of attachment IDs, applicable only for EMAIL channel. For information on how to retrieve attachment IDs, refer to the Uploads section."
      },
      {
        "name": "direction",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns whether the thread is incoming or outgoing"
      },
      {
        "name": "fromEmailAddress see documentation",
        "data_type": "string optional, max chars : 300",
        "description": "Mandatory parameter for creating an email thread. Applicable for EMAIL , ONLINE_CHAT , OFFLINE_CHAT , CUSTOMERPORTAL , and FORUMS channels."
      },
      {
        "name": "to",
        "data_type": "string optional, max chars : 13000",
        "description": "To email ID in the thread, applicable only for EMAIL channel"
      },
      {
        "name": "cc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be CC-ed. Applicable only for EMAIL channel"
      },
      {
        "name": "bcc",
        "data_type": "string optional, max chars : 13000",
        "description": "Email ID to be BCC-ed., if any exist. Applicable only for EMAIL channel"
      },
      {
        "name": "hasAttach",
        "data_type": "boolean optional",
        "description": "States whether the thread has attachments"
      },
      {
        "name": "ticketStatus",
        "data_type": "string optional, max chars : 120",
        "description": "Status of the ticket. Includes the custom statuses configured in your help desk portal."
      }
    ],
    "Response Example": "-d'{\n  \"channel\" : \"EMAIL\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We are analysing the issue currently , will update you with a solution as early as possible\"\n}'"
  },
  {
    "Api name": "Delete attachment",
    "Api URL": "/api/v1/tickets/{ticket_id}/threads/{thread_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an attachment from a draft thread.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Contacts",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contacts are the end-customers who raise requests or make enquiries/complaints with your customer service team. Each contact is mapped to an account.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the contact"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Contact",
    "Api URL": "/api/v1/contacts/{contact_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single contact from your help desk portal.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/1892000000042032?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : accounts , owner"
      }
    ],
    "Response Example": "{\n  \"lastName\" : \"Lawrence\",\n  \"modifiedTime\" : \"2016-05-04T09:57:17.000Z\",\n  \"country\" : null,\n  \"secondaryEmail\" : null,\n  \"city\" : null,\n  \"description\" : null,\n  \"language\" : \"English\",\n  \"ownerId\" : \"1892000000042001\",\n  \"type\" : null,\n  \"title\" : null,\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000042032/photo\",\n  \"twitter\" : null,\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"zohoCRMContact\" : {\n    \"id\" : \"5000000014010\",\n    \"type\" : \"contacts_leads\"\n  },\n  \"customerHappiness\" : {\n    \"badPercentage\" : \"22\",\n    \"okPercentage\" : \"31\",\n    \"goodPercentage\" : \"47\"\n  },\n  \"state\" : null,\n  \"id\" : \"1892000000042032\",\n  \"email\" : \"lawrence@zylker.com\",\n  \"zip\" : null,\n  \"owner\" : {\n    \"firstName\" : \"Twin\",\n    \"lastName\" : \"john\",\n    \"id\" : \"1892000000042001\"\n  },\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_lastcontactedon\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"facebook\" : null,\n  \"mobile\" : null,\n  \"accountId\" : \"1892000000975382\",\n  \"firstName\" : \"Jennifer\",\n  \"isAnonymous\" : false,\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false\n}"
  },
  {
    "Api name": "List contacts",
    "Api URL": "/api/v1/contacts",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of contacts, based on the limit specified.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "list optional",
        "description": "Secondary information related to the contact.Value supported is accounts ."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the contacts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "string optional, max chars : 100, range : 1-100",
        "description": "Number of contacts to fetch"
      },
      {
        "name": "viewId",
        "data_type": "integer optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: firstName , lastName , or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "fields",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: photoURL , webUrl . Maximum of 30 fields is supported as comma separated values."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : \"+91 8508569683\",\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : false,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T14:46:24.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : false,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T14:46:24.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Create Contact",
    "Api URL": "/api/v1/contacts",
    "Api Method": "POST",
    "Desc": "This API creates a contact in your help desk portal.",
    "OAuth Scope": "Desk.contacts.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"Jack\",\n  \"country\" : \"USA\",\n  \"secondaryEmail\" : \"hughjack@zylker.com\",\n  \"city\" : \"Texas\",\n  \"facebook\" : \"hugh jacks\",\n  \"mobile\" : \"+10 2328829010\",\n  \"description\" : \"first priority contact\",\n  \"ownerId\" : \"1892000000056007\",\n  \"type\" : \"paidUser\",\n  \"title\" : \"The contact\",\n  \"accountId\" : \"1892000000052077\",\n  \"firstName\" : \"hugh\",\n  \"twitter\" : \"Hugh jack\",\n  \"phone\" : \"91020080878\",\n  \"street\" : \"North street\",\n  \"state\" : \"Austin\",\n  \"email\" : \"jack@zylker.com\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "object optional",
        "description": "User-defined fields related to the contact"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the contact"
      },
      {
        "name": "lastName",
        "data_type": "string required, max chars : 200",
        "description": "Last name of the contact"
      },
      {
        "name": "firstName",
        "data_type": "string optional, max chars : 40",
        "description": "First name of the contact"
      },
      {
        "name": "facebook",
        "data_type": "string optional, max chars : 100",
        "description": "Facebook ID of the contact"
      },
      {
        "name": "twitter",
        "data_type": "string optional, max chars : 100",
        "description": "Twitter ID of the contact"
      },
      {
        "name": "secondaryEmail",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary email ID of the contact"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 255",
        "description": "Email ID of the contact"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 50",
        "description": "Phone number of the contact"
      },
      {
        "name": "mobile",
        "data_type": "string optional, max chars : 50",
        "description": "Mobile number of the contact"
      },
      {
        "name": "city",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's city of residence"
      },
      {
        "name": "country",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's country of residence"
      },
      {
        "name": "state",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's state of residence"
      },
      {
        "name": "street",
        "data_type": "string optional, max chars : 250",
        "description": "Contact's address"
      },
      {
        "name": "zip",
        "data_type": "string optional, max chars : 30",
        "description": "Zip code"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Contact description"
      },
      {
        "name": "title",
        "data_type": "string optional, max chars : 100",
        "description": "Contact title"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 120",
        "description": "Contact type"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user who creates the contact"
      },
      {
        "name": "accountId see documentation",
        "data_type": "long optional",
        "description": "Account to which the contact is mapped"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 255",
        "description": "Language preference to set for the Contact"
      }
    ],
    "Response Example": "-d'{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"Jack\",\n  \"country\" : \"USA\",\n  \"secondaryEmail\" : \"hughjack@zylker.com\",\n  \"city\" : \"Texas\",\n  \"facebook\" : \"hugh jacks\",\n  \"mobile\" : \"+10 2328829010\",\n  \"description\" : \"first priority contact\",\n  \"ownerId\" : \"1892000000056007\",\n  \"type\" : \"paidUser\",\n  \"title\" : \"The contact\",\n  \"accountId\" : \"1892000000052077\",\n  \"firstName\" : \"hugh\",\n  \"twitter\" : \"Hugh jack\",\n  \"phone\" : \"91020080878\",\n  \"street\" : \"North street\",\n  \"state\" : \"Austin\",\n  \"email\" : \"jack@zylker.com\"\n}'"
  },
  {
    "Api name": "Update a contact",
    "Api URL": "/api/v1/contacts/{contact_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/contacts/1892000001128052\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"john\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "object optional",
        "description": "User-defined fields related to the contact"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the contact"
      },
      {
        "name": "lastName",
        "data_type": "string optional, max chars : 200",
        "description": "Last name of the contact"
      },
      {
        "name": "firstName",
        "data_type": "string optional, max chars : 40",
        "description": "First name of the contact"
      },
      {
        "name": "facebook",
        "data_type": "string optional, max chars : 100",
        "description": "Facebook ID of the contact"
      },
      {
        "name": "twitter",
        "data_type": "string optional, max chars : 100",
        "description": "Twitter ID of the contact"
      },
      {
        "name": "secondaryEmail",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary email ID of the contact"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 255",
        "description": "Email ID of the contact"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 50",
        "description": "Phone number of the contact"
      },
      {
        "name": "mobile",
        "data_type": "string optional, max chars : 50",
        "description": "Mobile number of the contact"
      },
      {
        "name": "city",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's city of residence"
      },
      {
        "name": "country",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's country of residence"
      },
      {
        "name": "state",
        "data_type": "string optional, max chars : 100",
        "description": "Contact's state of residence"
      },
      {
        "name": "street",
        "data_type": "string optional, max chars : 250",
        "description": "Contact's address"
      },
      {
        "name": "zip",
        "data_type": "string optional, max chars : 30",
        "description": "Zip code"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Contact description"
      },
      {
        "name": "title",
        "data_type": "string optional, max chars : 100",
        "description": "Contact title"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 120",
        "description": "Contact type"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user who creates the contact"
      },
      {
        "name": "accountId see documentation",
        "data_type": "long optional",
        "description": "Account to which the contact is mapped"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 255",
        "description": "Language preference to set for the Contact"
      }
    ],
    "Response Example": "-d'{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"john\"\n}'"
  },
  {
    "Api name": "Delete Contacts",
    "Api URL": "/api/v1/contacts/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves the contacts specified to the Recycle Bin.",
    "OAuth Scope": "Desk.contacts.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactIds\" : [ \"2000032002145\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contactIds",
        "data_type": "list required",
        "description": "IDs of the contacts to move to the Recycle Bin"
      }
    ],
    "Response Example": "-d'{\n  \"contactIds\" : [ \"2000032002145\" ]\n}'"
  },
  {
    "Api name": "Delete spam contacts",
    "Api URL": "/api/v1/contacts/deleteSpam",
    "Api Method": "POST",
    "Desc": "This API deletes the given spam contacts",
    "OAuth Scope": "Desk.contacts.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/deleteSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactIds\" : [ \"1892000000004507\", \"1892000000004508\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contactIds",
        "data_type": "list required",
        "description": "IDs of the spam contacts"
      }
    ],
    "Response Example": "-d'{\n  \"contactIds\" : [ \"1892000000004507\", \"1892000000004508\" ]\n}'"
  },
  {
    "Api name": "Get Contact Profiles",
    "Api URL": "/api/v1/contacts/{contact_id}/profiles",
    "Api Method": "GET",
    "Desc": "This api fetches the list of profiles of this contact from various channels.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/18289300000002/profiles\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "list optional",
        "description": "Additional information related to the profile's channel. Values allowed are: source"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoURL\" : \"https://www.youtube.com/user/iwe3in2/photo\",\n    \"displayName\" : \"Jade Vlogs\",\n    \"name\" : \"Jade Zylker\",\n    \"channel\" : \"YOUTUBE\",\n    \"id\" : \"3923923923\",\n    \"source\" : {\n      \"appName\" : \"Youtube Sync App\",\n      \"permalink\" : \"https://www.examplechannel.com/apps/redirect.php?entity=profile&id=3290dweiod\",\n      \"appPhotoURL\" : \"https://desk.zoho.com/api/v1/channels/youtube/photo?orgId=666236571\"\n    }\n  }, {\n    \"photoURL\" : \"https://www.intagram.com/johninsta/photo\",\n    \"displayName\" : \"John Insta\",\n    \"name\" : \"John Zylker\",\n    \"channel\" : \"INSTAGRAM\",\n    \"id\" : \"3923923924\",\n    \"source\" : {\n      \"appName\" : \"Instagram Syncing App\",\n      \"permalink\" : \"https://www.examplechannel.com/apps/redirect.php?entity=profile&id=3290dweiod\",\n      \"appPhotoURL\" : \"https://desk.zoho.com/api/v1/channels/instagram/photo?orgId=666236571\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Update many contacts",
    "Api URL": "/api/v1/contacts/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple contacts at once.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'"
  },
  {
    "Api name": "List Contacts By Ids",
    "Api URL": "/api/v1/contacts/contactsByIds",
    "Api Method": "GET",
    "Desc": "This API lists details of specific contacts, based on the IDs passed in the request.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/contactsByIds?ids=1892000000772001,1892000000772003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "long required",
        "description": "List of Contact Ids (separated by comma) which must be fetched. The maximum number of IDs allowed is 20."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : \"+91 8508569683\",\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : false,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : false,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"isSpam\" : false,\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "List tickets by contact",
    "Api URL": "/api/v1/contacts/{contact_id}/tickets",
    "Api Method": "GET",
    "Desc": "This API lists tickets received from a specific contact.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ, Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/18944000000421011/tickets?include=departments,team,assignee\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the tickets must be fetched"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the tickets must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: createdTime or modifiedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "dueDate",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by ticket duedate. Values allowed are overdue , tomorrow , currentWeek , currentMonth and today . You can include both values by separating them with a comma"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional, default : false",
        "description": "Filters Spam tickets"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the tickets. Values allowed are: products , departments , team , isRead and assignee . You can pass multiple values by separating them with a comma in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "List products by contact",
    "Api URL": "/api/v1/contacts/{contact_id}/products",
    "Api Method": "GET",
    "Desc": "This API lists products associated for a specific contact.",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ,Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000009277/products\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "From index"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of products to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "Department from which the products need to be queried"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"0.0\",\n    \"productCode\" : null,\n    \"id\" : \"4000000012009\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
  },
  {
    "Api name": "Get contacts count",
    "Api URL": "api/v1/contacts/count",
    "Api Method": "GET",
    "Desc": "This API displays the count for the number of contacts in a custom view",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/count?viewId=4000227563021&startsWith=A\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "Custom view ID"
      },
      {
        "name": "startsWith",
        "data_type": "String optional",
        "description": "Displays the number of contacts whose first name or last name begins with the letter you specify. Displays the total number of contacts if you do not specify a letter."
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "Get contact statistics",
    "Api URL": "/api/v1/contacts/{contact_id}/statistics",
    "Api Method": "GET",
    "Desc": "This API fetches the overall statistics of an contact.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000227563022/statistics\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the statistics must be fetched. If you do not pass this parameter in the API request, statistics from all permitted departments will be fetched."
      }
    ],
    "Response Example": "{\n  \"firstResponseTime\" : \"120000\",\n  \"openTickets\" : \"11\",\n  \"responseTime\" : \"13150000\",\n  \"spamTickets\" : \"0\",\n  \"totalTickets\" : \"36\",\n  \"customerHappiness\" : {\n    \"badCount\" : \"50\",\n    \"goodCount\" : \"0\",\n    \"okCount\" : \"50\"\n  },\n  \"closedTickets\" : \"23\",\n  \"resolutionTime\" : \"0\",\n  \"channelWiseCount\" : {\n    \"Web\" : \"12\",\n    \"Forums\" : \"14\",\n    \"Chat\" : \"10\"\n  },\n  \"onholdTickets\" : \"2\",\n  \"escalatedTickets\" : \"0\",\n  \"overdueTickets\" : \"0\"\n}"
  },
  {
    "Api name": "Merge Contacts",
    "Api URL": "/api/v1/contacts/{contact_id}/merge",
    "Api Method": "POST",
    "Desc": "This API merges two or more contactsNote:Though portal users (users who signed up via the help center) are saved as contacts in the help desk, their records cannot be merged with other records/contacts.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/1892000000042032/merge\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"4000000018011\", \"4000000018021\" ],\n  \"source\" : {\n    \"zip\" : \"4000000018011\",\n    \"lastName\" : \"4000000018011\",\n    \"country\" : \"4000000018011\",\n    \"secondaryEmail\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_permanentaddress\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"facebook\" : \"4000000018011\",\n    \"mobile\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"language\" : \"4000000018011\",\n    \"type\" : \"4000000018011\",\n    \"title\" : \"4000000018011\",\n    \"firstName\" : \"4000000018011\",\n    \"accountId\" : \"4000000018011\",\n    \"twitter\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the contacts to merge"
      },
      {
        "name": "source show Attributes",
        "data_type": "object optional",
        "description": "JSON object containing contact details, where each contact is identified by a unique ID . The attributes in the object provide information based on the specified contact ID"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"4000000018011\", \"4000000018021\" ],\n  \"source\" : {\n    \"zip\" : \"4000000018011\",\n    \"lastName\" : \"4000000018011\",\n    \"country\" : \"4000000018011\",\n    \"secondaryEmail\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_permanentaddress\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"facebook\" : \"4000000018011\",\n    \"mobile\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"language\" : \"4000000018011\",\n    \"type\" : \"4000000018011\",\n    \"title\" : \"4000000018011\",\n    \"firstName\" : \"4000000018011\",\n    \"accountId\" : \"4000000018011\",\n    \"twitter\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}'"
  },
  {
    "Api name": "Mark contact as spam",
    "Api URL": "/api/v1/contacts/markSpam",
    "Api Method": "POST",
    "Desc": "This API marks contacts as spam.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/markSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000030065\", \"1000000030068\" ],\n  \"isSpam\" : \"true\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "ID(s) of the contact(s) that must be marked or unmarked as spam"
      },
      {
        "name": "isSpam",
        "data_type": "boolean required",
        "description": "Key that marks or unmarks a single contact or multiple contacts as spam"
      },
      {
        "name": "handleExistingTickets",
        "data_type": "boolean optional",
        "description": "Key that marks or unmarks tickets from the contact(s) as spam"
      }
    ],
    "Response Example": "-d'{\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000030065\", \"1000000030068\" ],\n  \"isSpam\" : \"true\"\n}'"
  },
  {
    "Api name": "Associate products with a contact",
    "Api URL": "api/v1/contacts/{contact_id}/associateProducts",
    "Api Method": "POST",
    "Desc": "This API associates products with a contact. Only a maximum of 10 products can be associated with a contact through a single API request.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/7000000027081/associateProducts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the resources to associate"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department containing the products"
      },
      {
        "name": "associate",
        "data_type": "boolean required",
        "description": "true for associating the resource and false for dissociating the resource"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}'"
  },
  {
    "Api name": "Get contact history",
    "Api URL": "api/v1/contacts/{contact_id}/history",
    "Api Method": "GET",
    "Desc": "This API fetches the ticket history of a contact.",
    "OAuth Scope": "Desk.tickets.READ, Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000012934/history\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the history details must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "Key that filters ticket activities performed by a particular agent"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the history details must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-100",
        "description": "Number of history details to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"156648\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013957\",\n    \"priority\" : null,\n    \"recipients\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012999\",\n    \"eventTime\" : \"2019-09-19T09:37:11.000Z\",\n    \"operation\" : \"Comment_Updated\",\n    \"ticketId\" : \"4000000012999\",\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"125289\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Ticket subject here.\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013701\",\n    \"priority\" : null,\n    \"recipients\" : [ \"ragavan@zylker.com\", \"kannan@zylker.com\", \"thamizharasi@zylker.com\" ],\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012807\",\n    \"eventTime\" : \"2019-07-22T16:27:20.000Z\",\n    \"operation\" : \"Mail_Response_Forward\",\n    \"ticketId\" : \"4000000012807\",\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "Invite multiple contacts to help center",
    "Api URL": "api/v1/contacts/inviteAsEndUser",
    "Api Method": "POST",
    "Desc": "This API helps invite multiple contacts as end-users to your help center.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/inviteAsEndUser\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"helpCenterId\" : \"4000000021302\",\n  \"contactIds\" : [ \"4000000012902\", \"40000000212902\", \"40000002129122\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contactIds",
        "data_type": "list required",
        "description": "IDs of the contacts to invite"
      },
      {
        "name": "helpCenterId",
        "data_type": "long required",
        "description": "ID of the help center to which you want to add the contacts"
      }
    ],
    "Response Example": "-d'{\n  \"helpCenterId\" : \"4000000021302\",\n  \"contactIds\" : [ \"4000000012902\", \"40000000212902\", \"40000002129122\" ]\n}'"
  },
  {
    "Api name": "Invite contact to help center",
    "Api URL": "api/v1/contacts/{contact_id}/inviteAsEndUser",
    "Api Method": "POST",
    "Desc": "This API helps invite a particular contact as an end-user to your help center.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/40000000212902/inviteAsEndUser\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"helpCenterId\" : \"4000000021302\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long required",
        "description": "ID of the help center to which you want to add the contact"
      }
    ],
    "Response Example": "-d'{\n  \"helpCenterId\" : \"4000000021302\"\n}'"
  },
  {
    "Api name": "Delete contact photo",
    "Api URL": "api/v1/contacts/{contact_id}/photo",
    "Api Method": "DELETE",
    "Desc": "This API deletes the display picture of a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/contacts/40000000212902/photo\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get status of contact in help centers",
    "Api URL": "api/v1/contacts/{contact_id}/helpCenters",
    "Api Method": "GET",
    "Desc": "This API fetches a particular contact's activation status in all the help centers they are part of.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/40000000212902/helpcenters\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "Long optional",
        "description": "To get specific helpcenter info"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"helpCenter\" : {\n      \"name\" : \"Zoho\",\n      \"id\" : \"4000000016038\",\n      \"url\" : \"https://help.zoho.com/portal/zoho\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"userStatus\" : \"ACTIVE\",\n    \"userId\" : \"4000000023791\"\n  }, {\n    \"helpCenter\" : {\n      \"name\" : \"CRM\",\n      \"id\" : \"4000010498403\",\n      \"url\" : \"https://help.zoho.com/portal/crm\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"userStatus\" : \"ACTIVE\",\n    \"userId\" : \"4000000023791\"\n  } ]\n}"
  },
  {
    "Api name": "List accounts of contact",
    "Api URL": "/api/v1/contacts/{contact_id}/accounts",
    "Api Method": "GET",
    "Desc": "This API lists the accounts associated with a particular contact.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000009277/accounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which the accounts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of accounts to list"
      },
      {
        "name": "startsWith",
        "data_type": "String optional",
        "description": "Letter with which the names of the accounts must start"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: accountName or createdTime or mappingType . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"website\" : \"www.zoho.com\",\n    \"accountName\" : \"ZOHO\",\n    \"phone\" : \"8822120911\",\n    \"mappingInfo\" : {\n      \"mappingId\" : 1892000000052072,\n      \"mappingType\" : \"PRIMARY\",\n      \"isAccountTicketsViewable\" : true\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"30\",\n      \"okPercentage\" : \"30\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Associate accounts with contact",
    "Api URL": "api/v1/contacts/{contact_id}/associateAccounts",
    "Api Method": "POST",
    "Desc": "This API associates multiple accounts with a particular contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/7000000027081/associateAccounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"data\" : [ {\n    \"id\" : 7000000027223,\n    \"isAccountTicketsViewable\" : true\n  }, {\n    \"id\" : 7000000043968,\n    \"isAccountTicketsViewable\" : false\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "data",
        "data_type": "list optional",
        "description": "Details of the accounts to associate with the contact"
      }
    ],
    "Response Example": "-d'{\n  \"data\" : [ {\n    \"id\" : 7000000027223,\n    \"isAccountTicketsViewable\" : true\n  }, {\n    \"id\" : 7000000043968,\n    \"isAccountTicketsViewable\" : false\n  } ]\n}'"
  },
  {
    "Api name": "Dissociate accounts from contact",
    "Api URL": "api/v1/contacts/{contact_id}/dissociateAccounts",
    "Api Method": "POST",
    "Desc": "This API dissociates multiple accounts from a particular contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/7000000027081/dissociateAccounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the accounts to dissociate from the contact"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ]\n}'"
  },
  {
    "Api name": "Dissociate account from contact",
    "Api URL": "api/v1/contacts/{contact_id}/accounts/{account_id}/dissociate",
    "Api Method": "PATCH",
    "Desc": "This API dissociates a particular account from a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/contacts/7000000027081/accounts/7000000027223/dissociate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"optionValue\" : 7000000027226,\n  \"option\" : \"Move Tickets To Contact\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "option",
        "data_type": "String optional",
        "description": "Processing option to apply to the tickets after dissociating the account from the contact. Values allowed are: Move Tickets to Contact , Move Tickets To Account , Delete Tickets , and Maintain Same Relationship (default value)."
      },
      {
        "name": "optionValue",
        "data_type": "long optional",
        "description": "ID of the account or contact to which the tickets must be moved"
      }
    ],
    "Response Example": "-d'{\n  \"optionValue\" : 7000000027226,\n  \"option\" : \"Move Tickets To Contact\"\n}'"
  },
  {
    "Api name": "Approve contact for help center",
    "Api URL": "/api/v1/contacts/{contact_id}/approveEndUserInvite",
    "Api Method": "POST",
    "Desc": "This API helps approve a particular contact as an end-user to your help center.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/40000000212902/approveEndUserInvite\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"helpCenterIds\" : [ \"4000000021302\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterIds",
        "data_type": "list required",
        "description": "IDs of the help center in which you want to approve/reject the contacts"
      }
    ],
    "Response Example": "-d'{\n  \"helpCenterIds\" : [ \"4000000021302\" ]\n}'"
  },
  {
    "Api name": "Reject contact for help center",
    "Api URL": "/api/v1/contacts/{contact_id}/rejectEndUserInvite",
    "Api Method": "POST",
    "Desc": "This API helps reject a particular contact from being added as an end-user to your help center.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/40000000212902/rejectEndUserInvite\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"helpCenterIds\" : [ \"4000000021302\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterIds",
        "data_type": "list required",
        "description": "IDs of the help center in which you want to approve/reject the contacts"
      }
    ],
    "Response Example": "-d'{\n  \"helpCenterIds\" : [ \"4000000021302\" ]\n}'"
  },
  {
    "Api name": "Accounts",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account refers to customer organizations that use your products or services. An account can have multiple contacts.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the account"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Account",
    "Api URL": "/api/v1/accounts/{account_id}",
    "Api Method": "GET",
    "Desc": "This API fetches an account from your help desk portal.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/3263000000074571?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : owner"
      }
    ],
    "Response Example": "{\n  \"country\" : \"USA\",\n  \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n  \"code\" : \"3211\",\n  \"accountName\" : \"Zylker\",\n  \"city\" : null,\n  \"associatedSLAIds\" : [ 3263000000057, 3000000057001 ],\n  \"description\" : null,\n  \"industry\" : \"Automation\",\n  \"zohoCRMAccount\" : {\n    \"id\" : \"32754000000537001\"\n  },\n  \"ownerId\" : \"3263000000057001\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : null,\n  \"annualrevenue\" : null,\n  \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n  \"state\" : null,\n  \"id\" : \"3263000000074571\",\n  \"fax\" : \"+1 444 8656 8732\",\n  \"email\" : \"support@zylker.com\",\n  \"owner\" : {\n    \"firstName\" : \"Twin\",\n    \"lastName\" : \"john\",\n    \"id\" : \"3263000000057001\"\n  },\n  \"website\" : \"www.zylker.com\",\n  \"cf\" : {\n    \"cf_contactcount\" : \"1\"\n  },\n  \"isFollowing\" : \"true\",\n  \"phone\" : \"6218129190\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\"\n}"
  },
  {
    "Api name": "List accounts",
    "Api URL": "/api/v1/accounts",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of accounts, based on the limit specified.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the accounts must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of accounts to fetch"
      },
      {
        "name": "viewId",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: accountName or createdTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "fields",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: photoURL , webUrl . Maximum of 30 fields is supported as comma separated values."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"website\" : \"112121\",\n    \"accountName\" : \"Admin Account\",\n    \"phone\" : \"121212\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"30\",\n      \"okPercentage\" : \"30\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  }, {\n    \"website\" : \"1211212\",\n    \"accountName\" : \"Agent Account\",\n    \"phone\" : \"11211\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"20\",\n      \"okPercentage\" : \"40\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052090\",\n    \"email\" : \"agent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Create Account",
    "Api URL": "/api/v1/accounts",
    "Api Method": "POST",
    "Desc": "This API creates an account in your help desk portal.",
    "OAuth Scope": "Desk.contacts.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"accountName\" : \"Zylker\",\n  \"phone\" : \"98348229382\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields associated with the account"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields associated with the account"
      },
      {
        "name": "accountName",
        "data_type": "string required, max chars : 200",
        "description": "Name of the account"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 255",
        "description": "Email ID of the account"
      },
      {
        "name": "website",
        "data_type": "string optional, max chars : 120",
        "description": "Website of the account"
      },
      {
        "name": "fax",
        "data_type": "string optional, max chars : 30",
        "description": "Fax number of the account"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of account owner"
      },
      {
        "name": "associatedSLAIds",
        "data_type": "list optional",
        "description": "IDs of the SLAs associated with the account. An account can have multiple SLAs, but only one SLA per department can be mapped to it."
      },
      {
        "name": "industry",
        "data_type": "string optional, max chars : 120",
        "description": "Industry in which the account operates"
      },
      {
        "name": "city",
        "data_type": "string optional, max chars : 100",
        "description": "City in which the account is based"
      },
      {
        "name": "country",
        "data_type": "string optional, max chars : 100",
        "description": "Country in which the account is based"
      },
      {
        "name": "state",
        "data_type": "string optional, max chars : 100",
        "description": "State in which the account is based"
      },
      {
        "name": "street",
        "data_type": "string optional, max chars : 250",
        "description": "Address of the account"
      },
      {
        "name": "code",
        "data_type": "string optional, max chars : 30",
        "description": "Zip code"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "A short description of the account"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 30",
        "description": "Phone number of the account"
      },
      {
        "name": "annualrevenue",
        "data_type": "double optional",
        "description": "Annual revenue of the account"
      }
    ],
    "Response Example": "-d'{\n  \"accountName\" : \"Zylker\",\n  \"phone\" : \"98348229382\"\n}'"
  },
  {
    "Api name": "Update Account",
    "Api URL": "/api/v1/accounts/{account_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing account.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/accounts/3263000000074571\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"accountName\" : \"Zylker Agents\",\n  \"phone\" : \"82301023900123\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields associated with the account"
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields associated with the account"
      },
      {
        "name": "accountName",
        "data_type": "string optional, max chars : 200",
        "description": "Name of the account"
      },
      {
        "name": "email",
        "data_type": "string optional, max chars : 255",
        "description": "Email ID of the account"
      },
      {
        "name": "website",
        "data_type": "string optional, max chars : 120",
        "description": "Website of the account"
      },
      {
        "name": "fax",
        "data_type": "string optional, max chars : 30",
        "description": "Fax number of the account"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of account owner"
      },
      {
        "name": "associatedSLAIds",
        "data_type": "list optional",
        "description": "IDs of the SLAs associated with the account. An account can have multiple SLAs, but only one SLA per department can be mapped to it."
      },
      {
        "name": "industry",
        "data_type": "string optional, max chars : 120",
        "description": "Industry in which the account operates"
      },
      {
        "name": "city",
        "data_type": "string optional, max chars : 100",
        "description": "City in which the account is based"
      },
      {
        "name": "country",
        "data_type": "string optional, max chars : 100",
        "description": "Country in which the account is based"
      },
      {
        "name": "state",
        "data_type": "string optional, max chars : 100",
        "description": "State in which the account is based"
      },
      {
        "name": "street",
        "data_type": "string optional, max chars : 250",
        "description": "Address of the account"
      },
      {
        "name": "code",
        "data_type": "string optional, max chars : 30",
        "description": "Zip code"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "A short description of the account"
      },
      {
        "name": "phone",
        "data_type": "string optional, max chars : 30",
        "description": "Phone number of the account"
      },
      {
        "name": "annualrevenue",
        "data_type": "double optional",
        "description": "Annual revenue of the account"
      }
    ],
    "Response Example": "-d'{\n  \"accountName\" : \"Zylker Agents\",\n  \"phone\" : \"82301023900123\"\n}'"
  },
  {
    "Api name": "Delete Accounts",
    "Api URL": "/api/v1/accounts/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves the accounts specified to the Recycle Bin.",
    "OAuth Scope": "Desk.contacts.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"accountIds\" : [ \"2000032003232\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "accountIds",
        "data_type": "list required",
        "description": "IDs of the accounts to move to the Recycle Bin"
      }
    ],
    "Response Example": "-d'{\n  \"accountIds\" : [ \"2000032003232\" ]\n}'"
  },
  {
    "Api name": "Get contract",
    "Api URL": "/api/v1/accounts/{account_id}/contracts",
    "Api Method": "GET",
    "Desc": "Getting contracts of an Account",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/3263000000074571/contracts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "From index, DEFAULT 1"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of contracts to fetch, Ranges from 1-50, DEFAULT 50"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the contracts must be fetched"
      },
      {
        "name": "contractStatus",
        "data_type": "string optional, max chars : 100",
        "description": "Contract Status,Indicates the Current Status of the Contract, Values are ACTIVE , EXPIRED , FUTURE"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"slaName\" : \"Priority-based SLAs\",\n    \"endDate\" : \"2016-07-16\",\n    \"slaGroupId\" : \"4000000007069\",\n    \"departmentId\" : \"4000000007043\",\n    \"contractId\" : \"4000000032003\",\n    \"contractNumber\" : \"1212\",\n    \"description\" : \"contract for all desk account\",\n    \"contractName\" : \"Contract for desk account\",\n    \"ownerId\" : \"4000000008692\",\n    \"startDate\" : \"2016-06-16\"\n  } ]\n}"
  },
  {
    "Api name": "List all contracts count",
    "Api URL": "api/v1/contracts/count",
    "Api Method": "GET",
    "Desc": "This API lists the number of contracts made with the account.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contracts/count?viewId=4000227563021&departmentId=4000000007096&ownerId=4000227563909\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "Custom view Id"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "String required",
        "description": "Mandatory param to fetch the count of the contracts for a given ID of a department. You can also provide department as allDepartment to fetch the count of the contracts from all the departments"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "Displays the number of contracts of only a particular owner"
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "List all accounts count",
    "Api URL": "api/v1/accounts/count",
    "Api Method": "GET",
    "Desc": "Get accounts count",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/count?viewId=4000227563021&startsWith=A\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "Custom view ID"
      },
      {
        "name": "startsWith",
        "data_type": "String optional",
        "description": "Displays the number of accounts whose first name or last name begins with the letter you specify. Displays the total number of accounts if you do not specify a letter."
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "List Associated contacts",
    "Api URL": "api/v1/accounts/{accounts_id}/contacts?from={from}&limit={limit}&sortBy={sortingField}",
    "Api Method": "GET",
    "Desc": "This API lists the contacts associated with an account",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000008784/contacts?from=0&limit=20&sortBy=-fullName\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "From index"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "No. of contacts to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Parameter that sorts contacts by one of these attributes: firstName, lastName, fullName, phone, email, createdTime, modifiedTime"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional, default : false",
        "description": "Filters Spam contacts"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"Lawrence\",\n    \"secondaryEmail\" : null,\n    \"mappingInfo\" : {\n      \"mappingId\" : \"18026000003237019\",\n      \"mappingType\" : \"PRIMARY\",\n      \"isAccountTicketsViewable\" : true\n    },\n    \"mobile\" : \"+91 8508569683\",\n    \"type\" : null,\n    \"ownerId\" : \"4000000008734\",\n    \"firstName\" : null,\n    \"accountId\" : \"4000000008784\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : true,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : \"false\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"5000000014010\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"id\" : \"4000000008786\",\n    \"isSpam\" : false,\n    \"email\" : \"support@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "List tickets by account",
    "Api URL": "/api/v1/accounts/{account_id}/tickets",
    "Api Method": "GET",
    "Desc": "This API lists tickets received from a specific account.",
    "OAuth Scope": "Desk.tickets.READ,Desk.search.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/18944000000421015/tickets?include=assignee,departments,team,isRead\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the tickets must be fetched"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the tickets must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: createdTime or modifiedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "dueDate",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by ticket duedate. Values allowed are overdue , tomorrow , currentWeek , currentMonth and today . You can include both values by separating them with a comma"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional, default : false",
        "description": "Filters Spam tickets"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the tickets. Values allowed are: contacts , products , departments , team , isRead and assignee . You can pass multiple values by separating them with a comma in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8845678909\",\n      \"id\" : \"18944000000421011\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "List products by account",
    "Api URL": "/api/v1/accounts/{account_id}/products",
    "Api Method": "GET",
    "Desc": "This API lists products associated for a specific account.",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ,Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000026005/products\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "From index"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of products to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "Department from which the products need to be queried"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"0.0\",\n    \"productCode\" : null,\n    \"id\" : \"4000000012009\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
  },
  {
    "Api name": "Merge Accounts",
    "Api URL": "/api/v1/accounts/{account_id}/merge",
    "Api Method": "POST",
    "Desc": "This API merges two or more accounts.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/4000000008749/merge\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"4000000018011\", \"4000000018033\" ],\n  \"source\" : {\n    \"country\" : \"4000000018011\",\n    \"website\" : \"4000000018011\",\n    \"code\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_contactcount\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"industry\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"annualrevenue\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"state\" : \"4000000018011\",\n    \"fax\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the accounts to merge"
      },
      {
        "name": "source show Attributes",
        "data_type": "object optional",
        "description": "JSON object containing details of the account"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"4000000018011\", \"4000000018033\" ],\n  \"source\" : {\n    \"country\" : \"4000000018011\",\n    \"website\" : \"4000000018011\",\n    \"code\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_contactcount\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"industry\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"annualrevenue\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"state\" : \"4000000018011\",\n    \"fax\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}'"
  },
  {
    "Api name": "Associate products with an account",
    "Api URL": "api/v1/accounts/{account_id}/associateProducts",
    "Api Method": "POST",
    "Desc": "This API associates products with an account. Only a maximum of 10 products can be associated with an account through a single API request.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/7000000043860/associateProducts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the resources to associate"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department containing the products"
      },
      {
        "name": "associate",
        "data_type": "boolean required",
        "description": "true for associating the resource and false for dissociating the resource"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}'"
  },
  {
    "Api name": "Update many accounts",
    "Api URL": "/api/v1/accounts/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple accounts at once.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"phone\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"phone\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'"
  },
  {
    "Api name": "Get account history",
    "Api URL": "api/v1/accounts/{account_id}/history",
    "Api Method": "GET",
    "Desc": "This API fetches the ticket history of an account.",
    "OAuth Scope": "Desk.tickets.READ, Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000012234/history\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the history details must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "Key that filters ticket activities performed by a particular agent"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "Key that filters ticket activities related to a particular contact"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the history details must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-100",
        "description": "Number of history details to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"156648\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013957\",\n    \"priority\" : null,\n    \"recipients\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012999\",\n    \"eventTime\" : \"2019-09-19T09:37:11.000Z\",\n    \"operation\" : \"Comment_Updated\",\n    \"ticketId\" : \"4000000012999\",\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"125289\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Ticket subject here.\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013758\",\n    \"priority\" : null,\n    \"recipients\" : [ \"ragavan@zylker.com\", \"kannan@zylker.com\", \"thamizharasi@zylker.com\" ],\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012807\",\n    \"eventTime\" : \"2019-07-22T16:27:20.000Z\",\n    \"operation\" : \"Mail_Response_Forward\",\n    \"ticketId\" : \"4000000012807\",\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "Get account statistics",
    "Api URL": "/api/v1/accounts/([0-9]+)/statistics",
    "Api Method": "GET",
    "Desc": "This API fetches the overall statistics of an account.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/([0-9]+)/statistics\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the statistics must be fetched. If you do not pass this parameter in the API request, statistics from all permitted departments will be fetched."
      }
    ],
    "Response Example": "{\n  \"firstResponseTime\" : \"120000\",\n  \"openTickets\" : \"11\",\n  \"responseTime\" : \"13150000\",\n  \"spamTickets\" : \"0\",\n  \"totalTickets\" : \"31\",\n  \"customerHappiness\" : {\n    \"badCount\" : \"50\",\n    \"goodCount\" : \"0\",\n    \"okCount\" : \"50\"\n  },\n  \"closedTickets\" : \"20\",\n  \"resolutionTime\" : \"0\",\n  \"channelWiseCount\" : {\n    \"Web\" : \"15\",\n    \"Forums\" : \"15\",\n    \"Chat\" : \"1\"\n  },\n  \"onholdTickets\" : \"0\",\n  \"escalatedTickets\" : \"0\",\n  \"overdueTickets\" : \"0\"\n}"
  },
  {
    "Api name": "List account SLAs",
    "Api URL": "/api/v1/accounts/{account_id}/sla",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of SLAs associated with an account, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/3263000000074571/sla\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, range : >=0",
        "description": "Index number, starting from which the SLAs must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of SLAs to list"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the SLAs must be fetched. If you do not pass this parameter in the API request, SLAs from all permitted departments will be listed."
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the SLAs. Values allowed are: ACTIVE and INACTIVE"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"slaName\" : \"Priority-based SLAs\",\n    \"id\" : \"45794000000419372\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"Tesla\",\n      \"id\" : \"45794000000418059\"\n    }\n  }, {\n    \"slaName\" : \"SLA\",\n    \"id\" : \"45794000000570017\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"BMW\",\n      \"id\" : \"45794000000006907\"\n    }\n  }, {\n    \"slaName\" : \"Silver SLAs\",\n    \"id\" : \"45794000000587464\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"Jaguar\",\n      \"id\" : \"45794000000586067\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Associate or dissociate SLA from account",
    "Api URL": "/api/v1/accounts/{account_id}/sla/{sla_id}",
    "Api Method": "POST",
    "Desc": "This API associates or dissociates an SLA from an account.",
    "OAuth Scope": "Desk.contacts.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/3263000000074571/sla/32630000000570017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"associate\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "associate",
        "data_type": "boolean required",
        "description": "Key that specifies if the SLA must be associated with the account or not. true is for associating and false is for dissociating."
      }
    ],
    "Response Example": "-d'{\n  \"associate\" : true\n}'"
  },
  {
    "Api name": "Account Contact Mapping",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account-Contact mapping refers to the connection between a contact and the different accounts they are associated with.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Update association info",
    "Api URL": "/api/v1/accountContactMapping/{mapping_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an account-contact mapping.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/accountContactMapping/4000000023057\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"mappingType\" : \"PRIMARY\",\n  \"isAccountTicketsViewable\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isAccountTicketsViewable",
        "data_type": "Boolean optional",
        "description": "Key that specifies whether the contact can access all tickets related to the account"
      },
      {
        "name": "mappingType",
        "data_type": "String optional",
        "description": "Type of mapping connection between the contact and the account. Value allowed is PRIMARY , which sets the account as the primary account of the contact."
      }
    ],
    "Response Example": "-d'{\n  \"mappingType\" : \"PRIMARY\",\n  \"isAccountTicketsViewable\" : true\n}'"
  },
  {
    "Api name": "Tasks",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Tasks are work activities assigned to agents. It is not mandatory for tasks to be related to only ticket resolution.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the task"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get task",
    "Api URL": "/api/v1/tasks/{task_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a task from your help desk portal.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/5000000074002?include=assignee,tickets,contacts,teams,creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the task. Values allowed are: contacts , assignee , tickets , teams , creator ."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2019-04-08T07:26:26.000Z\",\n  \"subject\" : \"New gadget replacement with latest OS\",\n  \"completedTime\" : null,\n  \"departmentId\" : \"5000000012710\",\n  \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : \"Latest OS Version 32.9.4 \",\n  \"ownerId\" : \"5000000015911\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false\n  },\n  \"createdTime\" : \"2019-04-08T07:26:26.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000074002\",\n  \"creator\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"emailId\" : \"zylker@zylker.com\",\n    \"id\" : \"5000000015911\"\n  },\n  \"cf\" : { },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : \"3691000006805021\",\n    \"id\" : \"5000000016294\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  },\n  \"reminder\" : [ {\n    \"alertType\" : [ \"EMAIL\", \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-24T04:52:13.000Z\"\n  } ],\n  \"contactId\" : \"5000000016252\",\n  \"team\" : {\n    \"name\" : \"Desk Team\",\n    \"id\" : \"3691000006805021\",\n    \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n  },\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e4d4dad33a9adf3649\",\n  \"teamId\" : \"3691000006805021\",\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"category\" : null,\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Deferred\"\n}"
  },
  {
    "Api name": "List tasks",
    "Api URL": "/api/v1/tasks",
    "Api Method": "GET",
    "Desc": "This API fetches a particular number of tasks, based on the limit specified.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks?departmentId=5000000012710&include=teams,tickets,contacts,assignee\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the task. Values allowed are: contacts , assignee , tickets , teams , projects ."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the tasks must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of tasks to list"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department from which the tasks must be fetched"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "long optional",
        "description": "Departments from which the tasks need to be queried"
      },
      {
        "name": "viewId see documentation",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "assignee",
        "data_type": "long optional",
        "description": "Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas."
      },
      {
        "name": "dueDate",
        "data_type": "string optional, max chars : 100",
        "description": "Due date for completing the task. Values allowed are Overdue , Tomorrow , CurrentWeek , CurrentMonth and Today .You can pass multiple values by separating them with commas."
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the task is completed or not"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the tasks by a specific attribute: dueDate or createdTime .The default sorting order is ascending. A - prefix denotes a descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"Iphone charger replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000067003\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/d4c0a5dce55dcf20279262cd8594cd0d\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-30T14:21:50.000Z\",\n    \"startTime\" : \"1970-01-01T00:00:00.000Z\",\n    \"id\" : \"5000000209940\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"36\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000067003\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : null,\n    \"subject\" : \"Tempered glass replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e46474bbeb6432292e\",\n    \"teamId\" : \"3691000006805021\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-09T04:37:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000075033\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred12546\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
  },
  {
    "Api name": "Create task",
    "Api URL": "/api/v1/tasks",
    "Api Method": "POST",
    "Desc": "This API creates a task in your help desk portal.",
    "OAuth Scope": "Desk.activities.CREATE, Desk.activities.tasks.CREATE,Desk.tasks.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : null,\n  \"status\" : \"In Progress\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the task"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the task"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department in which the task must be created"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 300",
        "description": "Subject of the task"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket with which the task must be associated"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp optional",
        "description": "Due date for completing the task"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the task is assigned"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 120",
        "description": "Category of the task"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Status of task completion"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the task"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the task"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact associated with the task"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the task is assigned"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder set for the task"
      }
    ],
    "Response Example": "-d'{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : null,\n  \"status\" : \"In Progress\"\n}'"
  },
  {
    "Api name": "Update task",
    "Api URL": "/api/v1/tasks/{task_id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update the details of a task.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tasks/3000000054002\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"category\" : null,\n  \"priority\" : \"High\",\n  \"status\" : \"In Progress\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the task"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the task"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department in which the task must be created"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 300",
        "description": "Subject of the task"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket with which the task must be associated"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp optional",
        "description": "Due date for completing the task"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the task is assigned"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 120",
        "description": "Category of the task"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Status of task completion"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the task"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the task"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact associated with the task"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the task is assigned"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder set for the task"
      }
    ],
    "Response Example": "-d'{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"category\" : null,\n  \"priority\" : \"High\",\n  \"status\" : \"In Progress\"\n}'"
  },
  {
    "Api name": "Delete tasks",
    "Api URL": "/api/v1/tasks/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves task entries to the Recycle Bin of your help desk portal.",
    "OAuth Scope": "Desk.activities.DELETE, Desk.activities.tasks.DELETE,Desk.tasks.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"entityIds\" : [ \"2000032003232\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "entityIds",
        "data_type": "list required",
        "description": "IDs of the activities to delete"
      }
    ],
    "Response Example": "-d'{\n  \"entityIds\" : [ \"2000032003232\" ]\n}'"
  },
  {
    "Api name": "Delete spam tasks",
    "Api URL": "/api/v1/tasks/deleteSpam",
    "Api Method": "POST",
    "Desc": "This API deletes the given spam tasks",
    "OAuth Scope": "Desk.activities.DELETE, Desk.activities.tasks.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/deleteSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"taskIds\" : [ \"1892000000012307\", \"1892000000012308\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "taskIds",
        "data_type": "list required",
        "description": "IDs of the spam tasks"
      }
    ],
    "Response Example": "-d'{\n  \"taskIds\" : [ \"1892000000012307\", \"1892000000012308\" ]\n}'"
  },
  {
    "Api name": "List tasks by ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}/tasks",
    "Api Method": "GET",
    "Desc": "This API lists all tasks associated with a particular ticket.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tickets.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/5000000016294/tasks?include=assignee,tickets,contacts,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the tasks must be fetched"
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the task is completed or not"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional",
        "description": "Key that denotes whether to fetch spam tasks or not"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of tasks to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the tasks by a specific attribute: dueDate or createdTime .The default sorting order is ascending. A - prefix denotes a descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the task. Values allowed are: contacts , assignee , tickets , teams , projects ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"subject\" : \"New gadget replacement with latest OS\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4d4dad33a9adf3649\",\n    \"isCommented\" : false,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-08T07:26:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000074002\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013466\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e4d4dad33a9adf3649\",\n    \"teamId\" : \"3691000006805021\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred\"\n  }, {\n    \"subject\" : \"Tempered glass replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e46474bbeb6432292e\",\n    \"isCommented\" : false,\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-09T04:37:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000075033\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : null,\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013466\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e46474bbeb6432292e\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred12546\"\n  } ]\n}"
  },
  {
    "Api name": "List all tasks count",
    "Api URL": "/api/v1/tasks/count",
    "Api Method": "GET",
    "Desc": "This API returns the number of tasks in your help desk.",
    "OAuth Scope": "Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/count?viewId=5000000007880&departmentId=5000000007069\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the task count must be fetched"
      },
      {
        "name": "assignee",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters tasks by assignee. A valid assigneeId must be passed for this parameter. Multiple assigneeIds can be passed as comma-separated values."
      },
      {
        "name": "dueDate",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by task duedate. Values allowed are Overdue , Tomorrow , CurrentWeek , CurrentMonth and Today . You can include both values by separating them with a comma"
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "Update many tasks",
    "Api URL": "/api/v1/tasks/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple tasks at once.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'"
  },
  {
    "Api name": "Empty spam tasks",
    "Api URL": "/api/v1/tasks/emptySpam",
    "Api Method": "POST",
    "Desc": "This API deletes all spam tasks.",
    "OAuth Scope": "Desk.activities.DELETE, Desk.activities.tasks.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/emptySpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"4000000025121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department to which the activities belong"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"4000000025121\"\n}'"
  },
  {
    "Api name": "Products",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Products are the goods/services your organization sells.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the product"
      },
      {
        "name": "departmentIds see documentation show Attributes",
        "data_type": "list",
        "description": "IDs of departments associated with the product"
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of user to whom the product is assigned"
      },
      {
        "name": "productName",
        "data_type": "string",
        "description": "Name of the product"
      },
      {
        "name": "productCode",
        "data_type": "string",
        "description": "Reference code of the product"
      },
      {
        "name": "productCategory",
        "data_type": "string",
        "description": "Category to which the product belongs"
      },
      {
        "name": "manufacturer",
        "data_type": "string",
        "description": "Organization that manufactures the product"
      },
      {
        "name": "unitPrice",
        "data_type": "double",
        "description": "Price of the product"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get product",
    "Api URL": "/api/v1/products/{product_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single product from your helpdesk.",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products/6000000124009\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Key that fetches secondary information related to the product. Values allowed are: departments and owner . You can pass multiple values by separating them with commas."
      }
    ],
    "Response Example": "{\n  \"owner\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/6000000009050/photo?orgId=581861259\",\n    \"firstName\" : \"Aaron\",\n    \"lastName\" : \"Stone\",\n    \"name\" : \"Aaron Stone\",\n    \"id\" : \"6000000009050\"\n  },\n  \"unitPrice\" : \"100.0\",\n  \"modifiedTime\" : \"2017-06-28T13:25:06.000Z\",\n  \"cf\" : { },\n  \"description\" : null,\n  \"departmentIds\" : [ \"6000000009450\", \"6000000009380\", \"6000000009230\" ],\n  \"ownerId\" : \"6000000009050\",\n  \"layoutId\" : \"6000000002556\",\n  \"productName\" : \"Dell\",\n  \"productCategory\" : null,\n  \"productCode\" : \"12345\",\n  \"isDeleted\" : false,\n  \"createdBy\" : \"6000000009050\",\n  \"createdTime\" : \"2017-06-28T13:25:06.000Z\",\n  \"modifiedBy\" : \"6000000009050\",\n  \"id\" : \"6000000124009\",\n  \"departments\" : [ {\n    \"name\" : \"Associated Department 1\",\n    \"id\" : \"6000000009450\"\n  }, {\n    \"name\" : \"Associated Department 2\",\n    \"id\" : \"6000000009380\"\n  }, {\n    \"name\" : \"Associated Department 3\",\n    \"id\" : \"6000000009230\"\n  } ]\n}"
  },
  {
    "Api name": "List products",
    "Api URL": "/api/v1/products",
    "Api Method": "GET",
    "Desc": "This API lists a specific number of products from your help desk portal, based on the limit defined. (Note: The departmentIds key will soon be deprecated and not included in API responses.)",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products?departmentIds=6000000007239,6000000029263\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the products"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the products must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "No. of products to fetch"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the products must be fetched. If you want to list the products configured in all accessible departments, pass the value 0."
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of user to whom the product is assigned"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute : productName , productCode , unitPrice , createdTime or modifiedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "fields",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: layoutId . Maximum of 30 fields is supported as comma separated values."
      },
      {
        "name": "include see documentation",
        "data_type": "list optional",
        "description": "Secondary information related to the contact.Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121033\",\n    \"productName\" : \"HTC\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121037\",\n    \"productName\" : \"Dell\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000145024\",\n    \"productName\" : \"Lenovo\"\n  } ]\n}"
  },
  {
    "Api name": "Create product",
    "Api URL": "/api/v1/products",
    "Api Method": "POST",
    "Desc": "This API adds a product to your helpdesk.",
    "OAuth Scope": "Desk.products.CREATE,Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/products\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"unitPrice\" : \"100\",\n  \"productCode\" : \"12345\",\n  \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n  \"productName\" : \"Dell\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "list required",
        "description": "IDs of departments associated with the product"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of user to whom the product is assigned"
      },
      {
        "name": "productName",
        "data_type": "string required, max chars : 200",
        "description": "Name of the product"
      },
      {
        "name": "productCode",
        "data_type": "string optional, max chars : 200",
        "description": "Reference code of the product"
      },
      {
        "name": "productCategory",
        "data_type": "string optional, max chars : 200",
        "description": "Category to which the product belongs"
      },
      {
        "name": "manufacturer",
        "data_type": "string optional, max chars : 200",
        "description": "Organization that manufactures the product"
      },
      {
        "name": "unitPrice",
        "data_type": "double optional",
        "description": "Price of the product"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the product"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the product"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the product"
      }
    ],
    "Response Example": "-d'{\n  \"unitPrice\" : \"100\",\n  \"productCode\" : \"12345\",\n  \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n  \"productName\" : \"Dell\"\n}'"
  },
  {
    "Api name": "List tickets by products",
    "Api URL": "/api/v1/products/{product_id}/tickets",
    "Api Method": "GET",
    "Desc": "This API lists tickets received from a specific products.",
    "OAuth Scope": "Desk.tickets.READ,Desk.settings.READ,Desk.search.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products/18944000000424033/tickets?include=departments,team,assignee\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the tickets must be fetched"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the tickets must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-100",
        "description": "Number of tickets to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: createdTime or modifiedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "dueDate",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by ticket duedate. Values allowed are overdue , tomorrow , currentWeek , currentMonth and today . You can include both values by separating them with a comma"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional, default : false",
        "description": "Filters Spam tickets"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the tickets. Values allowed are: products , departments , team , isRead and assignee . You can pass multiple values by separating them with a comma in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"sentiment\" : \"NEGATIVE\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "Update product",
    "Api URL": "/api/v1/products/{product_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of a product in your help desk portal.",
    "OAuth Scope": "Desk.products.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/products/6000000124009\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentIds\" : [ \"6000000029263\", \"6000000125041\" ],\n  \"productName\" : \"Dell\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "list optional",
        "description": "IDs of departments associated with the product"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of user to whom the product is assigned"
      },
      {
        "name": "productName",
        "data_type": "string optional, max chars : 200",
        "description": "Name of the product"
      },
      {
        "name": "productCode",
        "data_type": "string optional, max chars : 200",
        "description": "Reference code of the product"
      },
      {
        "name": "productCategory",
        "data_type": "string optional, max chars : 200",
        "description": "Category to which the product belongs"
      },
      {
        "name": "manufacturer",
        "data_type": "string optional, max chars : 200",
        "description": "Organization that manufactures the product"
      },
      {
        "name": "unitPrice",
        "data_type": "double optional",
        "description": "Price of the product"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the product"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the product"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the product"
      }
    ],
    "Response Example": "-d'{\n  \"departmentIds\" : [ \"6000000029263\", \"6000000125041\" ],\n  \"productName\" : \"Dell\"\n}'"
  },
  {
    "Api name": "Move Products to trash",
    "Api URL": "/api/v1/products/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves products to the Recycle Bin of your help desk portal.",
    "OAuth Scope": "Desk.products.DELETE,Desk.settings.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/products/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"productIds\" : [ \"2000032003232\" ],\n  \"departmentId\" : \"2000032006800\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department containing the products"
      },
      {
        "name": "productIds",
        "data_type": "list required",
        "description": "IDs of the products you want to delete"
      }
    ],
    "Response Example": "-d'{\n  \"productIds\" : [ \"2000032003232\" ],\n  \"departmentId\" : \"2000032006800\"\n}'"
  },
  {
    "Api name": "Search for duplicate records",
    "Api URL": "/api/v1/products/searchDuplicates",
    "Api Method": "GET",
    "Desc": "This API searches for duplicate records of a product.",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products/searchDuplicates?productName=Dell\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the products must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "No. of products to fetch"
      },
      {
        "name": "productName",
        "data_type": "string required, max chars : 200",
        "description": "Name of the product, used as the keyword for the search"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121033\",\n    \"productName\" : \"Dell\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121037\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
  },
  {
    "Api name": "Associate contacts with a product",
    "Api URL": "api/v1/products/{product_id}/associateContacts",
    "Api Method": "POST",
    "Desc": "This API associates contacts with a product. Only a maximum of 10 contacts can be associated with a product through a single API request.",
    "OAuth Scope": "Desk.products.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/products/2000000031001/associateContacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"2000000034031\", \"2000000034029\" ],\n  \"associate\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the resources to associate"
      },
      {
        "name": "associate",
        "data_type": "boolean required",
        "description": "true for associating the resource and false for dissociating the resource"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"2000000034031\", \"2000000034029\" ],\n  \"associate\" : true\n}'"
  },
  {
    "Api name": "Associate accounts with a product",
    "Api URL": "api/v1/products/{product_id}/associateAccounts",
    "Api Method": "POST",
    "Desc": "This API associates accounts with a product. Only a maximum of 10 accounts can be associated with a product through a single API request.",
    "OAuth Scope": "Desk.products.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/products/2000000031001/associateAccounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"2000000029035\", \"2000000029001\" ],\n  \"associate\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the resources to associate"
      },
      {
        "name": "associate",
        "data_type": "boolean required",
        "description": "true for associating the resource and false for dissociating the resource"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"2000000029035\", \"2000000029001\" ],\n  \"associate\" : true\n}'"
  },
  {
    "Api name": "List accounts associated with product",
    "Api URL": "api/v1/products/{products_id}/accounts",
    "Api Method": "GET",
    "Desc": "This API lists the accounts associated with a product",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/products/2000000031001/accounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number starting from which the accounts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of accounts to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the accounts by a specific attribute: accountName or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"website\" : \"112121\",\n    \"accountName\" : \"Admin Account\",\n    \"phone\" : \"121212\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  }, {\n    \"website\" : \"1211212\",\n    \"accountName\" : \"Agent Account\",\n    \"phone\" : \"11211\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"id\" : \"1892000000052090\",\n    \"email\" : \"agent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "List contacts associated with product",
    "Api URL": "api/v1/products/{products_id}/contacts",
    "Api Method": "GET",
    "Desc": "This API lists the contacts associated with a product.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/products/2000000031001/contacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which the contacts must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of contacts to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Parameter that sorts contacts by one of these attributes: firstName, lastName, phone, email, account, createdTime, modifiedTime"
      },
      {
        "name": "include see documentation",
        "data_type": "list optional",
        "description": "Key that fetches secondary information related to the contact.Value allowed is accounts"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional, default : false",
        "description": "Filters Spam contacts"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : true,\n    \"phone\" : \"555555\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : true,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "HelpCenter",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Help center refers to the central self-service portal through which customers can look for solutions and fix issues by themselves.The help center brings together different help modules, such as your knowledge base, community forum, live chat, and ticket submission form",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List help centers",
    "Api URL": "/api/v1/helpCenters",
    "Api Method": "GET",
    "Desc": "This API lists the help centers configured in your Zoho Desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/helpCenters?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer optional, range : >0",
        "description": "Index number starting from which the helpcenters must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of helpcenters to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"name\" : \"Zoho Cares\",\n    \"id\" : \"24073000002579275\",\n    \"departmentIds\" : [ \"24073000000102043\" ],\n    \"isMultilingualEnabled\" : true,\n    \"helpCenterLocales\" : [ {\n      \"name\" : \"ZohoCorp Portal\",\n      \"locale\" : \"en\",\n      \"type\" : \"DEFAULT\",\n      \"status\" : \"ACCESIBLE_IN_HELPCENTER\"\n    } ],\n    \"primaryLocale\" : \"en\",\n    \"logoUrl\" : \"https://static.zohocdn.com/desk/app/images/portalLogo.de847024ebc0131731a3.png\",\n    \"url\" : \"https://help.zoho.com/portal/\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Get details of help center",
    "Api URL": "/api/v1/helpCenters/{helpcenter_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular help center.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/helpCenters/24073000002579275?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"domains\" : [ {\n    \"name\" : \"forums.zoho.com\",\n    \"type\" : \"SECONDARY\"\n  }, {\n    \"name\" : \"help.zoho.com\",\n    \"type\" : \"PRIMARY\"\n  } ],\n  \"logoLinkBackUrl\" : \"https://www.zoho.com/desk/\",\n  \"departmentIds\" : [ \"24073000000102043\" ],\n  \"logoUrl\" : \"https://static.zohocdn.com/desk/app/images/portalLogo.de847024ebc0131731a3.png\",\n  \"url\" : \"https://help.zoho.com/portal/\",\n  \"isDefault\" : true,\n  \"siteMapUpdatedTime\" : \"2019-12-26T08:48:09.000Z\",\n  \"name\" : \"Zoho Cares\",\n  \"favIconUrl\" : \"https://static.zohocdn.com/desk/app/images/support-2.befdbf2e5043b988ef7e.ico\",\n  \"id\" : \"24073000002579275\",\n  \"helpCenterLocales\" : [ {\n    \"name\" : \"Zoho Cares\",\n    \"locale\" : \"en\",\n    \"type\" : \"DEFAULT\",\n    \"status\" : \"ACCESIBLE_IN_HELPCENTER\"\n  } ],\n  \"primaryLocale\" : \"en\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update Helpcenter sitemaps",
    "Api URL": "/api/v1/helpCenters/4000000190032/sitemaps",
    "Api Method": "POST",
    "Desc": "This API will generate sitemaps for the given Helpcenter",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/helpCenters/4000000190032/sitemaps?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Users",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Users are the end-users of your product/service, who access your help center to find solutions.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "email show Attributes",
        "data_type": "list",
        "description": "Email address of the user"
      },
      {
        "name": "emailAddress",
        "data_type": "string",
        "description": "emailAddress Need to be changed"
      },
      {
        "name": "isPrimary",
        "data_type": "boolean",
        "description": "whether it is primary EmailAddress"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Activation status of the user. Values supported are ACTIVE and DISABLED ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List help center users",
    "Api URL": "/api/v1/users",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of help center users, based on the limit defined. It also helps you search for specific users.",
    "OAuth Scope": "Desk.search.READ, Desk.contacts.READ,Desk.settings.READ,Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&include=count\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the users must be fetched. The default value is 1."
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of users to list. The default value and the maximum value allowed is 50."
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of users by a particular attribute: -( email or modifiedTime )"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the users to list"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the users must be fetched"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the user. Value allowed is count ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastAccessedTime\" : \"2021-06-11T06:21:32.000Z\",\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/portalUser/17883000000094001/photo\",\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"Developer\",\n    \"id\" : \"310975130121\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#39B54A\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"Lock Label\",\n      \"id\" : \"24073000002823026\",\n      \"logoUrl\" : null\n    },\n    \"type\" : \"ENDUSER\",\n    \"status\" : \"ACTIVE\"\n  } ],\n  \"count\" : \"1\"\n}"
  },
  {
    "Api name": "Get details of user",
    "Api URL": "/api/v1/users/{user_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular help center user.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ,Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/users/310975130121?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the user. Value allowed is contact ."
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the user must be fetched"
      }
    ],
    "Response Example": "{\n  \"lastAccessedTime\" : \"2021-06-11T06:21:32.000Z\",\n  \"photoURL\" : \"https://desk.zoho.com/portal/api/portalUser/17883000000094001/photo\",\n  \"contactId\" : \"3313135931139\",\n  \"contact\" : {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"name\" : \"Developer\",\n    \"id\" : \"3313135931139\"\n  },\n  \"name\" : \"Developer\",\n  \"id\" : \"310975130121\",\n  \"label\" : {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#39B54A\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"name\" : \"Lock Label\",\n    \"id\" : \"24073000002823026\",\n    \"logoUrl\" : null\n  },\n  \"type\" : \"ENDUSER\",\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isVerified\" : \"false\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update details of user",
    "Api URL": "/api/v1/users/{user_id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update the details of a particular help center user.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/users/4000000190069?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the user must be updated"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "email",
        "data_type": "list optional",
        "description": "Email ID of the user"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Activation status of the user. Values supported are ACTIVE and DISABLED ."
      }
    ],
    "Response Example": "-d'{\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "Anonymize user",
    "Api URL": "api/v1/users/{user_id}/anonymize",
    "Api Method": "POST",
    "Desc": "This API permanently deletes all identifying information about a user from your help center.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/4000000190069?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"anonymizedName\" : \"Guest User 001\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "anonymizedName",
        "data_type": "string optional, max chars : 100",
        "description": "Display name of the user in tickets and community topics after anonymization"
      }
    ],
    "Response Example": "-d'{\n  \"anonymizedName\" : \"Guest User 001\"\n}'"
  },
  {
    "Api name": "List user groups",
    "Api URL": "/api/v1/users/{user_id}/groups",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of user groups in a help center, based on the limit defined.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/users/24073000002913021/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the groups must be fetched. The default value is 1"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of groups to list. The default value and the maximum value allowed is 50"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of user groups by a particular attribute: -( addedTime )"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the groups must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"addedTime\" : \"2020-04-06T04:50:50.000Z\",\n    \"name\" : \"Zoho CRM Partners\",\n    \"id\" : \"24073000002957057\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : null,\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"addedTime\" : \"2020-04-06T04:50:30.000Z\",\n    \"name\" : \"Zoho Desk Partners\",\n    \"id\" : \"24073000002957051\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/24073000002959001?portalId=b363e6f8e029247a38a55e49806bf1f683801f9cd92870bf7cc50d48844902f0\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"addedTime\" : \"2020-04-06T04:50:14.000Z\",\n    \"name\" : \"Zoho One Prime Customers\",\n    \"id\" : \"24073000002957045\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : null,\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Add user to groups",
    "Api URL": "/api/v1/users/{user_id}/groups/associate",
    "Api Method": "POST",
    "Desc": "This API adds a user to the groups specified.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/groups/associate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"groups\" : [ {\n    \"id\" : \"24073000002723212\"\n  }, {\n    \"id\" : \"24073000002732252\"\n  }, {\n    \"id\" : \"24073000002957051\"\n  }, {\n    \"id\" : \"24073000002793019\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the groups must be validated"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groups",
        "data_type": "list required",
        "description": "IDs of the groups to which the user must be added"
      }
    ],
    "Response Example": "-d'{\n  \"groups\" : [ {\n    \"id\" : \"24073000002723212\"\n  }, {\n    \"id\" : \"24073000002732252\"\n  }, {\n    \"id\" : \"24073000002957051\"\n  }, {\n    \"id\" : \"24073000002793019\"\n  } ]\n}'"
  },
  {
    "Api name": "Remove user from groups",
    "Api URL": "/api/v1/users/{user_id}/groups/dissociate",
    "Api Method": "POST",
    "Desc": "This API removes a user from the groups specified.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/groups/dissociate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"groupIds\" : [ \"24073000002957051\", \"24073000002932512\", \"24073000002953232\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the groups must be removed"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupIds",
        "data_type": "list required",
        "description": "IDs of the groups from which the user must be removed"
      }
    ],
    "Response Example": "-d'{\n  \"groupIds\" : [ \"24073000002957051\", \"24073000002932512\", \"24073000002953232\" ]\n}'"
  },
  {
    "Api name": "List labels of user",
    "Api URL": "/api/v1/users/{user_id}/labels",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of labels associated with a user, based on the limit defined.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/users/24073000002913021/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isPrimary",
        "data_type": "boolean optional",
        "description": "Key that filters the primary label assigned to the user"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the labels must be fetched. The default value is 1"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of labels to list. The default value and the maximum value allowed is 50"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of labels by a particular attribute: -( assignedTime )"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters."
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the labels must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"preferences\" : {\n      \"shape\" : \"ROUNDED\",\n      \"bgColor\" : \"#5787E0\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"Prime Customer\",\n    \"id\" : \"24073000002958013\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  }, {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#39B54A\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"Zoho One\",\n    \"id\" : \"24073000002958023\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  }, {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#CE6785\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"MVP\",\n    \"id\" : \"24073000002958029\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  } ]\n}"
  },
  {
    "Api name": "Assign labels to user",
    "Api URL": "/api/v1/users/{user_id}/labels/assign",
    "Api Method": "POST",
    "Desc": "This API assigns the labels you specify to a particular user.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/labels/assign?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"labels\" : [ {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958013\"\n  }, {\n    \"isPrimary\" : \"true\",\n    \"id\" : \"24073000002152013\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958023\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the labels must be validated"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "labels",
        "data_type": "list required",
        "description": "List containing the details of the labels to assign"
      }
    ],
    "Response Example": "-d'{\n  \"labels\" : [ {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958013\"\n  }, {\n    \"isPrimary\" : \"true\",\n    \"id\" : \"24073000002152013\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958023\"\n  } ]\n}'"
  },
  {
    "Api name": "Remove labels from user",
    "Api URL": "/api/v1/users/{user_id}/labels/remove",
    "Api Method": "POST",
    "Desc": "This API removes the labels you specify from a particular user.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/labels/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"labelIds\" : [ \"24073000002958023\", \"24073000002952323\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the labels must be removed"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "labelIds",
        "data_type": "list required",
        "description": "List containing the IDs of the labels to remove"
      }
    ],
    "Response Example": "-d'{\n  \"labelIds\" : [ \"24073000002958023\", \"24073000002952323\" ]\n}'"
  },
  {
    "Api name": "List User badges",
    "Api URL": "/api/v1/users/([0-9]+)/badges",
    "Api Method": "GET",
    "Desc": "This API lists user's default and custom badges, based on the limit defined.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/users/([0-9]+)/badges\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the badges must be fetched. The default value is 1"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of badges to list. The default value and the maximum value allowed is 50"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 100",
        "description": "Type of badge: default or custom"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Start time should be in GMT time zone"
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "End time should be in GMT time zone"
      }
    ],
    "Response Example": "[ {\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Best Contributor\",\n  \"id\" : \"1\",\n  \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n} ]"
  },
  {
    "Api name": "Add Badges to a user",
    "Api URL": "/api/v1/users/{user_id}/badges/associate",
    "Api Method": "POST",
    "Desc": "This API adds specified badges to user.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/badges/associate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"badgeIds\" : [ \"24073000002823212\", \"24073000002832252\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "badgeIds",
        "data_type": "list required",
        "description": "IDs of the badges to which the user must be associated"
      }
    ],
    "Response Example": "-d'{\n  \"badgeIds\" : [ \"24073000002823212\", \"24073000002832252\" ]\n}'"
  },
  {
    "Api name": "Remove Badges from user",
    "Api URL": "/api/v1/users/{user_id}/badges/dissociate",
    "Api Method": "POST",
    "Desc": "This API removes specified badges from the users.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/users/24073000002913021/badges/dissociate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"badgeIds\" : [ \"24073000002957051\", \"24073000002953232\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "badgeIds",
        "data_type": "list required",
        "description": "IDs of the badges from which the user must be dissociated"
      }
    ],
    "Response Example": "-d'{\n  \"badgeIds\" : [ \"24073000002957051\", \"24073000002953232\" ]\n}'"
  },
  {
    "Api name": "Labels",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Labels are tags that you add to users to highlight their contribution in your help center.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Create label",
    "Api URL": "/api/v1/labels",
    "Api Method": "POST",
    "Desc": "This API creates a label in your help center.",
    "OAuth Scope": "Desk.contacts.CREATE,Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoId\" : \"310975130121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the label"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the logo set for the label"
      },
      {
        "name": "helpCenterId",
        "data_type": "long required",
        "description": "ID of the help center in which the label must be created"
      },
      {
        "name": "preferences",
        "data_type": "JSONObject optional",
        "description": "Visual preferences related to the label/logo"
      }
    ],
    "Response Example": "-d'{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoId\" : \"310975130121\"\n}'"
  },
  {
    "Api name": "Update label",
    "Api URL": "/api/v1/labels/{label_id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update the details of a label.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"logoId\" : \"310975130121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the label"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the logo set for the label"
      },
      {
        "name": "preferences",
        "data_type": "JSONObject optional",
        "description": "Visual preferences related to the label/logo"
      }
    ],
    "Response Example": "-d'{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"logoId\" : \"310975130121\"\n}'"
  },
  {
    "Api name": "Get details of label",
    "Api URL": "/api/v1/labels/{label_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular label.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"count\" : \"320\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975130110\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n}"
  },
  {
    "Api name": "List labels",
    "Api URL": "/api/v1/labels",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of labels, based on the limit defined.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the labels must be fetched. The default value is 1."
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of labels to list. The default value and the maximum value allowed is 50."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of labels by a particular attribute: -( createdTime or modifiedTime , or name )"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular label. The keyword must contain at least two characters.          Three types of search are supported: keyword* (search for values that start with the keyword, *keyword* (search for values that contain the keyword), and keyword (search for values that are exact matches of the keyword)"
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the labels must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"preferences\" : {\n      \"shape\" : \"ROUNDED\",\n      \"bgColor\" : \"#FFEE\",\n      \"textColor\" : \"#FFEE\"\n    },\n    \"creator\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"modifier\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"name\" : \"Pro Customer\",\n    \"count\" : \"892\",\n    \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"id\" : \"310975130110\",\n    \"helpCenterId\" : \"310975130119\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n  } ]\n}"
  },
  {
    "Api name": "Delete label",
    "Api URL": "/api/v1/labels/{label_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a label from your help center.",
    "OAuth Scope": "Desk.contacts.DELETE,Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Delete label by labelIds",
    "Api URL": "/api/v1/labels",
    "Api Method": "DELETE",
    "Desc": "This API deletes labels, based on the IDs specified.",
    "OAuth Scope": "Desk.contacts.DELETE,Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&labelIds=310975130110,310975130021\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "labelIds",
        "data_type": "long optional",
        "description": "IDs of the labels to delete"
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "Assign label to users",
    "Api URL": "/api/v1/labels/{label_id}/users/add",
    "Api Method": "POST",
    "Desc": "This API assigns a particular label to multiple users.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/labels/310975130110/users/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users to whom the label must be assigned"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}'"
  },
  {
    "Api name": "Remove users under a label",
    "Api URL": "/api/v1/labels/{label_id}/users/remove",
    "Api Method": "POST",
    "Desc": "This API removes all users under a particular label.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/labels/310975130110/users/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users from whom the label must be removed"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}'"
  },
  {
    "Api name": "List users under a label",
    "Api URL": "/api/v1/labels/{label_id}/users",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users under a label, based on the limit defined.",
    "OAuth Scope": "Desk.search.READ, Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/labels/310975130110/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the users must be fetched. The default value is 1."
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-100",
        "description": "Number of users to list. The default value is 50 and the maximum value allowed is 100"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of users by a specific attribute: -( assignedTime )"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : null,\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"svega RM\",\n    \"userType\" : \"ENDUSER\",\n    \"assignee\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"Chris\",\n      \"id\" : \"6000000015895\"\n    },\n    \"id\" : \"6000000032907\",\n    \"assignedTime\" : \"2019-08-09T07:47:44.000Z\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Groups",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Groups are collections of end-users—often related to a specific account, geography, brand, or product—using which you can determine access to your knowledge base and community forums.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Create user groups",
    "Api URL": "/api/v1/groups",
    "Api Method": "POST",
    "Desc": "This API creates a user group in your help center.",
    "OAuth Scope": "Desk.contacts.CREATE,Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Prime Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"helpCenterId\" : \"31097519102\",\n  \"logoId\" : \"310975130121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 100",
        "description": "Name of the group"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 3000",
        "description": "A brief description of the group"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the logo to associate with the group"
      },
      {
        "name": "helpCenterId",
        "data_type": "long required",
        "description": "ID of the help center in which the group must be created"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Prime Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"helpCenterId\" : \"31097519102\",\n  \"logoId\" : \"310975130121\"\n}'"
  },
  {
    "Api name": "Update group",
    "Api URL": "/api/v1/groups/{group_Id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update the details of a user group.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/groups/310975134902?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"MVP Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"logoId\" : \"310975130133\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the group"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 3000",
        "description": "A brief description of the group"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the logo to associate with the group"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"MVP Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"logoId\" : \"310975130133\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "Get details of group",
    "Api URL": "/api/v1/groups/{group_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular user group.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groups/310975134902?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"MVP Customer\",\n  \"count\" : \"892\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975134902\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130133?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "List groups",
    "Api URL": "/api/v1/groups",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of groups, based on the limit defined.",
    "OAuth Scope": "Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=310975130119\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the groups must be fetched. The default value is 1."
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-50",
        "description": "Number of groups to list. The default value and the maximum value allowed is 50."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of groups by a particular attribute: -( createdTime , modifiedTime , name , or count )"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular group The keyword must contain at least two characters.        Three types of search are supported: keyword* (search for values that start with the keyword, *keyword* (search for values that contain the keyword),          and keyword (search for values that are exact matches of the keyword)."
      },
      {
        "name": "helpCenterId",
        "data_type": "long optional",
        "description": "ID of the help center from which the resource must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"creator\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"modifier\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"name\" : \"Pro Customer\",\n    \"count\" : \"353\",\n    \"description\" : \"Pro Customers paid customers of the org will avail 24x7 Support service\",\n    \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"id\" : \"310975130110\",\n    \"helpCenterId\" : \"310975130119\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130133?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Delete group",
    "Api URL": "/api/v1/groups/{group_Id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a user group from your help center.",
    "OAuth Scope": "Desk.contacts.DELETE,Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/groups/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Add users to group",
    "Api URL": "/api/v1/groups/{group_id}/users/add",
    "Api Method": "POST",
    "Desc": "This API adds users to a particular group.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/groups/310975130110/users/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"users\" : [ {\n    \"id\" : \"17883000000094001\"\n  }, {\n    \"id\" : \"17883000000094023\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "users",
        "data_type": "list required",
        "description": "IDs of the users who must be added to the group"
      }
    ],
    "Response Example": "-d'{\n  \"users\" : [ {\n    \"id\" : \"17883000000094001\"\n  }, {\n    \"id\" : \"17883000000094023\"\n  } ]\n}'"
  },
  {
    "Api name": "Remove users from group",
    "Api URL": "/api/v1/groups/{group_Id}/users/remove",
    "Api Method": "POST",
    "Desc": "This API removes particular users from a group.",
    "OAuth Scope": "Desk.contacts.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/groups/310975130110/users/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"17883000000013101\", \"17883000000094023\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users who must be removed from the group"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"17883000000013101\", \"17883000000094023\" ]\n}'"
  },
  {
    "Api name": "List users in a group",
    "Api URL": "/api/v1/groups/{group_Id}/users",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users in a group, based on the limit defined.",
    "OAuth Scope": "Desk.search.READ, Desk.contacts.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groups/310975130110/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 1, range : >0",
        "description": "Index number, starting from which the users must be fetched. The default value is 1."
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 50, range : 1-100",
        "description": "Number of users to list. The default value is 50 and the maximum value allowed is 100."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the list of users, based on a specific attribute: -( addedTime )"
      },
      {
        "name": "searchBy",
        "data_type": "String optional",
        "description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : null,\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/portal/api/user/24073000000095005/photo?orgId=143315\",\n      \"name\" : \"ZylCare Admin\",\n      \"id\" : \"24073000000095005\"\n    },\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"John \",\n    \"addedTime\" : \"2019-11-08T14:57:39.000Z\",\n    \"userType\" : \"ENDUSER\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#6CD4DF\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"Prime Customer\",\n      \"id\" : \"24073000002132001\"\n    },\n    \"id\" : \"24073000001997453\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Articles",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Articles are the source of information that you create/share in your Knowledge Base on the help desk portal for your customers to help themselves. They guide customers on how to use a feature/product, provide solutions to their issues, and also cover frequently encountered questions.Article translations:Although articles are all-inclusive and extensive, they become meaningless when the customers cannot understand them. As KB articles are customer-centric, we are providing a translation option to translate the article from a default language to a multi-lingual language.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "Long",
        "description": "ID of the article"
      },
      {
        "name": "departmentId",
        "data_type": "Long",
        "description": "ID of the department associated with the article"
      },
      {
        "name": "categoryId",
        "data_type": "Long",
        "description": "ID of the category associated with the article"
      },
      {
        "name": "title",
        "data_type": "String",
        "description": "Title of the article"
      },
      {
        "name": "answer",
        "data_type": "String",
        "description": "Content of the article"
      },
      {
        "name": "permalink",
        "data_type": "String",
        "description": "The permalink to access the article"
      },
      {
        "name": "authorId",
        "data_type": "Long",
        "description": "ID of the user who created the article"
      },
      {
        "name": "status",
        "data_type": "String",
        "description": "Publishing status of the article. Values allowed are Draft Published Review Unpublished"
      },
      {
        "name": "permission",
        "data_type": "String",
        "description": "Access permissions for the article. Values allowed are ALL, REGISTEREDUSERS, AGENTS"
      },
      {
        "name": "tags show Attributes",
        "data_type": "String Array",
        "description": "Tags associated with the article"
      },
      {
        "name": "seoTitle",
        "data_type": "String",
        "description": "SEO-specific title of the article"
      },
      {
        "name": "seoKeywords",
        "data_type": "String",
        "description": "SEO-specific keywords of the article"
      },
      {
        "name": "seoDescription",
        "data_type": "String",
        "description": "SEO-specific description of the article"
      },
      {
        "name": "expiryDate",
        "data_type": "String",
        "description": "Schedule the expiry date of the article. format : (YYYY-MM-DD HH:MM)"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List articles",
    "Api URL": "/api/v1/articles",
    "Api Method": "GET",
    "Desc": "This API fetches a specific number of articles from your knowledge base, based on the limit defined.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles?from=0&limit=10&sortBy=-createdTime&status=Published&categoryId=4000000013240&permission=ALL&orgId=5686513&modifiedTimeRange=2018-07-16T04:48:08.000Z,2018-07-16T07:48:08.000Z&authorId=4000000012931\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer optional, range : >0",
        "description": "Index number starting from which the articles must be fetched."
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of articles to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the articles based on a specific attribute: createdTime, or modifiedTime or likeCount or viewCount or feedbackCount or dislikeCount or positionArticle"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Access permission for the article. Values allowed are: ALL , REGISTEREDUSERS , and AGENTS"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "ID of article owner"
      },
      {
        "name": "categoryId",
        "data_type": "Long optional",
        "description": "ID of the category to which the article belongs"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters articles modified within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'"
      },
      {
        "name": "expiryTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters articles which will expire within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Publishing status of the article. Values allowed are Draft , Published , Review , Expired , Unpublished"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"departmentId\" : \"24073000000006907\",\n    \"creatorId\" : \"4000000000059\",\n    \"dislikeCount\" : \"0\",\n    \"modifierId\" : \"4000000000059\",\n    \"likeCount\" : \"0\",\n    \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n    \"locale\" : \"en\",\n    \"latestVersionModifierId\" : \"4000000000060\",\n    \"ownerId\" : \"4000000000059\",\n    \"title\" : \"Answering your first ticket.\",\n    \"translationState\" : \"UP-TO-DATE\",\n    \"isTrashed\" : false,\n    \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/24073000000095005/photo?orgId=54325703\",\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019059\",\n    \"viewCount\" : \"0\",\n    \"translationSource\" : null,\n    \"templateUsedUsersCount\" : \"2\",\n    \"owner\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"permission\" : \"AGENTS\",\n    \"authorId\" : \"4000000000059\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"4000000017276\",\n    \"sourceLocale\" : \"en\",\n    \"templateUsageCount\" : \"0\",\n    \"translationId\" : \"4000000017294\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"latestVersion\" : \"1.0\",\n    \"isTemplate\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"feedbackCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n    \"attachmentCount\" : \"0\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"position\" : \"1\",\n    \"availableLocaleTranslations\" : [ {\n      \"latestVersionStatus\" : \"Published\",\n      \"translationId\" : \"24073000000095164\",\n      \"isTrashed\" : false,\n      \"latestVersion\" : \"1.0\",\n      \"isLocked\" : false,\n      \"latestPublishedVersion\" : \"1.0\",\n      \"href\" : \"https://desk.zoho.com/api/v1/articles/24073000002823830/translations/en?orgId=54325703\",\n      \"authorId\" : \"24073000000095005\",\n      \"locale\" : \"en\",\n      \"translationState\" : \"UP-TO-DATE\",\n      \"status\" : \"Published\"\n    } ],\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"4000000017287\",\n      \"locale\" : \"en\"\n    },\n    \"permalink\" : \"answering-your-first-ticket\",\n    \"categoryId\" : \"4000000017287\",\n    \"latestVersionModifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"will smith\",\n      \"id\" : \"4000000000060\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234544\"\n    },\n    \"status\" : \"Published\"\n  } ]\n}"
  },
  {
    "Api name": "Get article",
    "Api URL": "/api/v1/articles/{article_id}",
    "Api Method": "GET",
    "Desc": "This API fetches an article from your knowledge base.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/22372000000133001?version=1.2&orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "version",
        "data_type": "String optional",
        "description": "Version number of the article"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"departmentId\" : \"24073000002376045\",\n  \"dislikeCount\" : \"0\",\n  \"modifierId\" : \"4000000000059\",\n  \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n  \"likeCount\" : \"0\",\n  \"latestVersionModifierId\" : \"4000000000060\",\n  \"ownerId\" : \"4000000000059\",\n  \"translationState\" : \"UP-TO-DATE\",\n  \"isTrashed\" : false,\n  \"quickEdit\" : {\n    \"modifierId\" : \"24073000007464062\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/24073000007464062/photo?orgId=54325703\",\n      \"name\" : \"Tony Stark\",\n      \"id\" : \"24073000007464062\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"70425988\"\n    }\n  },\n  \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"id\" : \"4000000019059\",\n  \"translationSource\" : null,\n  \"templateUsedUsersCount\" : \"2\",\n  \"latestVersionStatus\" : \"Published\",\n  \"author\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"reviewedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"currentVersion\" : \"1.0\",\n  \"commentCount\" : \"0\",\n  \"tags\" : [ \"first ticket\" ],\n  \"sourceLocale\" : \"en\",\n  \"translationId\" : \"4000000017294\",\n  \"isTemplate\" : false,\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n  \"feedbackCount\" : \"0\",\n  \"latestPublishedVersion\" : \"1.0\",\n  \"position\" : \"6\",\n  \"metrics\" : {\n    \"templateUsageCount\" : \"0\",\n    \"feedbackCount\" : \"2\",\n    \"unlikeCount\" : \"2\",\n    \"dislikeCount\" : \"2\",\n    \"lastUsageTime\" : null,\n    \"likeCount\" : \"1\",\n    \"viewCount\" : \"257\",\n    \"lastActivityTime\" : \"2023-02-21T13:26:07.000Z\",\n    \"usageCount\" : \"0\"\n  },\n  \"permalink\" : \"answering-your-first-ticket\",\n  \"latestVersionModifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"will smith\",\n    \"id\" : \"4000000000060\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234544\"\n  },\n  \"status\" : \"Published\",\n  \"attachments\" : [ {\n    \"resourceId\" : \"mvfyda9fcc4df229b4065a04fba88a5b81b33\",\n    \"extension\" : \"jpg\",\n    \"size\" : \"3028238\",\n    \"name\" : \"bird_2.jpg\",\n    \"downloadUrl\" : \"https://desk.zoho.com/api/v1/articles/24073000005321222/translations/en/attachments/mvfyda9fcc4df229b4065a04fba88a5b81b33/content?orgId=54325703&inline=false\",\n    \"viewUrl\" : \"https://desk.zoho.com/api/v1/articles/24073000005321222/translations/en/attachments/mvfyda9fcc4df229b4065a04fba88a5b81b33/content?orgId=54325703\",\n    \"createdTime\" : \"2021-11-02T05:11:21.000Z\"\n  } ],\n  \"reviewedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"creatorId\" : \"4000000000059\",\n  \"locale\" : \"en\",\n  \"title\" : \"Answering your first ticket.\",\n  \"expiryDate\" : null,\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"viewCount\" : \"0\",\n  \"seo\" : {\n    \"keywords\" : \"helpcenter, knowledge base\",\n    \"isEnabled\" : true,\n    \"description\" : \"Knowledge base\",\n    \"title\" : \"Helpcenter and knowledge base\"\n  },\n  \"owner\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n  \"isFollowing\" : true,\n  \"myVote\" : null,\n  \"permission\" : \"AGENTS\",\n  \"authorId\" : \"4000000000059\",\n  \"usageCount\" : \"0\",\n  \"rootCategoryId\" : \"4000000017276\",\n  \"templateUsageCount\" : \"0\",\n  \"answer\" : \"<p>Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly.<br><br>The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions.<br><br>Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket.<br><br>With these, you're good to go.<br><br>Go on, save the world from bad customer service!</p>\",\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"latestVersion\" : \"1.0\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n  \"attachmentCount\" : \"0\",\n  \"availableLocaleTranslations\" : [ {\n    \"latestVersionStatus\" : \"Published\",\n    \"translationId\" : \"24073000005321224\",\n    \"isTrashed\" : false,\n    \"latestVersion\" : \"19.0\",\n    \"isLocked\" : false,\n    \"latestPublishedVersion\" : \"19.0\",\n    \"href\" : \"https://desk.zoho.com/api/v1/articles/24073000005321222/translations/en?orgId=54325703\",\n    \"authorId\" : \"24073000000095005\",\n    \"locale\" : \"en\",\n    \"translationState\" : \"UP-TO-DATE\",\n    \"status\" : \"Published\"\n  }, {\n    \"latestVersionStatus\" : \"Draft\",\n    \"translationId\" : \"24073000005321260\",\n    \"isTrashed\" : false,\n    \"latestVersion\" : \"0.1\",\n    \"isLocked\" : false,\n    \"latestPublishedVersion\" : null,\n    \"href\" : \"https://desk.zoho.com/api/v1/articles/24073000005321222/translations/zh?orgId=54325703\",\n    \"authorId\" : \"24073000000095005\",\n    \"locale\" : \"zh\",\n    \"translationState\" : \"OUTDATED\",\n    \"status\" : \"Draft\"\n  } ],\n  \"category\" : {\n    \"name\" : \"General\",\n    \"id\" : \"4000000017287\",\n    \"locale\" : \"en\"\n  },\n  \"categoryId\" : \"4000000017287\"\n}"
  },
  {
    "Api name": "Create an article",
    "Api URL": "/api/v1/articles",
    "Api Method": "POST",
    "Desc": "This API creates an article in your helpdesk.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"permission\" : \"ALL\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Helpcenter, Knowledge Base\",\n  \"tags\" : [ \"knowledge base\", \"helpcenter\" ],\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"isTemplate\" : false,\n  \"permalink\" : \"knowledgebase\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "Long required",
        "description": "The Category"
      },
      {
        "name": "title",
        "data_type": "String required",
        "description": "The title of article"
      },
      {
        "name": "answer",
        "data_type": "String required",
        "description": "The answer part of article"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "The permalink of article"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "The owner of the article"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Status of the article Draft Published Review"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Permission of the article.Values allowed are ALL REGISTEREDUSERS AGENTS"
      },
      {
        "name": "tags",
        "data_type": "String Array optional",
        "description": "Tags associated with the article"
      },
      {
        "name": "seoTitle",
        "data_type": "String optional",
        "description": "SEO title of the article"
      },
      {
        "name": "seoKeywords",
        "data_type": "String optional",
        "description": "SEO keywords of the article"
      },
      {
        "name": "seoDescription",
        "data_type": "String optional",
        "description": "SEO description of article"
      },
      {
        "name": "isSEOEnabled",
        "data_type": "boolean optional",
        "description": "SEO enabled status of an article"
      },
      {
        "name": "expiryDate",
        "data_type": "String optional",
        "description": "Schedule the expiry date of the article. format : (YYYY-MM-DD HH:MM)"
      },
      {
        "name": "isTemplate",
        "data_type": "boolean optional",
        "description": "Is it a template"
      }
    ],
    "Response Example": "-d'{\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"permission\" : \"ALL\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Helpcenter, Knowledge Base\",\n  \"tags\" : [ \"knowledge base\", \"helpcenter\" ],\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"isTemplate\" : false,\n  \"permalink\" : \"knowledgebase\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\"\n}'"
  },
  {
    "Api name": "Update an article",
    "Api URL": "/api/v1/articles/{article_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing article.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/articles/22372000000133001?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"seoDescription\" : \"Knowledge base for your product\",\n  \"permission\" : \"REGISTEREDUSERS\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge base\",\n  \"seoKeywords\" : \"Knowledge base, Helpcenter\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\",\n  \"tags\" : [ \"helpcenter\", \"knowledge base\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "Long optional",
        "description": "The Category"
      },
      {
        "name": "title",
        "data_type": "String optional",
        "description": "The title of Article"
      },
      {
        "name": "answer",
        "data_type": "String optional",
        "description": "The answer part of the article"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "The permalink of the article"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "The owner of the article"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the article Draft Published Review Unpublished"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Permission of the article.Values allowed are ALL REGISTEREDUSERS AGENTS"
      },
      {
        "name": "tags",
        "data_type": "String Array optional",
        "description": "Tags associated with the article"
      },
      {
        "name": "seoTitle",
        "data_type": "String optional",
        "description": "SEO Title of article"
      },
      {
        "name": "seoKeywords",
        "data_type": "String optional",
        "description": "SEO Keywords of the article"
      },
      {
        "name": "seoDescription",
        "data_type": "String optional",
        "description": "SEO Description of the article"
      },
      {
        "name": "isSEOEnabled",
        "data_type": "boolean optional",
        "description": "SEO enabled status of the article"
      },
      {
        "name": "expiryDate",
        "data_type": "String optional",
        "description": "Schedule the expiry date of the article. format : (YYYY-MM-DD HH:MM)"
      }
    ],
    "Response Example": "-d'{\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"seoDescription\" : \"Knowledge base for your product\",\n  \"permission\" : \"REGISTEREDUSERS\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge base\",\n  \"seoKeywords\" : \"Knowledge base, Helpcenter\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\",\n  \"tags\" : [ \"helpcenter\", \"knowledge base\" ]\n}'"
  },
  {
    "Api name": "Validate permalink",
    "Api URL": "/api/v1/articles/checkPermalinkAvailability",
    "Api Method": "POST",
    "Desc": "This API validates if a permalink is available for a help article.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/checkPermalinkAvailability?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"permalink\" : \"how-to-open-account-2\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "The permalink of Solution"
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "Language"
      }
    ],
    "Response Example": "-d'{\n  \"permalink\" : \"how-to-open-account-2\"\n}'"
  },
  {
    "Api name": "Get article history",
    "Api URL": "/api/v1/articles/{article_id}/history",
    "Api Method": "GET",
    "Desc": "This API fetches the event history of an article.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/22372000000665001/history?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "From index"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of records to fetch"
      },
      {
        "name": "events",
        "data_type": "String optional",
        "description": "Actions happened on the article. We can give multiple events comma saperated. Allowed values CREATED , SEO_INFO_ADDED , TAGS_ADDED , ATTACHMENT_ADDED , ATTACHMENT_REMOVED , TAGS_EDITED , STATUS_CHANGED , DISPALY_PERMISSION_CHANGED , PERMALINK_EDITED , OWNER_CHANGED , SECTION_CHANGED , TITLE_EDITED , SEO_INFO_EDITED , VERSION_CREATED , MOVED_TO_TRASH , RESTORED , ATTACHMENT_MODIFIED , VERSION_REVERTED , TAGS_DELETED , COMMENTS_ADDED , COMMENTS_EDITED , COMMENTS_DELETED , VERSION_UPDATED , VERSION_QUICKEDIT , VERSION_DELETED , SEO_TITLE_CHANGED , SEO_KEYWORDS_CHANGED , SEO_DESCRIPTION_CHANGED , SEO_STATUS_CHANGED"
      },
      {
        "name": "userIds",
        "data_type": "Long optional",
        "description": "User who did the action"
      },
      {
        "name": "fromTime",
        "data_type": "Timestamp optional",
        "description": "From time. Time should be in GMT with format"
      },
      {
        "name": "toTime",
        "data_type": "Timestamp optional",
        "description": "To time. Time should be in GMT with format"
      }
    ],
    "Response Example": "{\n  \"comments\" : [ {\n    \"isTrashed\" : false,\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"isTrashed\" : false,\n      \"webUrl\" : \"https://desk.zoho.com/agent/zylker/zylker/tickets/details/7000000088057\",\n      \"id\" : \"7000000088057\"\n    },\n    \"isPublic\" : true,\n    \"id\" : \"7000000086279\",\n    \"ticketId\" : \"7000000088057\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"isTrashed\" : false,\n    \"ticket\" : null,\n    \"isPublic\" : true,\n    \"id\" : \"7000000086272\",\n    \"ticketId\" : null,\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"isTrashed\" : true,\n    \"ticket\" : {\n      \"ticketNumber\" : \"102\",\n      \"isTrashed\" : false,\n      \"webUrl\" : \"https://desk.zoho.com/agent/zylker/zylker/tickets/details/7000000088164\",\n      \"id\" : \"7000000088164\"\n    },\n    \"isPublic\" : true,\n    \"id\" : \"7000000086267\",\n    \"ticketId\" : \"7000000088164\",\n    \"status\" : \"PUBLISHED\"\n  } ],\n  \"data\" : [ {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"deltedVersion\" : [ \"2.0\", \"3.0\" ],\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"editedVersion\" : \"3.0\",\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_QUICKEDIT\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"oldVersion\" : \"3.0\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_REVERTED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newVersion\" : \"4.0\"\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"oldVersion\" : \"1.0\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_UPDATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newVersion\" : \"2.0\"\n  }, {\n    \"createdVersion\" : \"1.0\",\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_CREATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"RESTORED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:26:28.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"MOVED_TO_TRASH\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newPermalink\" : \"test-article888\",\n    \"eventTime\" : \"2018-03-15T14:19:28.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"PERMALINK_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"oldPermalink\" : \"test-article\"\n  }, {\n    \"eventTime\" : \"2018-03-15T14:16:06.000Z\",\n    \"deletedTags\" : [ \"asda\", \"qwer\", \"ert\" ],\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newTags\" : [ \"asda\", \"qwer\", \"ert\" ],\n    \"oldTags\" : [ \"asda\", \"qwer\" ],\n    \"eventTime\" : \"2018-03-15T14:15:52.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:15:40.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"addedTags\" : [ \"qwer\", \"asda\" ],\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_ADDED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-13T07:44:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"deletedCommentId\" : \"1000000014007\",\n    \"event\" : \"COMMENTS_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"editedCommentId\" : \"1000000014001\",\n    \"eventTime\" : \"2018-03-13T07:43:45.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"COMMENTS_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"addedCommentId\" : \"1000000014001\",\n    \"eventTime\" : \"2018-03-13T07:43:36.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"COMMENTS_ADDED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"removedAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_REMOVED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldAttachements\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_MODIFIED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ]\n  }, {\n    \"addedAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_ADDED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newSectionId\" : \"1000000012741\",\n    \"oldSectionId\" : \"1000000014013\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SECTION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldDisplayPermission\" : \"REGISTERED_USERS\",\n    \"newDisplayPermission\" : \"AGENTS_ONLY\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"DISPALY_PERMISSION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newStatus\" : \"PUBLISH\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"STATUS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newTitle\" : \"Test article dddddd\",\n    \"eventTime\" : \"2018-03-13T07:32:35.000Z\",\n    \"oldTitle\" : \"Test article\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TITLE_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_DESCRIPTION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_KEYWORDS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldSEOTitle\" : \"ajsjkda\",\n    \"newSEOTitle\" : \"ajsjkdaass\",\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_TITLE_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"oldSEOStatus\" : \"false\",\n    \"solutionId\" : \"1000000012768\",\n    \"newSEOStatus\" : \"true\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_STATUS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-12T14:05:07.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"CREATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Upload attachments",
    "Api URL": "/api/v1/articleAttachments",
    "Api Method": "POST",
    "Desc": "This API uploads files to your portal gallery.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articleAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&workspaceId=4fv34170cbb5ea8ed43a0932efaf53545818a&attachmentType=file\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "workspaceId",
        "data_type": "String required",
        "description": "Workspace id to which the attachement should be uploaded"
      },
      {
        "name": "attachmentType",
        "data_type": "String required",
        "description": "Attachment type. Allowed values file , blob"
      },
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "attachment files for articles"
      }
    ],
    "Response Example": "{\n  \"resourceId\" : \"96b17694d63cd0f03eadbe4ae534f4ba993bb0\",\n  \"extension\" : \"png\",\n  \"name\" : \"Screen Shot 2018-12-28 at 7.21.58 PM.png\",\n  \"filesize\" : \"62\",\n  \"url\" : \"https://desk.zoho.com/galleryDocuments/edbsnf8e40a0174a649fa9b698be5f73211329e2a7513daad01207c771fbf50e1b3e33f3f5c1d654f5a4c7805862493f6bb8a?inline=true\"\n}"
  },
  {
    "Api name": "Move articles to trash",
    "Api URL": "/api/v1/articles/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves articles to the Recycle Bin",
    "OAuth Scope": "Desk.articles.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/moveToTrash?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"2345678987654323\", \"3456789087654567\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array of Entity id to be deleted"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"2345678987654323\", \"3456789087654567\" ]\n}'"
  },
  {
    "Api name": "Preview article",
    "Api URL": "/api/v1/articles/preview",
    "Api Method": "POST",
    "Desc": "This API shows a preview of help articles, through which you can check the content for formatting, alignment, and grammar/spelling errors and get the look and feel of the help article even before publishing it.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/preview?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"answer\" : \"<div>Demo for article preview<br /></div><div>Lorem Ipsum is simply dummy text of the printing and typesetting industry. <br /></div>\",\n  \"title\" : \"Demo for article preview\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "title",
        "data_type": "String required",
        "description": "The title of article"
      },
      {
        "name": "answer",
        "data_type": "String required",
        "description": "The answer part of article"
      }
    ],
    "Response Example": "-d'{\n  \"answer\" : \"<div>Demo for article preview<br /></div><div>Lorem Ipsum is simply dummy text of the printing and typesetting industry. <br /></div>\",\n  \"title\" : \"Demo for article preview\"\n}'"
  },
  {
    "Api name": "Get article count",
    "Api URL": "/api/v1/articles/count",
    "Api Method": "GET",
    "Desc": "This API returns the number of articles published in the knowledge base of your help desk portal.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/count?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&categoryId=30000087654324&authorId=2000087651124&status=Draft&permission=ALL\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "Long optional",
        "description": "Article count for given category. If categoryId is not given or null, it considered as all category i.e all department"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "Article count for the particular author"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Publishing status of the article to get count. Values allowed are Draft , Published , Review , Expired , Unpublished"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Permissions to get the article count. Values allowed are ALL , REGISTEREDUSERS , AGENTS"
      }
    ],
    "Response Example": "{\n  \"count\" : \"5\"\n}"
  },
  {
    "Api name": "Map articles to tickets",
    "Api URL": "/api/v1/tickets/{ticket_id}/notifyArticleUsage",
    "Api Method": "POST",
    "Desc": "This API maps tickets with help articles to automatically suggest the same articles for similar tickets that arrive later.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/10002398278/notifyArticleUsage?orgId=55560202\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"1000000022005\", \"1000000034567\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array of Entity ids"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"1000000022005\", \"1000000034567\" ]\n}'"
  },
  {
    "Api name": "Get articles for manual sorting",
    "Api URL": "/api/v1/kbCategory/{category_id}/repositionArticles",
    "Api Method": "GET",
    "Desc": "This API lists the positions of help articles to enable manual sorting. Only leaf categories that have a maximum of 1000 articles can be repositioned.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbCategory/4000000013240/repositionArticles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000281023\",\n    \"id\" : \"22372000000281023\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\"\n  }, {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000209871\",\n    \"id\" : \"22372000000209871\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\"\n  } ]\n}"
  },
  {
    "Api name": "Update article position",
    "Api URL": "/api/v1/kbCategory/{category_id}/repositionArticles",
    "Api Method": "POST",
    "Desc": "This API helps you manually sort articles in your knowledge base. Only leaf categories that have a maximum of 1000 articles can be repositioned.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbCategory/2000087651211/repositionArticles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array of Entity ids"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}'"
  },
  {
    "Api name": "Add translation",
    "Api URL": "/api/v1/articles/{articleId}/translations",
    "Api Method": "POST",
    "Desc": "This API adds a translated version of an article.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/22372000000133001/translations?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"title\" : \"Importaance of asda Knowledge base\",\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Knowledge Base, Helpcenter\",\n  \"locale\" : \"en-us\",\n  \"authorId\" : \"1000000016052\",\n  \"translationState\" : \"UP-TO-DATE\",\n  \"status\" : \"Published\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "title",
        "data_type": "String required",
        "description": "The title of the Article"
      },
      {
        "name": "answer",
        "data_type": "String required",
        "description": "The answer part of the article"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "The permalink of the article"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Status of the article Draft Published Review"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Permission of the article.Values allowed are ALL REGISTEREDUSERS AGENTS"
      },
      {
        "name": "tags",
        "data_type": "String Array optional",
        "description": "Tags associated with the article"
      },
      {
        "name": "seoTitle",
        "data_type": "String optional",
        "description": "SEO Title of the article"
      },
      {
        "name": "seoKeywords",
        "data_type": "String optional",
        "description": "SEO Keywords of the article"
      },
      {
        "name": "seoDescription",
        "data_type": "String optional",
        "description": "SEO Description of the article"
      },
      {
        "name": "isSEOEnabled",
        "data_type": "boolean optional",
        "description": "SEO enabled status of the article"
      },
      {
        "name": "attachmentIds",
        "data_type": "String Array optional",
        "description": "IDs of the attachments associated with the article"
      },
      {
        "name": "expiryDate",
        "data_type": "String optional",
        "description": "Schedule the expiry date of the article. format : (YYYY-MM-DD HH:MM)"
      },
      {
        "name": "locale",
        "data_type": "String required",
        "description": "Language code of the article translation"
      },
      {
        "name": "authorId",
        "data_type": "Long required",
        "description": "ID of the user who created the article"
      },
      {
        "name": "translationState",
        "data_type": "String optional",
        "description": "Key that specifies the state of the translated article: OUTDATED UP-TO-DATE"
      }
    ],
    "Response Example": "-d'{\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"title\" : \"Importaance of asda Knowledge base\",\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Knowledge Base, Helpcenter\",\n  \"locale\" : \"en-us\",\n  \"authorId\" : \"1000000016052\",\n  \"translationState\" : \"UP-TO-DATE\",\n  \"status\" : \"Published\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Edit translation",
    "Api URL": "/api/v1/articles/{articleId}/translations/{locale}",
    "Api Method": "PATCH",
    "Desc": "This API edits an already translated article.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/articles/22372000000133001/translations/en-us?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"expiryDate\" : \"2019-12-01T11:29:16.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge component of a good help center.\",\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Knowledge Base, Helpcenter\",\n  \"status\" : \"DRAFT\",\n  \"tags\" : [ \"tag1\", \"tag2\", \"tag4\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "createVersion",
        "data_type": "Boolean optional",
        "description": "Denotes if a new version is needed"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "title",
        "data_type": "String optional",
        "description": "The title of the article"
      },
      {
        "name": "answer",
        "data_type": "String optional",
        "description": "The answer part of the article"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "The permalink of the article"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the article Draft Published Review Unpublished"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Permission of the article.Values allowed are ALL REGISTEREDUSERS AGENTS"
      },
      {
        "name": "tags",
        "data_type": "String Array optional",
        "description": "Tags associated with the article"
      },
      {
        "name": "seoTitle",
        "data_type": "String optional",
        "description": "SEO Title of the article"
      },
      {
        "name": "seoKeywords",
        "data_type": "String optional",
        "description": "SEO Keywords of the article"
      },
      {
        "name": "seoDescription",
        "data_type": "String optional",
        "description": "SEO Description of the article"
      },
      {
        "name": "isSEOEnabled",
        "data_type": "boolean optional",
        "description": "SEO enabled status of the article"
      },
      {
        "name": "attachmentIds",
        "data_type": "String Array optional",
        "description": "IDs of the attachments associated with the article"
      },
      {
        "name": "expiryDate",
        "data_type": "String optional",
        "description": "Schedule the expiry date of the article. format : (YYYY-MM-DD HH:MM)"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "ID of the user who created the article"
      },
      {
        "name": "translationState",
        "data_type": "String optional",
        "description": "Key that specifies the state of the translated article: OUTDATED UP-TO-DATE"
      }
    ],
    "Response Example": "-d'{\n  \"expiryDate\" : \"2019-12-01T11:29:16.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge component of a good help center.\",\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Knowledge Base, Helpcenter\",\n  \"status\" : \"DRAFT\",\n  \"tags\" : [ \"tag1\", \"tag2\", \"tag4\" ]\n}'"
  },
  {
    "Api name": "Get translations of an article",
    "Api URL": "/api/v1/articles/{article_id}/translations",
    "Api Method": "GET",
    "Desc": "This API fetches the available translations of an article.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/7000001424353/translations?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer optional, range : >0",
        "description": "Index number starting from which the translations must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of translations to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the articles based on a specific attribute: createdTime, or modifiedTime"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Publishing status of the translation. Values allowed are Draft , Published , Review , Expired , Unpublished"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "Access permission for the article. Values allowed are ALL , REGISTEREDUSERS , AGENTS"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "ID of translation owner"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters translations created within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'"
      },
      {
        "name": "translationState",
        "data_type": "String optional",
        "description": "Key that specifies the state of the translated article: OUTDATED UP-TO-DATE"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2019-01-17T11:11:48.000Z\",\n    \"departmentId\" : \"1000000012968\",\n    \"dislikeCount\" : \"0\",\n    \"modifierId\" : \"1000000016052\",\n    \"creatorId\" : \"1000000016052\",\n    \"likeCount\" : \"1\",\n    \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n    \"latestVersionModifierId\" : \"4000000000060\",\n    \"ownerId\" : \"24073000000095005\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"locale\" : \"it-IT\",\n    \"translationState\" : \"UP-TO-DATE\",\n    \"isTrashed\" : \"false\",\n    \"isLocked\" : \"true\",\n    \"createdTime\" : \"2019-01-16T18:24:49.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"1000000016052\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"id\" : \"1000000017031\",\n    \"viewCount\" : \"0\",\n    \"translationSource\" : {\n      \"locale\" : \"fr\",\n      \"version\" : \"2.0\"\n    },\n    \"templateUsedUsersCount\" : \"2\",\n    \"summary\" : \"Auto draft test \",\n    \"owner\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/24073000000095005/photo?orgId=54325703\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"24073000000095005\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"1000000016052\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"permission\" : \"REGISTEREDUSERS\",\n    \"authorId\" : \"1000000016052\",\n    \"usageCount\" : \"0\",\n    \"rootCategoryId\" : \"24073000002378289\",\n    \"commentCount\" : \"0\",\n    \"sourceLocale\" : \"en\",\n    \"templateUsageCount\" : \"0\",\n    \"translationId\" : \"100000001234968\",\n    \"latestVersion\" : \"3.0\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"1000000016052\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"isTemplate\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/1000000017031\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/kb/articles/tamil-for-article-1\",\n    \"feedbackCount\" : \"0\",\n    \"latestPublishedVersion\" : \"3.0\",\n    \"attachmentCount\" : \"0\",\n    \"position\" : \"6\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"1000000016397\",\n      \"locale\" : \"en\"\n    },\n    \"permalink\" : \"tamil-for-article-1\",\n    \"latestVersionModifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"will smith\",\n      \"id\" : \"4000000000060\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234544\"\n    },\n    \"categoryId\" : \"1000000016397\",\n    \"status\" : \"Published\"\n  } ]\n}"
  },
  {
    "Api name": "Get article translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}",
    "Api Method": "GET",
    "Desc": "This API fetches a specific translation of an article.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/7000001424353/translations/ta?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "version",
        "data_type": "String optional",
        "description": "Version of the article translation"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"departmentId\" : \"24073000002376045\",\n  \"prev\" : {\n    \"apiUrl\" : \"https://desk.zoho.com/api/v1/articles/175277000002814676/translations/en\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"id\" : \"175277000002814676\",\n    \"title\" : \"ESZ\",\n    \"permalink\" : \"esz\",\n    \"locale\" : \"en\"\n  },\n  \"dislikeCount\" : \"0\",\n  \"modifierId\" : \"4000000000059\",\n  \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n  \"likeCount\" : \"0\",\n  \"latestVersionModifierId\" : \"4000000000060\",\n  \"ownerId\" : \"4000000000059\",\n  \"translationState\" : \"UP-TO-DATE\",\n  \"isTrashed\" : false,\n  \"quickEdit\" : {\n    \"modifierId\" : \"24073000007464062\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/24073000007464062/photo?orgId=54325703\",\n      \"name\" : \"Tony Stark\",\n      \"id\" : \"24073000007464062\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"70425988\"\n    }\n  },\n  \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"plainText\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions. Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket. With these, you're good to go. Go on, save the world from bad customer service!\",\n  \"id\" : \"7000001424353\",\n  \"translationSource\" : null,\n  \"templateUsedUsersCount\" : \"2\",\n  \"latestVersionStatus\" : \"Published\",\n  \"author\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\"\n  },\n  \"reviewedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"currentVersion\" : \"1.0\",\n  \"commentCount\" : \"0\",\n  \"tags\" : [ \"first ticket\" ],\n  \"sourceLocale\" : \"en\",\n  \"translationId\" : \"4000000017294\",\n  \"isTemplate\" : false,\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n  \"feedbackCount\" : \"0\",\n  \"latestPublishedVersion\" : \"1.0\",\n  \"metrics\" : {\n    \"templateUsageCount\" : \"0\",\n    \"feedbackCount\" : \"0\",\n    \"unlikeCount\" : \"0\",\n    \"dislikeCount\" : \"0\",\n    \"lastUsageTime\" : null,\n    \"likeCount\" : \"0\",\n    \"viewCount\" : \"0\",\n    \"lastActivityTime\" : null,\n    \"usageCount\" : \"0\"\n  },\n  \"position\" : \"6\",\n  \"permalink\" : \"answering-your-first-ticket\",\n  \"latestVersionModifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"will smith\",\n    \"id\" : \"4000000000060\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234544\"\n  },\n  \"status\" : \"Published\",\n  \"next\" : {\n    \"apiUrl\" : \"https://desk.zoho.com/api/v1/articles/175277000002814676/translations/en\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"id\" : \"175277000002814676\",\n    \"title\" : \"ESZ\",\n    \"permalink\" : \"esz\",\n    \"locale\" : \"en\"\n  },\n  \"attachments\" : [ ],\n  \"reviewedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"creatorId\" : \"4000000000059\",\n  \"locale\" : \"en\",\n  \"title\" : \"Answering your first ticket.\",\n  \"expiryDate\" : null,\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\"\n  },\n  \"viewCount\" : \"0\",\n  \"seo\" : {\n    \"keywords\" : \"helpcenter, knowledge base\",\n    \"isEnabled\" : true,\n    \"description\" : \"Knowledge base\",\n    \"title\" : \"Helpcenter and knowledge base\"\n  },\n  \"owner\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n  \"isFollowing\" : true,\n  \"myVote\" : null,\n  \"permission\" : \"AGENTS\",\n  \"authorId\" : \"4000000000059\",\n  \"usageCount\" : \"0\",\n  \"rootCategoryId\" : \"4000000017276\",\n  \"templateUsageCount\" : \"0\",\n  \"answer\" : \"<p>Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly.<br><br>The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions.<br><br>Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket.<br><br>With these, you're good to go.<br><br>Go on, save the world from bad customer service!</p>\",\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\"\n  },\n  \"latestVersion\" : \"1.0\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n  \"attachmentCount\" : \"0\",\n  \"category\" : {\n    \"name\" : \"General\",\n    \"id\" : \"4000000017287\",\n    \"locale\" : \"en\"\n  },\n  \"categoryId\" : \"4000000017287\"\n}"
  },
  {
    "Api name": "Search Tags",
    "Api URL": "/api/v1/articleTranslations/searchByTag",
    "Api Method": "GET",
    "Desc": "This API searches for the provided string from within the translation of articles.",
    "OAuth Scope": "Desk.search.READ, Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleTranslations/searchByTag?orgId=2389290&authorId=1000000015894&searchString=tom&include=countInfo&limit=1&permission=ALL&status=Draft&isTrashed=TRUE&locale=ja-jp&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&isTemplate=false\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "tag",
        "data_type": "string required, max chars : 70",
        "description": "Key that filters articles, based on tags"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number starting from which the articles containing the search string must be fetched."
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-50",
        "description": "The end limit to which the articles containing search string must be fetched."
      },
      {
        "name": "categoryId",
        "data_type": "Long optional",
        "description": "The articles to be searched based on the category ID"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "The articles of the users to be searched based on the provided permissions. For example: If the value is REGISTEREDUSERS, the search will only include articles created by registered users. The allowed values are ALL , REGISTEREDUSERS , AGENTS"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "The articles that need to be searched based on the status. The allowed values are Draft , Review , Expired , Published , Unpublished"
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "The articles to be searched based on the language."
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "The search of the article includes countInfo or availableLocaleTranslations.  The allowed values are countInfo or availableLocaleTranslations . Note : countInfo - Search the most popular. articlesavailableLocaleTranslations - search from the provided language."
      },
      {
        "name": "isTrashed",
        "data_type": "String required, default : FALSE",
        "description": "The articles that are even in the recycle bin should be searched. The allowed values are TRUE , FALSE @ALL Note: To search in both locations, you can provide values as ALL."
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "The articles to be searched based on the ID of the article owner"
      }
    ],
    "Response Example": "{\n  \"countInfo\" : {\n    \"rootCategory\" : [ {\n      \"count\" : \"2\",\n      \"id\" : \"141551000000292220\"\n    } ],\n    \"category\" : [ {\n      \"count\" : \"2\",\n      \"id\" : \"141551000001746017\"\n    } ],\n    \"totalCount\" : \"2\"\n  },\n  \"data\" : [ {\n    \"modifiedTime\" : \"2025-01-20T11:07:34.000Z\",\n    \"departmentId\" : \"2000000026140\",\n    \"modifierId\" : \"2000000000521\",\n    \"creatorId\" : \"2000000000521\",\n    \"dislikeCount\" : \"0\",\n    \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n    \"likeCount\" : \"0\",\n    \"title\" : \"dev search nineth article\",\n    \"ownerId\" : \"2000000000521\",\n    \"latestVersionModifierId\" : \"2000000000521\",\n    \"locale\" : \"en\",\n    \"translationState\" : \"UP-TO-DATE\",\n    \"isTrashed\" : false,\n    \"isLocked\" : false,\n    \"createdTime\" : \"2025-01-20T06:52:00.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/api/v1/agents/2000000000521/photo?orgId=24594186\",\n      \"name\" : \"bhuvan vignesh\",\n      \"id\" : \"2000000000521\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"24588564\"\n    },\n    \"viewCount\" : \"3\",\n    \"id\" : \"2000000352001\",\n    \"translationSource\" : null,\n    \"templateUsedUsersCount\" : \"2\",\n    \"summary\" : \"dev search nineth article\",\n    \"owner\" : {\n      \"photoURL\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/api/v1/agents/2000000000521/photo?orgId=24594186\",\n      \"name\" : \"bhuvan vignesh\",\n      \"id\" : \"2000000000521\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"24588564\"\n    },\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/api/v1/agents/2000000000521/photo?orgId=24594186\",\n      \"name\" : \"bhuvan vignesh\",\n      \"id\" : \"2000000000521\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"24588564\"\n    },\n    \"permission\" : \"AGENTS\",\n    \"authorId\" : \"2000000000521\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"2000000049873\",\n    \"sourceLocale\" : \"en\",\n    \"templateUsageCount\" : \"0\",\n    \"translationId\" : \"2000000352003\",\n    \"latestVersion\" : \"1.0\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/api/v1/agents/2000000000521/photo?orgId=24594186\",\n      \"name\" : \"bhuvan vignesh\",\n      \"id\" : \"2000000000521\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"24588564\"\n    },\n    \"isTemplate\" : false,\n    \"webUrl\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/support/bhuvanmac1/ShowHomePage.do#Solutions/dv/2000000352001/en\",\n    \"portalUrl\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/portal/bhuvanmac1/en/kb/articles/dev-search-nineth-article\",\n    \"feedbackCount\" : \"0\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"attachmentCount\" : \"0\",\n    \"position\" : \"53\",\n    \"permalink\" : \"dev-search-nineth-article\",\n    \"category\" : {\n      \"name\" : \"first cat sub sub section 1\",\n      \"id\" : \"2000000353190\",\n      \"locale\" : \"en\"\n    },\n    \"categoryId\" : \"2000000353190\",\n    \"latestVersionModifiedBy\" : {\n      \"photoURL\" : \"https://bhuvan-20295.tsi.zohocorpin.com:8888/api/v1/agents/2000000000521/photo?orgId=24594186\",\n      \"name\" : \"bhuvan vignesh\",\n      \"id\" : \"2000000000521\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"24588564\"\n    },\n    \"status\" : \"Published\"\n  } ]\n}"
  },
  {
    "Api name": "Search translations",
    "Api URL": "/api/v1/articleTranslations/search",
    "Api Method": "GET",
    "Desc": "This API searches for the provided string from within the translation of articles.",
    "OAuth Scope": "Desk.search.READ, Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleTranslations/search?orgId=2389290&authorId=1000000015894&searchString=tom&include=countInfo&limit=1&permission=ALL&status=Draft&isTrashed=FALSE,TRUE&locale=ja-jp&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&isTemplate=false\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "searchString",
        "data_type": "String required",
        "description": "The text that needs to be searched."
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number starting from which the articles containing the search string must be fetched."
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-50",
        "description": "The end limit to which the articles containing search string must be fetched."
      },
      {
        "name": "categoryId",
        "data_type": "Long optional",
        "description": "The articles to be searched based on the category ID"
      },
      {
        "name": "authorId",
        "data_type": "Long optional",
        "description": "The articles to be searched based on the ID of the article owner"
      },
      {
        "name": "permission",
        "data_type": "String optional",
        "description": "The articles of the users to be searched based on the provided permissions. For example: If the value is REGISTEREDUSERS, the search will only include articles created by registered users. The allowed values are ALL , REGISTEREDUSERS , AGENTS"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "The articles that need to be searched based on the status. The allowed values are Draft , Review , Expired , Published , Unpublished"
      },
      {
        "name": "isTrashed",
        "data_type": "String required, default : FALSE",
        "description": "The articles that are even in the recycle bin should be searched. The allowed values are TRUE , FALSE Note: To search in both locations, you can provide both values as comma-separated."
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "The articles to be searched based on the language."
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "The search of the article includes countInfo or availableLocaleTranslations.  The allowed values are countInfo or availableLocaleTranslations . Note : countInfo - Search the most popular. articlesavailableLocaleTranslations - search from the provided language."
      },
      {
        "name": "tag",
        "data_type": "string optional, max chars : 255",
        "description": "The articles to be searched based on the tags."
      },
      {
        "name": "duration",
        "data_type": "String optional",
        "description": "The articles to be searched based on the time since the article is created. The allowed values are yesterday , last_30_days , last_7_days , this_week , this_month , today"
      }
    ],
    "Response Example": "{\n  \"countInfo\" : {\n    \"duration\" : [ {\n      \"name\" : \"yesterday\",\n      \"count\" : \"0\"\n    }, {\n      \"name\" : \"last_30_days\",\n      \"count\" : \"4\"\n    }, {\n      \"name\" : \"last_7_days\",\n      \"count\" : \"4\"\n    }, {\n      \"name\" : \"this_month\",\n      \"count\" : \"4\"\n    }, {\n      \"name\" : \"this_week\",\n      \"count\" : \"0\"\n    }, {\n      \"name\" : \"today\",\n      \"count\" : \"0\"\n    } ],\n    \"tag\" : [ {\n      \"name\" : \"helpcenter\",\n      \"count\" : \"4\"\n    } ],\n    \"category\" : [ {\n      \"count\" : \"2\",\n      \"id\" : \"1232000000192482\"\n    }, {\n      \"count\" : \"2\",\n      \"id\" : \"1232000000149536\"\n    } ],\n    \"rootCategory\" : [ {\n      \"count\" : \"2\",\n      \"id\" : \"141551000000292220\"\n    } ],\n    \"totalCount\" : \"1\"\n  },\n  \"data\" : [ {\n    \"modifiedTime\" : \"2019-12-31T09:45:52.000Z\",\n    \"departmentId\" : \"1000000012710\",\n    \"modifierId\" : \"1000000020518\",\n    \"creatorId\" : \"1000000020518\",\n    \"dislikeCount\" : \"10\",\n    \"likeCount\" : \"120\",\n    \"templateLastUpdatedTime\" : \"2018-05-21T05:55:00.000Z\",\n    \"latestVersionModifierId\" : \"4000000000060\",\n    \"title\" : \"Tom and jerry\",\n    \"ownerId\" : \"1000000015894\",\n    \"locale\" : \"ja-JP\",\n    \"translationState\" : \"UP-TO-DATE\",\n    \"isTrashed\" : false,\n    \"isLocked\" : \"true\",\n    \"createdTime\" : \"2019-12-31T09:45:52.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000020518/photo?orgId=292828\",\n      \"name\" : \"Tara\",\n      \"id\" : \"1000000020518\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"1000000286001\",\n    \"viewCount\" : \"0\",\n    \"translationSource\" : {\n      \"locale\" : \"fr\",\n      \"version\" : \"2.0\"\n    },\n    \"templateUsedUsersCount\" : \"2\",\n    \"summary\" : \"The entertainment king\",\n    \"owner\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Anamika\",\n      \"id\" : \"1000000015894\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"latestVersionStatus\" : \"Draft\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000015894/photo?orgId=292828\",\n      \"name\" : \"Anamika\",\n      \"id\" : \"1000000015894\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"permission\" : \"ALL\",\n    \"authorId\" : \"1000000015894\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"1000000251006\",\n    \"sourceLocale\" : \"ja-JP\",\n    \"templateUsageCount\" : \"0\",\n    \"translationId\" : \"1000000286003\",\n    \"latestVersion\" : \"0.1\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000020518/photo?orgId=292828\",\n      \"name\" : \"Tara\",\n      \"id\" : \"1000000020518\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"isTemplate\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/magicmouse/ShowHomePage.do#Solutions/dv/1000000286001/locale/ja-JP\",\n    \"feedbackCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/magicmouse/ja-JP/kb/articles/tom-jerry\",\n    \"attachmentCount\" : \"0\",\n    \"latestPublishedVersion\" : null,\n    \"category\" : {\n      \"name\" : \"Cartoon\",\n      \"id\" : \"1000000251006\"\n    },\n    \"permalink\" : \"tom-jerry\",\n    \"latestVersionModifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"will smith\",\n      \"id\" : \"4000000000060\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234544\"\n    },\n    \"categoryId\" : \"1000000251006\",\n    \"status\" : \"Draft\"\n  } ]\n}"
  },
  {
    "Api name": "Get attachments",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/attachments",
    "Api Method": "GET",
    "Desc": "This API fetches the files attached to an article translation.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/9000067589998/translations/en-us/attachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer optional, range : >0",
        "description": "Index number starting from which the article attachments must be fetched."
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-30",
        "description": "Number of attachments to fetch"
      }
    ],
    "Response Example": "{\n  \"resourceId\" : \"dkx4q10b53a2b6e844addaec2723cd4b07092\",\n  \"extension\" : \"txt\",\n  \"name\" : \"aadas1_2_3_5_54_.txt\",\n  \"viewUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=view&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"downloadUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=download&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"createdTime\" : \"2018-07-10T22:45:05.865Z\",\n  \"filesize\" : \"62\"\n}"
  },
  {
    "Api name": "Attach files to translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/associateAttachments",
    "Api Method": "POST",
    "Desc": "This API attaches the files selected from the gallery to an article translation.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/9876543456789/translations/en-us/associateAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "attachmentIds",
        "data_type": "String Array required",
        "description": "IDs of the attachments associated with the article"
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}'"
  },
  {
    "Api name": "Upload and associate attachments",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/attachments",
    "Api Method": "POST",
    "Desc": "This API uploads the files to the gallery section and attaches them to an article translation",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/9000067589998/translations/en-us/attachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&attachmentType=file\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "attachmentType",
        "data_type": "String required",
        "description": "Attachment type. Allowed values file , blob"
      },
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "attachment files for articles"
      }
    ],
    "Response Example": "{\n  \"resourceId\" : \"dkx4q10b53a2b6e844addaec2723cd4b07092\",\n  \"extension\" : \"txt\",\n  \"name\" : \"aadas1_2_3_5_54_.txt\",\n  \"viewUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=view&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"downloadUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=download&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"createdTime\" : \"2018-07-10T22:45:05.865Z\",\n  \"filesize\" : \"62\"\n}"
  },
  {
    "Api name": "Dissociate attachments from translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/dissociateAttachments",
    "Api Method": "POST",
    "Desc": "This API removes the file attachments from a translation.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/876546789087/translations/en-us/dissociateAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "attachmentIds",
        "data_type": "String Array required",
        "description": "IDs of the attachments associated with the article"
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}'"
  },
  {
    "Api name": "Like translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/like",
    "Api Method": "POST",
    "Desc": "This API adds a like (a positive reaction) to a translation",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/876546789087/translations/en-us/like?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Dislike translation",
    "Api URL": "/api/v1/articles/([0-9]+)/translations/{locale}/dislike",
    "Api Method": "POST",
    "Desc": "This API adds a dislike (a negative reaction) to a translation.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/876546789087/translations/en-us/dislike?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get article statistics",
    "Api URL": "/api/v1/articles/{article_id}/insights",
    "Api Method": "GET",
    "Desc": "This API fetches the basic insights related to an article",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/876546789087/insights?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"feedbackCount\" : 0,\n  \"lastLikedTime\" : \"2018-11-20T14:03:07.000Z\",\n  \"dislikeCount\" : \"0\",\n  \"lastUsageTime\" : null,\n  \"likeCount\" : \"1\",\n  \"attachmentCount\" : 0,\n  \"viewCount\" : \"0\",\n  \"lastActivityTime\" : \"2018-11-20T14:03:07.000Z\",\n  \"lastDislikedTime\" : null,\n  \"usageCount\" : \"0\",\n  \"commentCount\" : 0\n}"
  },
  {
    "Api name": "Get permalinks of translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/permalinks",
    "Api Method": "GET",
    "Desc": "This API fetches the primary and secondary permalinks of a translation",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"primaryPermalink\" : \"how-to-open-account\",\n  \"secondaryPermalinks\" : [ \"how-to-open-account-1\", \"how-to-open-account-3\" ]\n}"
  },
  {
    "Api name": "Update permalink of translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/permalinks/add",
    "Api Method": "POST",
    "Desc": "This API updates the permalink of a translation and adds the old permalink to the redirection list",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"how-to-open-account\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "The permalink of Solution"
      },
      {
        "name": "isOldPermalinkNeeded",
        "data_type": "Boolean optional",
        "description": "The variable that defines if permalink needs to be added to redirect list. By default, it is true"
      }
    ],
    "Response Example": "-d'{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"how-to-open-account\"\n}'"
  },
  {
    "Api name": "Remove redirection permalink from translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/permalinks/removeSecondaryPermalink",
    "Api Method": "POST",
    "Desc": "This API removes the redirection permalink from the redirection list of a translation",
    "OAuth Scope": "Desk.articles.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks/removeSecondaryPermalink?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"permalink\" : \"how-to-open-account-2\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "The permalink of Solution"
      }
    ],
    "Response Example": "-d'{\n  \"permalink\" : \"how-to-open-account-2\"\n}'"
  },
  {
    "Api name": "Trash an article translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves an article translation to trash.",
    "OAuth Scope": "Desk.articles.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/moveToTrash?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Download article translation attachment",
    "Api URL": "/api/v1/articles/{articleId}/translations/{locale}/attachments/{attachmentId}/content",
    "Api Method": "GET",
    "Desc": "This API downloads the attachment associated with article translation.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/6000000072015/translations/ja-jp/attachments/b96b17694d63cd0f03eadbe4/content?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "inline",
        "data_type": "boolean optional",
        "description": "Display content inline"
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Article Feedback",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Article feedback refers to the text comments posted by users if they did not find a help article useful. This feedback can be used to improve the help article(s).",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List feedback comments on article translation",
    "Api URL": "/api/v1/articles/{article_id}/translations/{locale}/feedbacks",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments received on a translation of an article, based on the limit defined.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/22372000001370011/translations/en-us/feedbacks?from=1&limit=10&sortBy=-createdTime&include=ticket,contact,resolution\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Int optional, range : >0",
        "description": "Index number, starting from which the comments must be fetched. Default value is 1."
      },
      {
        "name": "limit",
        "data_type": "Int optional, range : 1-50",
        "description": "Number of comments to list. Default value is 10."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the comments based on a specific attribute: createdTime. To sort the comments in descending order, append a '-' before the value"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters comments created within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the comments. Values allowed are: ticket, contact and resolution."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"163\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n      \"id\" : \"22372000001389007\",\n      \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n      \"deletedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n        \"name\" : \"Zylker\",\n        \"id\" : \"22372000000761001\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15223452\"\n      }\n    },\n    \"contactId\" : \"22372000001386025\",\n    \"contact\" : {\n      \"photoURL\" : null,\n      \"name\" : \"John\",\n      \"id\" : \"22372000001386025\"\n    },\n    \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n    \"id\" : \"22372000001386045\",\n    \"resolution\" : {\n      \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"feedbackId\" : \"227800000075038\",\n      \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"id\" : \"22372340000106009\",\n      \"resolution\" : \"Content has been modified in user basis\",\n      \"contentType\" : \"PLAIN_TEXT\"\n    },\n    \"ticketId\" : \"22372000001389007\",\n    \"content\" : \"Please add pricing details in tabular columns\",\n    \"article\" : {\n      \"author\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n      \"id\" : \"22372000001370011\",\n      \"locale\" : \"en\",\n      \"title\" : \"Pricing details\"\n    },\n    \"status\" : \"RESOLVED\"\n  } ]\n}"
  },
  {
    "Api name": "Get details of feedback comment",
    "Api URL": "/api/v1/articleFeedbacks/{feedback_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular feedback comment.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleFeedbacks/22372000001386045?&include=ticket,contact,resolution\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the comment. Values allowed are: ticket, contact and resolution."
      }
    ],
    "Response Example": "{\n  \"ticket\" : {\n    \"ticketNumber\" : \"163\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n    \"id\" : \"22372000001389007\",\n    \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n    \"deletedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000761001\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15223452\"\n    }\n  },\n  \"contactId\" : \"22372000001386025\",\n  \"contact\" : {\n    \"photoURL\" : null,\n    \"name\" : \"John\",\n    \"id\" : \"22372000001386025\"\n  },\n  \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n  \"id\" : \"22372000001386045\",\n  \"resolution\" : {\n    \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"feedbackId\" : \"227800000075038\",\n    \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"id\" : \"22372340000106009\",\n    \"resolution\" : \"Content has been modified in user basis\",\n    \"contentType\" : \"PLAIN_TEXT\"\n  },\n  \"ticketId\" : \"22372000001389007\",\n  \"content\" : \"Please add pricing details in tabular columns\",\n  \"article\" : {\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n    \"id\" : \"22372000001370011\",\n    \"locale\" : \"en\",\n    \"title\" : \"Pricing details\"\n  },\n  \"status\" : \"RESOLVED\"\n}"
  },
  {
    "Api name": "List feedback comments",
    "Api URL": "/api/v1/articleFeedbacks",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments received on an article, based on the limit defined.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleFeedbacks?from=1&limit=10&sortBy=-createdTime&rootCategoryIds=2237200000137333&include=ticket,contact,resolution&timeRange=LAST_365_DAYS&locale=en\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Int optional, range : >0",
        "description": "Index number, starting from which the comments must be fetched. Default value is 1."
      },
      {
        "name": "limit",
        "data_type": "Int optional, range : 1-50",
        "description": "Number of comments to list. Default value is 10."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the comments based on a specific attribute: createdTime. To sort the comments in descending order, append a '-' before the value."
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the comments. Values allowed are: ticket, contact and resolution."
      },
      {
        "name": "departmentIds",
        "data_type": "String optional",
        "description": "Filter article feedback comments based on department ids"
      },
      {
        "name": "rootCategoryIds",
        "data_type": "String optional",
        "description": "Filter article feedback comments based on rootCategoryIds"
      },
      {
        "name": "timeRange",
        "data_type": "String optional",
        "description": "Key that filters comments created within a specific date and time range. Enter the time limit in the formats of LAST_24_HRS, LAST_7_DAYS, LAST_30_DAYS, LAST_365_DAYS and yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ . Default value : LAST_7_DAYS."
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "Locale of an article translation in which feedback comments to be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"163\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n      \"id\" : \"22372000001389007\",\n      \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n      \"deletedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n        \"name\" : \"Zylker\",\n        \"id\" : \"22372000000761001\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15223452\"\n      }\n    },\n    \"contactId\" : \"22372000001386025\",\n    \"contact\" : {\n      \"photoURL\" : null,\n      \"name\" : \"John\",\n      \"id\" : \"22372000001386025\"\n    },\n    \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n    \"id\" : \"22372000001386045\",\n    \"resolution\" : {\n      \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"feedbackId\" : \"227800000075038\",\n      \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"id\" : \"22372340000106009\",\n      \"resolution\" : \"Content has been modified in user basis\",\n      \"contentType\" : \"PLAIN_TEXT\"\n    },\n    \"ticketId\" : \"22372000001389007\",\n    \"content\" : \"Please add pricing details in tabular columns\",\n    \"article\" : {\n      \"author\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n      \"id\" : \"22372000001370011\",\n      \"locale\" : \"en\",\n      \"title\" : \"Pricing details\"\n    },\n    \"status\" : \"RESOLVED\"\n  } ]\n}"
  },
  {
    "Api name": "Delete feedback comment",
    "Api URL": "/api/v1/articleFeedbacks/{feedback_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a particular feedback comment from an article.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/articleFeedbacks/22372000001386045\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Convert feedback comment into ticket",
    "Api URL": "/api/v1/articleFeedbacks/{feedback_id}/addAsTicket",
    "Api Method": "POST",
    "Desc": "This API adds a feedback comment as a ticket in your help desk portal and assigns it to the author of the article.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articleFeedbacks/22372000001386045/addAsTicket\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      }
    ],
    "Response Example": "{\n  \"ticket\" : {\n    \"ticketNumber\" : \"163\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n    \"id\" : \"22372000001389007\",\n    \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n    \"deletedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000761001\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15223452\"\n    }\n  },\n  \"contactId\" : \"22372000001386025\",\n  \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n  \"id\" : \"22372000001386045\",\n  \"ticketId\" : \"22372000001389007\",\n  \"content\" : \"Please add pricing details in tabular columns\",\n  \"article\" : {\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n    \"id\" : \"22372000001370011\",\n    \"locale\" : \"en\",\n    \"title\" : \"Pricing details\"\n  },\n  \"status\" : \"RESOLVED\"\n}"
  },
  {
    "Api name": "KBCategory",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Categories are the top-level folders in the knowledge base, linked to a department. Using categories, you can organize help articles in your knowledge base. You can create categories, based on the products/services you offer or the nature of the issues your customers report.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the category"
      },
      {
        "name": "parentCategoryId",
        "data_type": "long",
        "description": "ID of the parent category"
      },
      {
        "name": "helpcenterId",
        "data_type": "long",
        "description": "ID of the help center to which the knowledge base belongs"
      },
      {
        "name": "articleViewType",
        "data_type": "String",
        "description": "View to apply while listing help articles. Values allowed are: LISTVIEW and OVERVIEW."
      },
      {
        "name": "isVisibleInHC",
        "data_type": "boolean",
        "description": "Key that specifies whether the category must be visible in the help center or not"
      },
      {
        "name": "isReview",
        "data_type": "boolean",
        "description": "Key that specifies whether review must be enabled for the category or not"
      },
      {
        "name": "reviewOwners show Attributes",
        "data_type": "list",
        "description": "IDs of users who must review the category"
      },
      {
        "name": "associatedDepartments show Attributes",
        "data_type": "list",
        "description": "List of departments to associate with the category"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "A brief description of the category"
      },
      {
        "name": "logo",
        "data_type": "long",
        "description": "Logo for the category"
      },
      {
        "name": "featuredCategory",
        "data_type": "boolean",
        "description": "Key that specifies whether the category must be featured in the help center or not"
      },
      {
        "name": "visibility",
        "data_type": "String",
        "description": "Visibility setting of the category. Values allowed are: AGENTS, GROUP_USERS, ALL_USERS, and NONE."
      },
      {
        "name": "level",
        "data_type": "int",
        "description": "Navigation depth of the category"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create root category",
    "Api URL": "/api/v1/kbRootCategories",
    "Api Method": "POST",
    "Desc": "This API creates a root category (i.e., parent category) in your knowledge base.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories?include=publishedArticleCount\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isReviewEnabled\" : false,\n  \"articleViewType\" : \"LISTVIEW\",\n  \"visibility\" : \"ALL_USERS\",\n  \"moderationType\" : \"ALL_ACTION\",\n  \"translations\" : [ {\n    \"name\" : \"Zoho Desk\",\n    \"description\" : \"A helpdesk software\",\n    \"permalink\" : \"zoho-desk\",\n    \"locale\" : \"en\"\n  } ],\n  \"name\" : \"Zoho Desk\",\n  \"primaryDepartmentId\" : \"5000000063894\",\n  \"logoId\" : \"25\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assigneeId\" : \"5000000000059\",\n    \"status\" : \"ENABLED\"\n  },\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the category"
      },
      {
        "name": "description",
        "data_type": "String required",
        "description": "A brief description of the category"
      },
      {
        "name": "status",
        "data_type": "String required, default : HIDE_IN_HELPCENTER",
        "description": "Activation status of the category"
      },
      {
        "name": "visibility",
        "data_type": "String required, default : NONE",
        "description": "Visibility setting of the category. Values allowed are: AGENTS, GROUP_USERS, ALL_USERS, NONE, and PRIVATE_IP."
      },
      {
        "name": "groupIds",
        "data_type": "list optional",
        "description": "List of group IDs"
      },
      {
        "name": "articleViewType",
        "data_type": "String required",
        "description": "View to apply while listing help articles. Values allowed are: LISTVIEW and OVERVIEW."
      },
      {
        "name": "isReviewEnabled",
        "data_type": "boolean required",
        "description": "Key that specifies whether the category must be reviewed or not"
      },
      {
        "name": "logoId",
        "data_type": "long required",
        "description": "ID of the logo to set for the category"
      },
      {
        "name": "associatedDepartmentIds",
        "data_type": "list optional",
        "description": "IDs of the departments associated with the category"
      },
      {
        "name": "primaryDepartmentId",
        "data_type": "long optional",
        "description": "ID of the department to which the category belongs"
      },
      {
        "name": "helpcenterId",
        "data_type": "long optional",
        "description": "ID of the help center to which the category belongs"
      },
      {
        "name": "moderationType",
        "data_type": "String optional",
        "description": "Type of moderation applied to the category. Values allowed are: NONE , ALL_ACTION , FIRST_ACTION"
      }
    ],
    "Response Example": "-d'{\n  \"isReviewEnabled\" : false,\n  \"articleViewType\" : \"LISTVIEW\",\n  \"visibility\" : \"ALL_USERS\",\n  \"moderationType\" : \"ALL_ACTION\",\n  \"translations\" : [ {\n    \"name\" : \"Zoho Desk\",\n    \"description\" : \"A helpdesk software\",\n    \"permalink\" : \"zoho-desk\",\n    \"locale\" : \"en\"\n  } ],\n  \"name\" : \"Zoho Desk\",\n  \"primaryDepartmentId\" : \"5000000063894\",\n  \"logoId\" : \"25\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assigneeId\" : \"5000000000059\",\n    \"status\" : \"ENABLED\"\n  },\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ]\n}'"
  },
  {
    "Api name": "Upload logo image",
    "Api URL": "/api/v1/kbCategoryLogo",
    "Api Method": "POST",
    "Desc": "This API is used to upload an image to be used as logo",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbCategoryLogo\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": ""
      }
    ],
    "Response Example": "{\n  \"id\" : \"2029254000000178001\"\n}"
  },
  {
    "Api name": "Create a section",
    "Api URL": "/api/v1/kbSections",
    "Api Method": "POST",
    "Desc": "This API creates a section in your helpdesk",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbSections\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"articlePermission\" : \"ALL\",\n  \"translations\" : [ {\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"locale\" : \"en-us\",\n    \"permalink\" : \"for-agents\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"description\" : \"Section 1 description\",\n  \"parentCategoryId\" : 5000000340014,\n  \"logoId\" : \"10\",\n  \"status\" : \"SHOW_IN_HELPCENTER\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Section Name"
      },
      {
        "name": "parentCategoryId",
        "data_type": "Long required",
        "description": "Parent id (either section or rootCategoryId) below which we need to create a section"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A short description of the section"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "Logo for each category"
      },
      {
        "name": "status",
        "data_type": "String optional, default : HIDE_IN_HELPCENTER",
        "description": "Status of the section"
      },
      {
        "name": "visibility",
        "data_type": "String optional, default : NONE",
        "description": "Visibility of the section. Values allowed are AGENTS , GROUP_USERS , ALL_USERS , NONE , PRIVATE_IP"
      },
      {
        "name": "groupIds",
        "data_type": "list optional",
        "description": "group ids list"
      },
      {
        "name": "articlePermission",
        "data_type": "String optional",
        "description": "To update the article permission based on category visibility"
      }
    ],
    "Response Example": "-d'{\n  \"articlePermission\" : \"ALL\",\n  \"translations\" : [ {\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"locale\" : \"en-us\",\n    \"permalink\" : \"for-agents\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"description\" : \"Section 1 description\",\n  \"parentCategoryId\" : 5000000340014,\n  \"logoId\" : \"10\",\n  \"status\" : \"SHOW_IN_HELPCENTER\"\n}'"
  },
  {
    "Api name": "Update a section",
    "Api URL": "/api/v1/kbSections/{sectionId}",
    "Api Method": "PATCH",
    "Desc": "This API updates a section in your helpdesk",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/kbSections/5000000340014\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"articlePermission\" : \"REGISTEREDUSERS\",\n  \"translations\" : [ {\n    \"name\" : \"section name updated\",\n    \"locale\" : \"pl-pl\"\n  } ],\n  \"status\" : \"HIDE_IN_HELPCENTER\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Section Name"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A short description of the section"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "Logo for each category"
      },
      {
        "name": "status",
        "data_type": "String optional, default : HIDE_IN_HELPCENTER",
        "description": "Status of the section"
      },
      {
        "name": "visibility",
        "data_type": "String optional, default : NONE",
        "description": "Visibility of the section. Values allowed are AGENTS , GROUP_USERS , ALL_USERS , PRIVATE_IP , NONE"
      },
      {
        "name": "groupIds",
        "data_type": "list optional",
        "description": "group ids list"
      },
      {
        "name": "articlePermission",
        "data_type": "String optional",
        "description": "To update the article permission based on category visibility"
      }
    ],
    "Response Example": "-d'{\n  \"articlePermission\" : \"REGISTEREDUSERS\",\n  \"translations\" : [ {\n    \"name\" : \"section name updated\",\n    \"locale\" : \"pl-pl\"\n  } ],\n  \"status\" : \"HIDE_IN_HELPCENTER\"\n}'"
  },
  {
    "Api name": "Get a section",
    "Api URL": "/api/v1/kbSections/{sectionId}",
    "Api Method": "GET",
    "Desc": "This API fetches a section in your helpdesk",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbSections/5000000340014\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Include params are publicArticlesCount, allArticlesCount"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"isFollowing\" : true,\n  \"visibility\" : \"ALL_USERS\",\n  \"description\" : \"Section 1 description\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"rootCategoryId\" : \"5000000066427\",\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000341019\",\n    \"permalink\" : \"for-agents\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000341017\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"parentCategoryId\" : \"5000000340014\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000341017\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"2\"\n}"
  },
  {
    "Api name": "Get root category",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a root category.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000340014\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Additional information related to the category. Values allowed are: publicArticlesCount and allArticlesCount."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-01-02T15:26:51.000Z\",\n  \"isFollowing\" : true,\n  \"visibility\" : \"ALL_USERS\",\n  \"articleViewType\" : \"LISTVIEW\",\n  \"canCurrentUserModerate\" : true,\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/5000000000059/photo?orgId=15114553\",\n      \"name\" : \"Charlie Marlie\",\n      \"id\" : \"5000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224545\"\n    },\n    \"status\" : \"ENABLED\"\n  },\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ],\n  \"encryptedWorkspaceId\" : \"uhahsdhada\",\n  \"helpcenterId\" : \"5000000015871\",\n  \"isReviewEnabled\" : true,\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"Root category name\",\n    \"description\" : \"description of root\",\n    \"createdTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000336004\",\n    \"permalink\" : \"root-category-name\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000319037\"\n  } ],\n  \"moderationType\" : \"ALL_ACTION\",\n  \"name\" : \"Root category name\",\n  \"createdTime\" : \"2019-12-30T12:10:30.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"primaryDepartmentId\" : \"5000000063894\",\n  \"id\" : \"5000000319037\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"3\",\n  \"workspaceId\" : \"asadasda\"\n}"
  },
  {
    "Api name": "Get a category tree",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/categoryTree",
    "Api Method": "GET",
    "Desc": "This API fetches the full tree of a root category in your helpdesk",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000340014/categoryTree&sortBy=order&includeTrash=true&locale=en&include=publicArticlesCount,allArticlesCount,publishedArticleCount,publishedArticleTemplateCount\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "Locale of the translated name"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Sort order of the categories. Allowed values : name, order"
      },
      {
        "name": "includeTrash",
        "data_type": "Boolean optional",
        "description": "Presence flag of the category"
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Include params are publicArticlesCount, allArticlesCount, publishedArticleCount, publishedArticleTemplateCount and portalUrl"
      }
    ],
    "Response Example": "{\n  \"publishedArticleTemplateCount\" : \"4\",\n  \"isFollowing\" : true,\n  \"canCurrentUserModerate\" : true,\n  \"visibility\" : \"ALL_USERS\",\n  \"allArticlesCount\" : \"0\",\n  \"description\" : \"test\",\n  \"locale\" : \"en\",\n  \"publishedArticleCount\" : \"23\",\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"publicArticlesCount\" : \"0\",\n  \"isTrashed\" : false,\n  \"children\" : [ {\n    \"publishedArticleTemplateCount\" : \"4\",\n    \"isFollowing\" : true,\n    \"visibility\" : \"ALL_USERS\",\n    \"allArticlesCount\" : \"0\",\n    \"description\" : \"Desk\",\n    \"locale\" : \"en\",\n    \"publishedArticleCount\" : \"23\",\n    \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n    \"rootCategoryId\" : \"5000000066427\",\n    \"publicArticlesCount\" : \"0\",\n    \"isTrashed\" : false,\n    \"children\" : [ {\n      \"publishedArticleTemplateCount\" : \"4\",\n      \"isFollowing\" : true,\n      \"visibility\" : \"ALL_USERS\",\n      \"allArticlesCount\" : \"0\",\n      \"description\" : \"Section 2\",\n      \"locale\" : \"en\",\n      \"publishedArticleCount\" : \"23\",\n      \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n      \"rootCategoryId\" : \"5000000066427\",\n      \"publicArticlesCount\" : \"0\",\n      \"isTrashed\" : false,\n      \"children\" : [ ],\n      \"translations\" : [ {\n        \"name\" : \"section 2 en\",\n        \"description\" : null,\n        \"id\" : \"5000000341003\",\n        \"permalink\" : \"section-2-en\",\n        \"locale\" : \"en\"\n      } ],\n      \"name\" : \"Section 2\",\n      \"parentCategoryId\" : \"5000000340014\",\n      \"id\" : \"5000000341001\",\n      \"status\" : \"SHOW_IN_HELPCENTER\",\n      \"order\" : \"1\"\n    } ],\n    \"translations\" : [ {\n      \"name\" : \"For Agents\",\n      \"description\" : null,\n      \"id\" : \"5000000340016\",\n      \"permalink\" : \"for-agents\",\n      \"locale\" : \"en\"\n    } ],\n    \"name\" : \"Desk\",\n    \"parentCategoryId\" : \"5000000066427\",\n    \"id\" : \"5000000340014\",\n    \"status\" : \"SHOW_IN_HELPCENTER\",\n    \"order\" : \"5\"\n  } ],\n  \"moderationType\" : \"ALL_ACTION\",\n  \"translations\" : [ {\n    \"name\" : \"Desk\",\n    \"description\" : \"Helpdesk-software\",\n    \"id\" : \"5000000265103\",\n    \"permalink\" : \"desk\",\n    \"locale\" : \"en\"\n  } ],\n  \"name\" : \"test\",\n  \"id\" : \"5000000066427\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"1\"\n}"
  },
  {
    "Api name": "List root categories",
    "Api URL": "/api/v1/kbRootCategories",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of root categories, based on the limit defined.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbRootCategories&include=publicArticlesCount,allArticlesCount,sectionsCount,allArticleTemplateCount,\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "locale",
        "data_type": "String optional",
        "description": "Language of the category"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Key that sorts the categories, based on a specific attribute: name or order"
      },
      {
        "name": "from",
        "data_type": "Int required, default : 1, range : >0",
        "description": "Index number, starting from which the categories must be fetched"
      },
      {
        "name": "limit",
        "data_type": "Int required, default : 50, range : 1-700",
        "description": "Number of categories to list"
      },
      {
        "name": "searchValue",
        "data_type": "String optional",
        "description": "Keyword for searching for a particular category"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the category. Values allowed are: SHOW_IN_HELPCENTER, HIDE_IN_HELPCENTER, and DISABLED."
      },
      {
        "name": "isTrashed",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the category is deleted or not"
      },
      {
        "name": "isReviewEnabled",
        "data_type": "boolean optional",
        "description": "Key that specifies whether the category must be reviewed or not"
      },
      {
        "name": "visibility",
        "data_type": "String optional",
        "description": "Visibility setting of the category. Values allowed are: AGENTS, GROUP_USERS, ALL_USERS, and NONE."
      },
      {
        "name": "departmentId",
        "data_type": "String optional",
        "description": "ID of the department associated with the category"
      },
      {
        "name": "helpcenterId",
        "data_type": "String optional",
        "description": "ID of the help center to which the category belongs"
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Additional information related to the category. Values allowed are: publicArticlesCount, allArticlesCount, publishedArticleCount, allArticleTemplateCount and sectionsCount."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-01-05T13:18:07.000Z\",\n    \"allArticlesCount\" : \"11\",\n    \"helpcenterId\" : \"5000000015871\",\n    \"isReviewEnabled\" : false,\n    \"isTrashed\" : false,\n    \"translations\" : [ {\n      \"modifiedTime\" : \"2019-10-10T06:18:39.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : null,\n        \"name\" : \"Zylker\",\n        \"id\" : \"5000000015867\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"343224\"\n      },\n      \"name\" : \"Zoho Desk\",\n      \"description\" : \"A helpdesk software\",\n      \"createdTime\" : \"2019-06-24T07:03:39.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : null,\n        \"name\" : \"Zylker\",\n        \"id\" : \"5000000015867\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"343224\"\n      },\n      \"id\" : \"5000000265103\",\n      \"permalink\" : \"zoho-desk\",\n      \"locale\" : \"en\",\n      \"categoryId\" : \"5000000066427\"\n    } ],\n    \"moderationType\" : \"ALL_ACTION\",\n    \"createdTime\" : \"2019-06-24T07:03:39.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"primaryDepartmentId\" : \"5000000063894\",\n    \"id\" : \"5000000066427\",\n    \"order\" : \"1\",\n    \"workspaceId\" : \"ponaz00368c36c9274809bf96849b392f8d67\",\n    \"visibility\" : \"ALL_USERS\",\n    \"articleViewType\" : \"LISTVIEW\",\n    \"canCurrentUserModerate\" : true,\n    \"groups\" : [ ],\n    \"allArticleTemplateCount\" : \"2\",\n    \"sectionsCount\" : \"7\",\n    \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n    \"feedbackTicketConversionPreference\" : {\n      \"departmentId\" : \"5000000063895\",\n      \"assignee\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/5000000000059/photo?orgId=15114553\",\n        \"name\" : \"Charlie Marlie\",\n        \"id\" : \"5000000000059\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224545\"\n      },\n      \"status\" : \"ENABLED\"\n    },\n    \"associatedDepartmentIds\" : [ \"5000000063895\" ],\n    \"publicArticlesCount\" : \"3\",\n    \"encryptedWorkspaceId\" : \"04bd200bc14c4cac0c0026a0342c1f21263012407fa56109a37788e786a96ec0383c1eeb08849f9be78a6f7b8b8f31033dde60d41ad95443c6570636db1a9b20\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"Zoho Desk\",\n    \"status\" : \"SHOW_IN_HELPCENTER\"\n  } ]\n}"
  },
  {
    "Api name": "Get review owners",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners",
    "Api Method": "GET",
    "Desc": "This API fetches review owners of a root category in your helpdesk",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Sort order of the owners. Allowed values : firstName, lastName"
      },
      {
        "name": "from",
        "data_type": "Int required, default : 1, range : >0",
        "description": "Offset value"
      },
      {
        "name": "limit",
        "data_type": "Int required, default : 50, range : 1-100",
        "description": "Number of objects"
      },
      {
        "name": "searchValue",
        "data_type": "String optional",
        "description": "Search string"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\"\n  } ]\n}"
  },
  {
    "Api name": "Add review owner",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners/add",
    "Api Method": "POST",
    "Desc": "This API adds review owners of a root category in your helpdesk",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners/add\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "reviewOwnerIds",
        "data_type": "list required",
        "description": "review owner ids list"
      }
    ],
    "Response Example": "-d'{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}'"
  },
  {
    "Api name": "Remove review owner",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners/remove",
    "Api Method": "POST",
    "Desc": "This API removes review owners of a root category in your helpdesk",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners/remove\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "reviewOwnerIds",
        "data_type": "list required",
        "description": "review owner ids list"
      }
    ],
    "Response Example": "-d'{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}'"
  },
  {
    "Api name": "Add moderators",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/moderators/add",
    "Api Method": "POST",
    "Desc": "This API adds moderators to a root category in your helpdesk.Note:Moderators act as designated agents within the primary department with access to the Moderation Panel. They are responsible for reviewing and managing comments awaiting approval or flagged as spam.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/moderators/add\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"moderatorIds\" : [ \"5000000015867\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "moderatorIds",
        "data_type": "list required",
        "description": "IDs of the moderators you want to assign to the root category."
      }
    ],
    "Response Example": "-d'{\n  \"moderatorIds\" : [ \"5000000015867\" ]\n}'"
  },
  {
    "Api name": "Remove moderators",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/moderators/remove",
    "Api Method": "POST",
    "Desc": "This API removes moderators from a root category in your helpdesk.Note:Moderators act as designated agents within the primary department with access to the Moderation Panel. They are responsible for reviewing and managing comments awaiting approval or flagged as spam.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/moderators/remove\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"moderatorIds\" : [ \"5000000015867\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "moderatorIds",
        "data_type": "list required",
        "description": "IDs of the moderators you want to remove from the root category."
      }
    ],
    "Response Example": "-d'{\n  \"moderatorIds\" : [ \"5000000015867\" ]\n}'"
  },
  {
    "Api name": "Add a permalink to a root catgeory",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/translations/{locale}/permalinks/add",
    "Api Method": "POST",
    "Desc": "This API adds a permalink to a root category translation",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/translations/en/add\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"new-permalink\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "The permalink of Solution"
      },
      {
        "name": "isOldPermalinkNeeded",
        "data_type": "Boolean optional",
        "description": "The variable that defines if permalink needs to be added to redirect list. By default, it is true"
      }
    ],
    "Response Example": "-d'{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"new-permalink\"\n}'"
  },
  {
    "Api name": "Remove a permalink of a root category",
    "Api URL": "/api/v1/kbRootCategories/{rootCategoryId}/translations/{locale}/permalinks/remove",
    "Api Method": "POST",
    "Desc": "This API removes a permalink of a root category translation",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/kbRootCategories/5000000066427/translations/en/remove\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"permalink\" : \"permalink-2\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "The permalink of Solution"
      }
    ],
    "Response Example": "-d'{\n  \"permalink\" : \"permalink-2\"\n}'"
  },
  {
    "Api name": "Contracts",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contracts help you organize your desk commitments, enabling you to deliver more professional and dedicated customer service. By defining contracts, you can determine the level of service to offer and set the contract period for an account or a product.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the contract"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get a contract",
    "Api URL": "api/v1/contracts/{{contract_id}}",
    "Api Method": "GET",
    "Desc": "This API fetches a single contract from your helpdesk.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contracts/5000000009331\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"associatedSLAId\" : \"10000000062047\",\n  \"modifiedTime\" : \"2018-01-15T11:13:04.000Z\",\n  \"product\" : {\n    \"id\" : \"500000001290\",\n    \"productName\" : \"Desk\"\n  },\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"hello\"\n  },\n  \"contractStatus\" : \"ACTIVE\",\n  \"productId\" : \"5000000009328\",\n  \"endDate\" : \"2019-01-10\",\n  \"departmentId\" : \"5000000007235\",\n  \"notifyBefore\" : \"5\",\n  \"contractNumber\" : \"101\",\n  \"description\" : null,\n  \"sla\" : {\n    \"name\" : \"Gold SLAs\",\n    \"id\" : \"10000000062047\"\n  },\n  \"ownerId\" : \"5000000009148\",\n  \"notificationAgentIds\" : [ \"5000000009148\" ],\n  \"accountId\" : \"5000000009326\",\n  \"createdBy\" : \"5000000009148\",\n  \"notifyOn\" : \"2019-01-05\",\n  \"createdTime\" : \"2018-01-10T11:29:41.000Z\",\n  \"contractName\" : \"Ticket Resolution Contract for 5 Star Crisps\",\n  \"modifiedBy\" : \"5000000009148\",\n  \"id\" : \"5000000009331\",\n  \"supportPlan\" : {\n    \"supportType\" : \"UNLIMITED_SUPPORT\",\n    \"name\" : \"SupportPlan with Gold SLAs\",\n    \"id\" : \"5000000007671\",\n    \"status\" : \"ACTIVE\"\n  },\n  \"startDate\" : \"2018-01-10\",\n  \"account\" : {\n    \"website\" : \"https://www.zoho.com\",\n    \"accountName\" : \"Zoho\",\n    \"id\" : \"500000008909\"\n  }\n}"
  },
  {
    "Api name": "List all contracts",
    "Api URL": "api/v1/contracts",
    "Api Method": "GET",
    "Desc": "To get a list of contracts",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contracts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "The starting index point to fetch the contracts"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "The total number of contracts to be fetched"
      },
      {
        "name": "viewId",
        "data_type": "integer optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "departmentIds",
        "data_type": "long optional",
        "description": "IDs of the departments from which the contract must be fetched. Supports a maximum of 10 department ids, each separated by a comma."
      },
      {
        "name": "accountId see documentation",
        "data_type": "long optional",
        "description": "ID of the account associated with the contract"
      },
      {
        "name": "ownerIds",
        "data_type": "long optional",
        "description": "IDs of the owners from which the contract must be fetched. Supports a maximum of 10 owner IDs, each separated by a comma."
      },
      {
        "name": "contractName",
        "data_type": "string optional, max chars : 80",
        "description": "Fetches the contracts that matches the Starting Name of Contract with provided string"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Parameter that sorts contracts by one of these attributes: accountName , contractName , contractEndDate , contractStartDate , createdTime , or modifiedTime . The default order of sorting is ascending. To sort in descending order, prefix a - with the parameter."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed Value is: accounts"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"FUTURE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-11-10\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"C2\",\n    \"id\" : \"10000000270023\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Gold SLAs\",\n      \"id\" : \"5000000007671\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-10-10\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"EXPIRED\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-10\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"New\",\n    \"id\" : \"10000000270045\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Premium SLAs\",\n      \"id\" : \"5000000007675\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-09-09\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272001\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-12-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"THIRD\",\n    \"id\" : \"10000000272013\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Gold SLAs\",\n      \"id\" : \"5000000007671\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272037\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2019-03-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"Fourth ACC\",\n    \"id\" : \"10000000272049\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Silver SLAs\",\n      \"id\" : \"5000000007673\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272071\",\n    \"contractStatus\" : \"EXPIRED\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-12\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"old\",\n    \"id\" : \"10000000272083\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Gold SLAs\",\n      \"id\" : \"5000000007671\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2017-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-30\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"FUTURE 1\",\n    \"id\" : \"10000000273003\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Silver SLAs\",\n      \"id\" : \"5000000007673\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-09-15\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"FUTURE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-12-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"FUTURE 3\",\n    \"id\" : \"10000000273025\",\n    \"ownerId\" : \"10000000012902\",\n    \"supportPlan\" : {\n      \"supportType\" : \"UNLIMITED_SUPPORT\",\n      \"name\" : \"SupportPlan with Gold SLAs\",\n      \"id\" : \"5000000007671\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"startDate\" : \"2018-11-11\"\n  } ]\n}"
  },
  {
    "Api name": "Create a contract",
    "Api URL": "/api/v1/contracts",
    "Api Method": "POST",
    "Desc": "This API creates a contract in your helpdesk.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contracts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-07-23\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"3\",\n  \"description\" : \"My Description\",\n  \"contractNumber\" : 9495,\n  \"associatedSupportPlanId\" : \"5000000007671\",\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"MyContractName\",\n  \"startDate\" : \"2018-07-23\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "associatedSLAId deprecated",
        "data_type": "long optional",
        "description": "ID of the SLA associated with the contract"
      },
      {
        "name": "associatedSupportPlanId",
        "data_type": "long optional",
        "description": "ID of the Associated Support Plan"
      },
      {
        "name": "accountId deprecated",
        "data_type": "long required",
        "description": "ID of the account associated with the contract"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department to which the contract belongs"
      },
      {
        "name": "productId deprecated",
        "data_type": "long optional",
        "description": "ID of the product associated with the contract"
      },
      {
        "name": "contractNumber",
        "data_type": "string optional, max chars : 50",
        "description": "Serial number of the contract"
      },
      {
        "name": "notificationAgentIds",
        "data_type": "list optional",
        "description": "List of agents to be notified"
      },
      {
        "name": "notifyBefore",
        "data_type": "int optional",
        "description": "Number of days before endDate when notifications about contract expiry must be sent to the agents concerned"
      },
      {
        "name": "startDate",
        "data_type": "date required",
        "description": "Date from which the contract is valid"
      },
      {
        "name": "endDate",
        "data_type": "date optional",
        "description": "Date until which the contract is valid"
      },
      {
        "name": "ownerId",
        "data_type": "long required",
        "description": "ID of the contract owner"
      },
      {
        "name": "contractName",
        "data_type": "string required, max chars : 80",
        "description": "Name of the contract"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "A short description of the contract"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields associated with the contract"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields associated with the contract"
      },
      {
        "name": "sla",
        "data_type": "list optional",
        "description": "SLA fields associated with the contract"
      },
      {
        "name": "account",
        "data_type": "list optional",
        "description": "Account fields associated with the contract"
      },
      {
        "name": "product",
        "data_type": "list optional",
        "description": "Product fields associated with the contract"
      }
    ],
    "Response Example": "-d'{\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-07-23\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"3\",\n  \"description\" : \"My Description\",\n  \"contractNumber\" : 9495,\n  \"associatedSupportPlanId\" : \"5000000007671\",\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"MyContractName\",\n  \"startDate\" : \"2018-07-23\"\n}'"
  },
  {
    "Api name": "Update a contract",
    "Api URL": "/api/v1/contracts/{contract_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing contract.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/contracts/10000000078091\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Update Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-09-15\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"5\",\n  \"description\" : \"My Description Updated\",\n  \"contractNumber\" : 9496,\n  \"associatedSupportPlanId\" : \"5000000007671\",\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"My Updated Contract Name\",\n  \"startDate\" : \"2018-08-14\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "associatedSLAId deprecated",
        "data_type": "long optional",
        "description": "ID of the SLA associated with the contract"
      },
      {
        "name": "associatedSupportPlanId",
        "data_type": "long optional",
        "description": "ID of the Associated Support Plan"
      },
      {
        "name": "accountId deprecated",
        "data_type": "long optional",
        "description": "ID of the account associated with the contract"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department to which the contract belongs"
      },
      {
        "name": "productId deprecated",
        "data_type": "long optional",
        "description": "ID of the product associated with the contract"
      },
      {
        "name": "contractNumber",
        "data_type": "string optional, max chars : 50",
        "description": "Serial number of the contract"
      },
      {
        "name": "notificationAgentIds",
        "data_type": "list optional",
        "description": "List of agents to be notified"
      },
      {
        "name": "notifyBefore",
        "data_type": "int optional",
        "description": "Number of days before endDate when notifications about contract expiry must be sent to the agents concerned"
      },
      {
        "name": "startDate",
        "data_type": "date optional",
        "description": "Date from which the contract is valid"
      },
      {
        "name": "endDate",
        "data_type": "date optional",
        "description": "Date until which the contract is valid"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the contract owner"
      },
      {
        "name": "contractName",
        "data_type": "string optional, max chars : 80",
        "description": "Name of the contract"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "A short description of the contract"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields associated with the contract"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields associated with the contract"
      },
      {
        "name": "sla",
        "data_type": "list optional",
        "description": "SLA fields associated with the contract"
      },
      {
        "name": "account",
        "data_type": "list optional",
        "description": "Account fields associated with the contract"
      },
      {
        "name": "product",
        "data_type": "list optional",
        "description": "Product fields associated with the contract"
      }
    ],
    "Response Example": "-d'{\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Update Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-09-15\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"5\",\n  \"description\" : \"My Description Updated\",\n  \"contractNumber\" : 9496,\n  \"associatedSupportPlanId\" : \"5000000007671\",\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"My Updated Contract Name\",\n  \"startDate\" : \"2018-08-14\"\n}'"
  },
  {
    "Api name": "Delete contracts",
    "Api URL": "api/v1/contracts/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves contracts to the Recycle Bin of your help desk portal",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contracts/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contractIds\" : [ \"10000000014816\", \"1000000001243\", \"10000000018818\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contractIds",
        "data_type": "list required",
        "description": "IDs of the contracts that you want to delete"
      }
    ],
    "Response Example": "-d'{\n  \"contractIds\" : [ \"10000000014816\", \"1000000001243\", \"10000000018818\" ]\n}'"
  },
  {
    "Api name": "Update many contracts",
    "Api URL": "/api/v1/contracts/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple contracts at once.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contracts/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"contractNumber\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"123\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean required",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"contractNumber\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"123\"\n}'"
  },
  {
    "Api name": "Timetracking",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isTimeTracking",
        "data_type": "boolean",
        "description": "Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking."
      },
      {
        "name": "depId",
        "data_type": "long",
        "description": "ID of the department in which time tracking must be enabled or disabled."
      },
      {
        "name": "isBillable",
        "data_type": "boolean",
        "description": "Key that returns if the time tracked is billable or not."
      },
      {
        "name": "billingType",
        "data_type": "String",
        "description": "Type of billing configured. Values supported are FIXED_COST_FOR_TICKETS FIXED_COST_FOR_AGENTS SPECIFIC_COST_PER_AGENT and SPECIFIC_COST_PER_PROFILE"
      },
      {
        "name": "fixedCost",
        "data_type": "Double",
        "description": "Cost fixed for either billing category - by ticket or by agent."
      },
      {
        "name": "agents show Attributes",
        "data_type": "list",
        "description": "List of agents in the department"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the Agent"
      },
      {
        "name": "cost",
        "data_type": "double",
        "description": "Cost entered for the agent"
      },
      {
        "name": "profiles show Attributes",
        "data_type": "list",
        "description": "List of user profiles defined in the department"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the Profile"
      },
      {
        "name": "cost",
        "data_type": "double",
        "description": "Cost entered for the agent"
      },
      {
        "name": "timerAction",
        "data_type": "String",
        "description": "Action that the active timers in the department must perform. Values supported are ADD and DISCARD"
      },
      {
        "name": "activityPreference show Attributes",
        "data_type": "list",
        "description": "Activity preference(s)"
      },
      {
        "name": "trackMode",
        "data_type": "String",
        "description": "Track Mode for activity. Supported values arw CONSECUTIVE CONCURRENT"
      },
      {
        "name": "isTasksEnabled",
        "data_type": "boolean",
        "description": "To enable time tracking for tasks in manual mode"
      },
      {
        "name": "isEventsEnabled",
        "data_type": "boolean",
        "description": "To enable time tracking for events in manual mode"
      },
      {
        "name": "canAutoTrackCalls",
        "data_type": "boolean",
        "description": "To enable time tracking for calls in auto mode"
      },
      {
        "name": "ticketPreference show Attributes",
        "data_type": "list",
        "description": "Ticket preference(s)"
      },
      {
        "name": "isAutoTimer",
        "data_type": "boolean",
        "description": "Type of track preference (either Manual  Automatic)"
      },
      {
        "name": "isAutoPause",
        "data_type": "boolean",
        "description": "Type of track preference (either Manual  Automatic)"
      },
      {
        "name": "isHideTimeTracking",
        "data_type": "boolean",
        "description": "Type of track preference (either Manual  Automatic)"
      },
      {
        "name": "isReviewTime",
        "data_type": "boolean",
        "description": "Type of track preference (either Manual  Automatic)"
      },
      {
        "name": "autoTrackAction show Attributes",
        "data_type": "list",
        "description": "Auto tracking configurations"
      },
      {
        "name": "sendReply",
        "data_type": "boolean",
        "description": "Whether to create timeentry when replying in a ticket in auto track mode"
      },
      {
        "name": "manualDraft",
        "data_type": "boolean",
        "description": "Whether to create timeentry when saving draft manually in a ticket in auto track mode"
      },
      {
        "name": "commentActions",
        "data_type": "boolean",
        "description": "Whether to create timeentry when commenting in a ticket in auto track mode"
      },
      {
        "name": "resolutionActions",
        "data_type": "boolean",
        "description": "Whether to create timeentry when create, edit, delete resolution in a ticket in auto track mode"
      },
      {
        "name": "fieldUpdate",
        "data_type": "boolean",
        "description": "Whether to create timeentry when upaating field in a ticket in auto track mode"
      },
      {
        "name": "onChatComplete",
        "data_type": "boolean",
        "description": "Whether to create timeentry when closing a chat for a ticket in auto track mode"
      },
      {
        "name": "attachmentActions",
        "data_type": "boolean",
        "description": "Whether to create timeentry while create, edit, delete attachments in a ticket in auto track mode"
      },
      {
        "name": "approvalActions",
        "data_type": "boolean",
        "description": "Whether to create timeentry while create, edit, delete approvals in a ticket in auto track mode"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create TimeTrackSettings",
    "Api URL": "/api/v1/timeTrackSettings",
    "Api Method": "POST",
    "Desc": "This API adds a TimeTracking configuration to your helpdesk.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/timeTrackSettings\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isTimeTracking",
        "data_type": "boolean required",
        "description": "Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking."
      },
      {
        "name": "depId",
        "data_type": "long required",
        "description": "ID of the department in which time tracking must be enabled or disabled."
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Key that returns if the time tracked is billable or not."
      },
      {
        "name": "billingType",
        "data_type": "String optional",
        "description": "Type of billing configured. Values supported are FIXED_COST_FOR_TICKETS FIXED_COST_FOR_AGENTS SPECIFIC_COST_PER_AGENT and SPECIFIC_COST_PER_PROFILE"
      },
      {
        "name": "fixedCost",
        "data_type": "Double optional",
        "description": "Cost fixed for either billing category - by ticket or by agent."
      },
      {
        "name": "agents",
        "data_type": "list optional",
        "description": "List of agents in the department"
      },
      {
        "name": "profiles",
        "data_type": "list optional",
        "description": "List of user profiles defined in the department"
      },
      {
        "name": "timerAction",
        "data_type": "String optional",
        "description": "Action that the active timers in the department must perform. Values supported are ADD and DISCARD"
      },
      {
        "name": "activityPreference",
        "data_type": "list optional",
        "description": "Activity preference(s)"
      },
      {
        "name": "ticketPreference",
        "data_type": "list optional",
        "description": "Ticket preference(s)"
      }
    ],
    "Response Example": "-d'{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}'"
  },
  {
    "Api name": "Update TimeTrackSettings",
    "Api URL": "/api/v1/timeTrackSettings",
    "Api Method": "PUT",
    "Desc": "This API updates an existing TimeTracking configuration.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/timeTrackSettings\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"timerAction\" : \"ADD\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isTimeTracking",
        "data_type": "boolean optional",
        "description": "Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking."
      },
      {
        "name": "depId",
        "data_type": "long optional",
        "description": "ID of the department in which time tracking must be enabled or disabled."
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Key that returns if the time tracked is billable or not."
      },
      {
        "name": "billingType",
        "data_type": "String optional",
        "description": "Type of billing configured. Values supported are FIXED_COST_FOR_TICKETS FIXED_COST_FOR_AGENTS SPECIFIC_COST_PER_AGENT and SPECIFIC_COST_PER_PROFILE"
      },
      {
        "name": "fixedCost",
        "data_type": "Double optional",
        "description": "Cost fixed for either billing category - by ticket or by agent."
      },
      {
        "name": "agents",
        "data_type": "list optional",
        "description": "List of agents in the department"
      },
      {
        "name": "profiles",
        "data_type": "list optional",
        "description": "List of user profiles defined in the department"
      },
      {
        "name": "timerAction",
        "data_type": "String optional",
        "description": "Action that the active timers in the department must perform. Values supported are ADD and DISCARD"
      },
      {
        "name": "activityPreference",
        "data_type": "list optional",
        "description": "Activity preference(s)"
      },
      {
        "name": "ticketPreference",
        "data_type": "list optional",
        "description": "Ticket preference(s)"
      }
    ],
    "Response Example": "-d'{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"timerAction\" : \"ADD\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}'"
  },
  {
    "Api name": "Get TimeTrack Settings",
    "Api URL": "/api/v1/timeTrackSettings",
    "Api Method": "GET",
    "Desc": "This API fetches the details of the TimeTrack Settings configured in your helpdesk.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/timeTrackSettings\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "depId",
        "data_type": "long required",
        "description": "ID of the department"
      }
    ],
    "Response Example": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}"
  },
  {
    "Api name": "List history details of billing TimeTrack Settings",
    "Api URL": "/api/v1/timeTrackHistory",
    "Api Method": "GET",
    "Desc": "This API fetches the history of changes made to the billing preferences in time tracking settings. The different events supported areBILLING_PREFERENCE_ENABLED,BILLING_PREFERENCE_DISABLED,BILLING_TYPE_SELECTED,BILLING_TYPE_CHANGED,FIXED_COST_ENTERED,FIXED_COST_EDITED,AGENT_ADDED,AGENT_COST_EDITED,AGENT_DELETED,PROFILE_ADDED,PROFILE_COST_EDITED, andPROFILE_DELETED.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/timeTrackSettings/history?depId=15000000044059&include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "depId",
        "data_type": "long required",
        "description": "ID of the department from which the history must be fetched."
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which the events must be fetched."
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-50",
        "description": "Number of events to be fetched."
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : [ {\n      \"photoURL\" : \"'https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20'\",\n      \"name\" : \"meenakshi\"\n    } ],\n    \"modifiedTime\" : \"2018-02-19T12:53:49.000Z\",\n    \"agentId\" : \"15000000009148\",\n    \"name\" : \"AGENT_DELETED\",\n    \"modifiedBy\" : \"15000000009148\"\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166891&nps=404&exp=600'\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-19T12:53:49.000Z\",\n    \"agentId\" : \"15000000009321\",\n    \"cost\" : \"100\",\n    \"name\" : \"AGENT_ADDED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    }\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-19T12:45:17.000Z\",\n    \"agentId\" : \"15000000009148\",\n    \"cost\" : \"100\",\n    \"name\" : \"AGENT_ADDED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    }\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"SPECIFIC_COST_PER_AGENT\",\n    \"modifiedTime\" : \"2018-02-19T12:45:17.000Z\",\n    \"name\" : \"BILLING_TYPE_CHANGED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-09T09:09:10.000Z\",\n    \"name\" : \"BILLING_PREFERENCE_ENABLED\",\n    \"modifiedBy\" : \"15000000009148\"\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : null,\n    \"modifiedTime\" : \"2018-02-09T09:08:57.000Z\",\n    \"name\" : \"FIXED_COST_ENTERED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedTime\" : \"2018-02-09T09:08:57.000Z\",\n    \"name\" : \"BILLING_TYPE_SELECTED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-09T07:50:01.000Z\",\n    \"name\" : \"BILLING_PREFERENCE_DISABLED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"1300\",\n    \"modifiedTime\" : \"2018-02-09T05:13:00.000Z\",\n    \"name\" : \"FIXED_COST_ENTERED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"FIXED_COST_FOR_AGENTS\",\n    \"modifiedTime\" : \"2018-02-09T05:13:00.000Z\",\n    \"name\" : \"BILLING_TYPE_CHANGED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedAgent\" : null\n  } ]\n}"
  },
  {
    "Api name": "Views",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A view is a customized display of help desk data that helps users organize and prioritize information based on specific criteria, enabling them to interact with data that aligns with their needs.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List Views",
    "Api URL": "/api/v1/views",
    "Api Method": "GET",
    "Desc": "This API lists the different views configured for a specific module or for all modules in your help desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/views?module=tickets&departmentId=981212321312321\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module see documentation",
        "data_type": "string required, max chars : 100",
        "description": "Module Name (for which the view configured and need to be fetched)"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "Allowed values are : Valid Department Id ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"isCustomView\" : false,\n    \"name\" : \"All Tasks\",\n    \"id\" : \"4000000007834\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"My Tasks\",\n    \"id\" : \"4000000007836\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"My Open Tasks\",\n    \"id\" : \"4000000007838\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Completed Tasks\",\n    \"id\" : \"4000000007840\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Open Tasks\",\n    \"id\" : \"4000000007842\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Overdue Tasks\",\n    \"id\" : \"4000000007844\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Todays Tasks\",\n    \"id\" : \"4000000007846\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Tomorrows Tasks\",\n    \"id\" : \"4000000007848\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Today+Overdue Tasks\",\n    \"id\" : \"4000000007850\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Next7days+Overdue Tasks\",\n    \"id\" : \"4000000007852\"\n  } ]\n}"
  },
  {
    "Api name": "Add Star View",
    "Api URL": "/api/v1/views/{view_id}/star",
    "Api Method": "POST",
    "Desc": "This API stars a view, enabling quick access to the view.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/views/4000000007824/star?departmentId=981212321312321\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the view(s) is (are) configured."
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "Remove Star View",
    "Api URL": "/api/v1/starredViews/{view_id}/unstar",
    "Api Method": "POST",
    "Desc": "This API unstars a view, disabling quick access to the view.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/starredViews/4000000007824/unstar?departmentId=981212321312321\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Allowed values are : Valid Department Id ."
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "List Starred Views",
    "Api URL": "/api/v1/starredViews",
    "Api Method": "GET",
    "Desc": "This API lists the starred views in a module. Number of resources in the starred view is displayed only for the Tickets module.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/starredViews?module=tickets&departmentId=4000000007123\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module see documentation",
        "data_type": "string required, max chars : 100",
        "description": "Module associated with the view. Values allowed are: tickets , tasks , contacts , accounts , activities , calls , events or contracts ."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the view(s) is (are) configured."
      }
    ],
    "Response Example": "{\n  \"starredViews\" : [ {\n    \"isCustomView\" : false,\n    \"name\" : \"All Tickets\",\n    \"count\" : \"40\",\n    \"id\" : \"4000000007834\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Open Tickets\",\n    \"count\" : \"22\",\n    \"id\" : \"4000000007844\"\n  } ],\n  \"module\" : \"tickets\"\n}"
  },
  {
    "Api name": "Starred Views Reorder",
    "Api URL": "/api/v1/starredViews/order",
    "Api Method": "PUT",
    "Desc": "This API helps reorder the starred views in a module.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/starredViews/order?departmentId=981212321312321&module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"starredViewIds\" : [ \"4000000007808\", \"4000000007810\", \"4000000007818\", \"4000000007820\", \"4000000007828\", \"4000000007830\", \"4000000007848\", \"4000000007850\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module see documentation",
        "data_type": "string required, max chars : 100",
        "description": "Module associated with the view. Values allowed are: tickets , tasks , contacts , accounts , contracts , activities , calls or events ."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the view(s) is (are) configured."
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "starredViewIds",
        "data_type": "list required",
        "description": "IDs of the starred views."
      }
    ],
    "Response Example": "-d'{\n  \"starredViewIds\" : [ \"4000000007808\", \"4000000007810\", \"4000000007818\", \"4000000007820\", \"4000000007828\", \"4000000007830\", \"4000000007848\", \"4000000007850\" ]\n}'"
  },
  {
    "Api name": "Get Last Accessed View",
    "Api URL": "/api/v1/lastAccessedView",
    "Api Method": "GET",
    "Desc": "This API fetches the view last accessed by the user in the module and department specified in the request.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/lastAccessedView?departmentId=4000000007069&module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the view(s) is (are) configured."
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Module associated with the view. Values allowed are: tickets , tasks , contacts , accounts , activities , calls , events or custom module ."
      }
    ],
    "Response Example": "{\n  \"data\" : {\n    \"preference\" : {\n      \"records\" : \"20\",\n      \"sortField\" : {\n        \"name\" : \"createdTime\",\n        \"order\" : \"ascending\"\n      },\n      \"receivedIn\" : \"allDays\"\n    },\n    \"name\" : \"My Records\",\n    \"id\" : \"4000000008143\"\n  }\n}"
  },
  {
    "Api name": "Update Last Accessed View",
    "Api URL": "/api/v1/lastAccessedView/([0-9]+)",
    "Api Method": "PUT",
    "Desc": "This API updates the view last accessed by the user in the module and department specified in the request.",
    "OAuth Scope": "Desk.basic.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/lastAccessedView/4000000008143?departmentId=4000000007069\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the view(s) is (are) configured."
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "Search",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Search helps you find resources in all modules or a specific module in your help desk portal.You can search for multiple resources by separating the values with a comma.Zoho Desk APIs supportexact match,wildcard match,empty check, andnot empty check.1. Exact match:Single word:This search looks for the specified value regardless of any prefixes or suffixes.For example, searching forTechnologywill fetch results likeTechnology is a boonandNew technology.Multiple word:This search looks only for the exact phrase in the same order of the specified value.For example, searching forTechnology is advancingwill fetch results where the words appear in that sequence.2.Wildcard match:*(Asterisk):This search looks for the specified value, and if the asterisk (*) is provided at the end, then it will retrieve all the relevant values.For example, searching fortech*will retrieve results like tech, technology, and technical.Note:For Phone fields, wildcard matching works even if (*) is placed at the beginning of the keyword.For string-type fields, wildcard matching only works when the asterisk (*) is placed at the end of the keyword, not in the middle or beginning.3.Empty check:This search looks for empty or null values in a specific field if the query parameter is passed as${empty}in the API request.4.Not empty check:This search looks for non-empty fields or fields with values if the query parameter is passed as${notEmpty}in the API request.Note:Search API query parameters, especially those of string type, must be URL-encoded. Both${empty}and${notEmpty}should also be URL-encoded.Newly added resources to your help desk may require some time to be included in the index. If a resource is not showing up in search results, please wait a few minutes and attempt the search again.A search requires a minimum of three characters to be successful.Each search can return up to 5,000 resources. If you need more resources, you can modify your program to narrow down search results using the TimeRange parameter.To search for tickets by their status, use the following query parameters:${OPEN}for open tickets,${ONHOLD}for tickets on hold, and${CLOSED}for closed tickets.Note for Sorting:A hyphen (-) before a field name indicates sorting in descending order.For example,sortBy=-modifiedTimewill sort the modified time in descending order.ThesortBy=relevancekey-attribute pair fetches the most relevant records first.Note for Custom lookup field:When using a custom lookup field as a filter, you should provide the entity ID as the value for that field rather than the actual display value.Example,For a contact name lookup field, the contact ID should be passed instead of the contact name.customField1=FieldAPIName:Entity IDA maximum of ten custom fields can be used in the query parameter, such as customField1, customField2,....up to customField10.To utilize it, follow the formatcustomField1=FieldAPIName:search valueExample:For String field:customField1=cf_modelName%3AF3*For Phone field:customField2=cf_phone%3A902*For empty check:email=%24%7Bempty%7DRequest sample for modified time range parameterhttps://desk.zoho.com/api/v1/tickets/search?from=0&limit=100&sortBy=modifiedTime&modifiedTimeRange=2019-01-01T00:00:00.000Z,2019-01-31T23:59:59.000ZThis API will retrieve resources within a one-month time range. The from and to values must be separated by a comma (,).",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Search across modules",
    "Api URL": "/api/v1/search?searchStr={searchStr}&departmentId={departmentId}&from={from}&limit={limit}&sortBy={sortField}",
    "Api Method": "GET",
    "Desc": "This API returns information from all modules or a specific module, based on the value of the module query param.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ, Desk.contacts.READ, Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/search?searchStr=zylker&from=0&limit=10&sortBy=modifiedTime\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "searchStr",
        "data_type": "String optional",
        "description": "Keyword or phrase to search"
      },
      {
        "name": "module",
        "data_type": "String optional",
        "description": "Module to search in: tickets , accounts , contacts or tasks . The default response includes all modules."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the resource must be fetched"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 0, range : 0-4999",
        "description": "Index number, starting from which the resources must be searched"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 10, range : 1-5000",
        "description": "Number of resources to return in the search result"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "Sort by a specific attribute: relevance or modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"subject\" : \"Zylker ticket\",\n    \"departmentId\" : \"4000000007043\",\n    \"dueDate\" : null,\n    \"channel\" : \"Phone\",\n    \"onholdTime\" : null,\n    \"sharedDepartments\" : [ ],\n    \"closedTime\" : null,\n    \"number\" : \"104\",\n    \"contact\" : {\n      \"phone\" : null,\n      \"mobile\" : \"9876543210\",\n      \"name\" : \"Stephen\",\n      \"id\" : \"4000000013012\",\n      \"type\" : null,\n      \"email\" : null,\n      \"account\" : {\n        \"website\" : null,\n        \"name\" : \"Zylker Accounts\",\n        \"id\" : \"4000000008850\"\n      }\n    },\n    \"createdTime\" : \"2016-06-27T07:22:52.000Z\",\n    \"id\" : \"4000000016009\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"4000000007043\"\n    },\n    \"email\" : null,\n    \"customerResponseTime\" : \"2016-06-27T07:22:52.117Z\",\n    \"cf\" : {\n      \"cf_featureRequest\" : false,\n      \"cf_region\" : \"Asia\"\n    },\n    \"productId\" : \"4000000013043\",\n    \"contactId\" : \"4000000013012\",\n    \"module\" : \"tickets\",\n    \"threadCount\" : \"0\",\n    \"team\" : {\n      \"name\" : \"TestingTeam\",\n      \"id\" : \"4000000007235\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/4000000007235/logo?orgId=11278831\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"4000000008692\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"4000000008692\",\n      \"zuid\" : \"10657727\"\n    },\n    \"status\" : \"Open\"\n  }, {\n    \"cf\" : {\n      \"cf_followUpDate\" : \"2016-07-07T19:30:00.000Z\",\n      \"cf_severity\" : \"High\"\n    },\n    \"ticket\" : null,\n    \"subject\" : \"Wifi adapter not working in zylker\",\n    \"completedTime\" : null,\n    \"module\" : \"tasks\",\n    \"dueDate\" : \"2016-06-27T19:30:00.000Z\",\n    \"description\" : null,\n    \"ownerId\" : \"4000000008692\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdBy\" : \"4000000008692\",\n    \"contact\" : null,\n    \"createdTime\" : \"2016-06-27T06:39:48.000Z\",\n    \"id\" : \"4000000013065\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"category\" : null,\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  }, {\n    \"website\" : null,\n    \"phone\" : null,\n    \"accountName\" : \"Zylker India\",\n    \"customFields\" : {\n      \"city\" : \"Delhi\",\n      \"state\" : \"India\"\n    },\n    \"module\" : \"accounts\",\n    \"id\" : \"4000000013027\",\n    \"email\" : null\n  }, {\n    \"lastName\" : \"Stephen\",\n    \"accountId\" : \"4000000008850\",\n    \"firstName\" : \"Henry\",\n    \"photoURL\" : null,\n    \"phone\" : null,\n    \"customFields\" : {\n      \"customerSince\" : \"2011\",\n      \"editionUsed\" : \"Professional\"\n    },\n    \"module\" : \"contacts\",\n    \"fullName\" : \"Henry Stephen\",\n    \"id\" : \"4000000013012\",\n    \"ownerId\" : \"4000000008692\",\n    \"email\" : null,\n    \"account\" : {\n      \"website\" : null,\n      \"name\" : \"Zylker India\",\n      \"id\" : \"4000000008850\"\n    }\n  } ],\n  \"count\" : {\n    \"tickets\" : 1,\n    \"accounts\" : 1,\n    \"tasks\" : 1,\n    \"contacts\" : 1\n  }\n}"
  },
  {
    "Api name": "Search Tickets",
    "Api URL": "/api/v1/tickets/search?departmentId={departmentId}&from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for tickets in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/search?from=0&limit=1&subject=analysis*&email=%24%7Bnotempty%7D%20&customField1=teamId%3A1892000000057006\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the entity must be fetched. If the ID is not passed, then searches in all permitted departments exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the ticket exact match"
      },
      {
        "name": "ticketNumber",
        "data_type": "String optional",
        "description": "The ticket's serial number exact match"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "Subject of the ticket wildcard search"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of the ticket wildcard search"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the ticket inclusive of custom status. example: 1. status=open,in progress 2. status=${open} exact match"
      },
      {
        "name": "priority",
        "data_type": "String optional",
        "description": "Priority of the ticket exact match"
      },
      {
        "name": "email",
        "data_type": "String optional",
        "description": "The corresponding email address associated with the ticket. example: 1. email=jack* 2.email=${notempty} 3.email=${empty} wildcard search empty check not empty check"
      },
      {
        "name": "phone",
        "data_type": "String optional",
        "description": "The phone number provided in the ticket wildcard search empty check not empty check"
      },
      {
        "name": "channel",
        "data_type": "String optional",
        "description": "The channel through which the ticket was received exact match empty check not empty check"
      },
      {
        "name": "category",
        "data_type": "String optional",
        "description": "The category of the ticket wildcard search empty check not empty check"
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent who is assigned to resolve the ticket exact match"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact who raised the ticket exact match"
      },
      {
        "name": "accountId",
        "data_type": "long optional",
        "description": "ID of the account associated with the ticket exact match"
      },
      {
        "name": "productId",
        "data_type": "long optional",
        "description": "ID of the product associated with the ticket exact match"
      },
      {
        "name": "contactName",
        "data_type": "String optional",
        "description": "The name of the contact who raised the ticket wildcard search"
      },
      {
        "name": "accountName",
        "data_type": "String optional",
        "description": "Name of the account associated with the ticket wildcard search empty check not empty check"
      },
      {
        "name": "productName",
        "data_type": "String optional",
        "description": "Name of the product associated with the ticket wildcard search empty check not empty check"
      },
      {
        "name": "tag",
        "data_type": "String optional",
        "description": "The tag associated with the ticket wildcard search empty check not empty check"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Key that includes all the columns in the tickets module for search wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customerResponseTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets in which customer responses were recorded in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, customerResponseTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z2017-11-05T13:15:30.000Z,2018-09-05T13:15:30.000Z"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "dueDateRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets due in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, dueDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime , customerResponseTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-06-21T13:16:14.000Z\",\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : \"Sub General\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"isRead\" : false,\n    \"channel\" : \"FORUMS\",\n    \"onholdTime\" : null,\n    \"description\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"resolution\" : null,\n    \"sharedDepartments\" : [ {\n      \"name\" : \"Sample Department Name\",\n      \"id\" : \"1892000000006909\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"name\" : \"Sample Department Name\",\n      \"id\" : \"1892000000006911\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"closedTime\" : null,\n    \"isOverDue\" : false,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543456\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"modifiedBy\" : \"52338000000043001\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"product\" : null,\n    \"cf\" : {\n      \"cf_permanentaddress\" : null,\n      \"cf_dateofpurchase\" : null,\n      \"cf_phone\" : null,\n      \"cf_numberofitems\" : null,\n      \"cf_url\" : null,\n      \"cf_secondaryemail\" : null,\n      \"cf_severitypercentage\" : \"0.0\",\n      \"cf_modelname\" : \"F3 2017\"\n    },\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"lastThread\" : {\n      \"channel\" : \"FEEDBACK\",\n      \"isDraft\" : false,\n      \"isForward\" : false,\n      \"direction\" : \"in\"\n    },\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"classification\" : null,\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : \"1 888 900 9646\",\n    \"createdBy\" : \"52338000000043001\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isEscalated\" : false,\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"emailId\" : \"jack@zylker.com\",\n      \"id\" : \"1892000000056007\",\n      \"zuid\" : \"640954748\"\n    },\n    \"category\" : \"general\",\n    \"status\" : \"Open\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Accounts",
    "Api URL": "/api/v1/accounts/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for accounts in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/search?limit=1&accountName=Zylker&email=%24%7Bnotempty%7D%20&customField1=cf_contactcount%3A1\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the account exact match"
      },
      {
        "name": "accountName",
        "data_type": "String optional",
        "description": "Name of the account wildcard search"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Find throughout the account wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search e.g customField1=cf_activeAccount:true empty check e.g customField1=cf_activeAccount:${empty} not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check e.g customField2=cf_activeAccount:${notempty}"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters accounts created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters accounts modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime , accountName To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Twin\",\n      \"lastName\" : \"john\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/52338000000691001/photo?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"3263000000057001\",\n      \"zuid\" : \"10657727\"\n    },\n    \"country\" : \"USA\",\n    \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n    \"website\" : \"www.zylker.com\",\n    \"code\" : \"3211\",\n    \"cf\" : {\n      \"cf_contactcount\" : \"1\"\n    },\n    \"accountName\" : \"Zylker\",\n    \"city\" : null,\n    \"description\" : null,\n    \"industry\" : \"Automation\",\n    \"ownerId\" : \"3263000000057001\",\n    \"phone\" : \"6218129190\",\n    \"street\" : null,\n    \"annualrevenue\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"state\" : null,\n    \"id\" : \"3263000000074571\",\n    \"fax\" : \"+1 444 8656 8732\",\n    \"email\" : \"support@zylker.com\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Contacts",
    "Api URL": "/api/v1/contacts/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for contacts in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/search?limit=1&lastName=Lawrence&email=%24%7Bnotempty%7D%20&customField1=cf_permanentaddress%3AMenlo Park\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the contact exact match"
      },
      {
        "name": "fullName",
        "data_type": "String optional",
        "description": "Full name of the contact wildcard search"
      },
      {
        "name": "firstName",
        "data_type": "String optional",
        "description": "First name of the contact wildcard search empty check not empty check"
      },
      {
        "name": "lastName",
        "data_type": "String optional",
        "description": "Last name of the contact wildcard search"
      },
      {
        "name": "email",
        "data_type": "String optional",
        "description": "Email ID of the contact wildcard search empty check not empty check"
      },
      {
        "name": "phone",
        "data_type": "String optional",
        "description": "Phone number of the contact wildcard search empty check not empty check"
      },
      {
        "name": "mobile",
        "data_type": "String optional",
        "description": "Mobile number of the contact wildcard search empty check not empty check"
      },
      {
        "name": "accountName",
        "data_type": "String optional",
        "description": "Name of the account associated with the Contact wildcard search empty check not empty check"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Find throughout the contact wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search e.g customField1=cf_mappedWithAccount:true empty check e.g customField1=cf_mappedWithAccount:${empty} not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check e.g customField2=cf_mappedWithAccount:${notempty}"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters contacts created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters contacts modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime , lastName , firstName To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"lastName\" : \"Lawrence\",\n    \"modifiedTime\" : \"2016-05-04T09:57:17.000Z\",\n    \"country\" : null,\n    \"secondaryEmail\" : null,\n    \"city\" : null,\n    \"description\" : null,\n    \"ownerId\" : \"1892000000042001\",\n    \"type\" : null,\n    \"title\" : null,\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000042032/photo\",\n    \"twitter\" : null,\n    \"street\" : null,\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"isEndUser\" : \"false\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"5000000014010\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"state\" : null,\n    \"id\" : \"1892000000042032\",\n    \"email\" : \"lawrence@zylker.com\",\n    \"zip\" : null,\n    \"owner\" : {\n      \"firstName\" : \"Twin\",\n      \"lastName\" : \"john\",\n      \"photoURL\" : null,\n      \"emailId\" : \"lawrence@zylker.com\",\n      \"id\" : \"1892000000042001\",\n      \"zuid\" : \"14345345\"\n    },\n    \"cf\" : {\n      \"cf_permanentaddress\" : \"Menlo Park, California\",\n      \"cf_lastcontactedon\" : null\n    },\n    \"facebook\" : null,\n    \"mobile\" : null,\n    \"accountId\" : \"1892000000975382\",\n    \"firstName\" : \"Jennifer\",\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"account\" : {\n      \"website\" : null,\n      \"accountName\" : \"Zylker\",\n      \"id\" : \"1892000000975382\"\n    }\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Articles",
    "Api URL": "/api/v1/articles/search",
    "Api Method": "GET",
    "Desc": "This API searches for help articles in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/search?limit=1&title=Knowledge\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the entity must be fetched. if not passed then searches in permitted departments exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the articles exact match"
      },
      {
        "name": "title",
        "data_type": "String optional",
        "description": "title of the help article wildcard search"
      },
      {
        "name": "categoryName",
        "data_type": "String optional",
        "description": "Name of the Category wildcard search"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the Category"
      },
      {
        "name": "tag",
        "data_type": "String optional",
        "description": "Tag in the articles wildcard search empty check not empty check"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Key that includes all article details for the search wildcard search"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters articles created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters articles modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"Help articles are vital resources in user education. They are the first building blocks of an effective self-service setup.\",\n    \"modifiedTime\" : \"2018-07-16T06:48:08.000Z\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"HIll\",\n      \"id\" : \"5000000015935\"\n    },\n    \"creatorId\" : \"4000000012931\",\n    \"modifierId\" : \"4000000012931\",\n    \"dislikeCount\" : \"1\",\n    \"permission\" : \"AGENTS\",\n    \"likeCount\" : \"2\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\",\n    \"usageCount\" : \"3\",\n    \"latestVersion\" : \"1.0\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000281023\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/kb/articles/importance-of-knowledge-base\",\n    \"feedbackCount\" : \"1\",\n    \"createdTime\" : \"2018-07-16T06:48:08.000Z\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"viewCount\" : \"3\",\n    \"id\" : \"22372000000281023\",\n    \"permalink\" : \"importance-of-a-knowledge-base\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"5000000017008\"\n    },\n    \"categoryId\" : \"4000000013240\",\n    \"status\" : \"Published\"\n  } ],\n  \"count\" : 379\n}"
  },
  {
    "Api name": "Search Tasks",
    "Api URL": "/api/v1/tasks/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for tasks in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/search?limit=1&priority=High,Low&status=%24%7Bnotempty%7D%20&customField1=cf_permanentaddress%3AMenlo Park\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the entity must be fetched  if not passed then searches in permitted departments exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the task exact match"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "subject of the task in the help desk wildcard search"
      },
      {
        "name": "ticketNumber",
        "data_type": "String optional",
        "description": "ticket Number of the ticket that associated with the task exact match"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "status of the task exact match"
      },
      {
        "name": "priority",
        "data_type": "String optional",
        "description": "Priority of the task exact match"
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to resolve the task exact match"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Find throughout the task wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tasks created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tasks modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "dueDateRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tasks due in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, dueDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-09-13T12:14:41.000Z\",\n    \"cf\" : {\n      \"cf_permanentaddress\" : \"Menlo Park, California\"\n    },\n    \"ticket\" : null,\n    \"subject\" : \"Bug Fix #121\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"3000000007043\",\n    \"dueDate\" : \"2016-09-19T12:27:26.000Z\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : \"3000000054002\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdTime\" : \"2016-08-14T08:27:26.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"id\" : \"3000000054004\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"category\" : null,\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Calls",
    "Api URL": "/api/v1/calls/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for the calls in your help desk portal.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.calls.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/calls/search?limit=1&priority=High,Low&status=%24%7Bnotempty%7D%20&customField1=cf_permanentaddress%3AMenlo Park\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the call must be fetched. If a valid ID is not passed, the search is performed in all departments permitted. exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the call exact match"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "subject of the call wildcard search"
      },
      {
        "name": "ticketNumber",
        "data_type": "String optional",
        "description": "Ticket number of the ticket associated with the call exact match"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the call exact match"
      },
      {
        "name": "priority",
        "data_type": "String optional",
        "description": "Priority of the call exact match"
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to handle the call exact match"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Key that includes all call details for the search wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters calls recorded in the help desk in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters calls whose details were modified in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "startDateRange",
        "data_type": "timestamp optional",
        "description": "Key that filters calls that were made in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, startDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"cf\" : {\n      \"cf_permanentaddress\" : \"Menlo Park, California\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"contact\" : {\n        \"firstName\" : null,\n        \"lastName\" : \"Lawrence\",\n        \"phoneNumber\" : \"+14246721666\",\n        \"id\" : \"3000000008749\"\n      },\n      \"id\" : \"3000000008753\"\n    },\n    \"subject\" : \"New Call\",\n    \"completedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"departmentId\" : \"3000000007043\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : null,\n    \"priority\" : \"Normal\",\n    \"duration\" : \"300\",\n    \"createdTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n    \"id\" : \"3000000018001\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raja\",\n      \"photoURL\" : null,\n      \"emailId\" : \"carol@zylker.com\",\n      \"id\" : \"36385000000120033\",\n      \"zuid\" : \"55499215\"\n    },\n    \"ticketId\" : \"3000000008753\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"completed\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Events",
    "Api URL": "/api/v1/events/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for the events in your help desk portal.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/events/search?limit=1&priority=High,Low&status=%24%7Bnotempty%7D%20&customField1=cf_permanentaddress%3AMenlo Park\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the event must be fetched. If a valid ID is not passed, the search is performed in all departments permitted. exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the event exact match"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "Subject of the event wildcard search"
      },
      {
        "name": "ticketNumber",
        "data_type": "String optional",
        "description": "Ticket number of the ticket associated with the event exact match"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the event exact match"
      },
      {
        "name": "priority",
        "data_type": "String optional",
        "description": "Priority of the event exact match"
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to handle the event exact match"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Key that includes all event details for the search wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters events recorded in the help desk in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters events whose details were modified in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "startDateRange",
        "data_type": "timestamp optional",
        "description": "Key that filters events that occurred in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, startDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"contact\" : {\n        \"firstName\" : null,\n        \"lastName\" : \"Lawrence\",\n        \"id\" : \"3000000008749\"\n      },\n      \"id\" : \"3000000008753\"\n    },\n    \"customFields\" : { },\n    \"subject\" : \"New Event\",\n    \"completedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"departmentId\" : \"3000000007043\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : null,\n    \"priority\" : \"Normal\",\n    \"duration\" : \"30\",\n    \"createdTime\" : \"2016-07-26T16:32:11.000Z\",\n    \"startTime\" : \"2016-07-26T17:02:11.000Z\",\n    \"id\" : \"3000000018001\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raja\",\n      \"photoURL\" : null,\n      \"emailId\" : \"carol@zylker.com\",\n      \"id\" : \"36385000000120033\",\n      \"zuid\" : \"55499215\"\n    },\n    \"category\" : \"Meeting\",\n    \"ticketId\" : \"3000000008753\",\n    \"status\" : \"completed\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Products",
    "Api URL": "/api/v1/products/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for the products in your help desk portal.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.products.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products/search?limit=1&productName=Search2&productCode=%24%7Bnotempty%7D%20&customField1=cf_productTagName%3Asecondary\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the entity must be fetched  if not passed then searches in permitted departments exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the Product exact match"
      },
      {
        "name": "productName",
        "data_type": "String optional",
        "description": "Name of the Product wildcard search"
      },
      {
        "name": "productCode",
        "data_type": "String optional",
        "description": "Code of the product wildcard search empty check not empty check"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact associated with the product exact match"
      },
      {
        "name": "accountId",
        "data_type": "long optional",
        "description": "ID of the account associated with the product exact match"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Search throughout the product wildcard search"
      },
      {
        "name": "customField1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "customField10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. customfield10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters products created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters products modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime , productName To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-11-02T10:31:35.000Z\",\n    \"productCode\" : \"Search2\",\n    \"cf\" : {\n      \"cf_productTagName\" : \"secondary engine\"\n    },\n    \"createdBy\" : \"5000000009116\",\n    \"description\" : null,\n    \"createdTime\" : \"2017-11-02T10:31:35.000Z\",\n    \"modifiedBy\" : \"5000000009116\",\n    \"departmentIds\" : [ \"5000000007235\" ],\n    \"id\" : \"5000000009882\",\n    \"productName\" : \"Search2\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search Activities",
    "Api URL": "/api/v1/activities/search?from={from}&limit={limit}&sortField={sortField}&customField1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for the activities in your help desk portal.You can provide comma-separated values, which will perform the search on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ, Desk.activities.tasks.READ,Desk.calls.READ,Desk.tasks.READ,Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/activities/search?limit=1&priority=High,Low\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which the activity must be fetched. If you do not pass a value for this parameter, the search is performed in all permitted departments. exact match"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the activity exact match"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "Subject of the activity wildcard search"
      },
      {
        "name": "ticketNumber",
        "data_type": "String optional",
        "description": "Serial number of the ticket associated with the activity exact match"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Completion status of the activity exact match"
      },
      {
        "name": "priority",
        "data_type": "String optional",
        "description": "Priority of the activity exact match"
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to handle the activity exact match"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "Key that searches across all fields in all activities wildcard search"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters activities created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters activities whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-09-13T12:14:41.000Z\",\n    \"ticket\" : null,\n    \"customFields\" : { },\n    \"subject\" : \"Bug Fix #121\",\n    \"completedTime\" : null,\n    \"module\" : \"task\",\n    \"departmentId\" : \"3000000007043\",\n    \"dueDate\" : \"2016-09-19T12:27:26.000Z\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : \"3000000054002\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdTime\" : \"2016-08-14T08:27:26.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"id\" : \"3000000054004\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"category\" : null,\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  } ],\n  \"count\" : 1\n}"
  },
  {
    "Api name": "Search  Records",
    "Api URL": "/api/v1/{moduleApiName}/search?from={from}&limit={limit}&sortField={sortField}&field1={apiName:value}",
    "Api Method": "GET",
    "Desc": "This API searches for records in your help desk.You can provide multiple values separated by commas, and the search will be performed on the field using any of the provided values.Learn more about search and how it works.",
    "OAuth Scope": "Desk.search.READ, Desk.custommodule.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/cm_doctors/search?field1=cf_doctor_description%3Achange&from=0&limit=10\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from see documentation",
        "data_type": "int optional, range : 0-4999",
        "description": "The starting index for fetching results. default : 0 starts from 0"
      },
      {
        "name": "limit see documentation",
        "data_type": "int optional, range : 1-100",
        "description": "Specifies the number of tickets to be fetched. default : 10"
      },
      {
        "name": "_all",
        "data_type": "String optional",
        "description": "To match throughout the all the fields wildcard search"
      },
      {
        "name": "field1 see documentation",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field1=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field2",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field2=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field3",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field3=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field4",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field4=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field5",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field5=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field6",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field6=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field7",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field7=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field8",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field8=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field9",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field9=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "field10",
        "data_type": "String optional",
        "description": "To search for the values in a field, use the below format. field10=Field ApiName:search value This will compare the specified search values with the field's value and retrieve the matching results. wildcard search empty check not empty check"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Retrieves the records of the custom module based on the specified created time. The time range can be provided in ISO format yyyy-MM-ddThh:mm:ss.SSSZ separated by a comma. For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Retrieves the records of the custom module based on the specified modified time. The time range can be provided in ISO format yyyy-MM-ddThh:mm:ss.SSSZ separated by a comma. For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "sortBy",
        "data_type": "String optional",
        "description": "SortBy can be: relevance , modifiedTime , createdTime To specify sorting order, use as given below: For descending order: sortBy= - modifiedTime For ascending order: sortBy=modifiedTime"
      }
    ],
    "Response Example": "{\n  \"layout\" : {\n    \"id\" : \"1000003000004\",\n    \"layoutName\" : \"Standard - Department1\"\n  },\n  \"owner\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\"\n  },\n  \"modifiedTime\" : \"2024-04-22T14:09:41.000Z\",\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description change\"\n  },\n  \"createdBy\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"createdTime\" : \"2024-04-22T13:55:53.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\"\n  },\n  \"isPresence\" : true,\n  \"id\" : \"1000003019049\",\n  \"department\" : {\n    \"name\" : \"Department1\",\n    \"id\" : \"1000000025632\"\n  }\n}"
  },
  {
    "Api name": "Ticket TimeEntry",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket time entry refers to the time taken by an agent to resolve a ticket.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the time entry"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "requestChargeType",
        "data_type": "string",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "parent show Attributes",
        "data_type": "object",
        "description": "Module to which the time entry is associated."
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of module. Values supported are TICKETS , TASKS , CALLS , and EVENTS"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the module"
      },
      {
        "name": "associatedTicketId",
        "data_type": "long",
        "description": "ID of the ticket associated, if the parent module is TASKS , CALLS or EVENTS"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double",
        "description": "Additional cost incurred"
      },
      {
        "name": "totalCost",
        "data_type": "double",
        "description": "Total cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the time entry"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Ticket Time Entry",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a time entry recorded for a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000033010?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"parent\" : {\n    \"ticketNumber\" : \"1004\",\n    \"subject\" : \"Ticket subject\",\n    \"id\" : \"4000000031007\",\n    \"type\" : \"TICKETS\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"departmentId\" : \"4000000008694\",\n  \"fixedCost\" : null,\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
  },
  {
    "Api name": "List Ticket Time Entries",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntry",
    "Api Method": "GET",
    "Desc": "This API lists the time entries associated with a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntry?from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module from which the time entries must be fetched. Values allowed are tickets and tasks ."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      },
      {
        "name": "orderBy",
        "data_type": "String optional",
        "description": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time1\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time2\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"departmentId\" : \"4000000008694\",\n    \"fixedCost\" : null,\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time3\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
  },
  {
    "Api name": "Add Ticket Time Entry",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntry",
    "Api Method": "POST",
    "Desc": "This API adds a time entry in your help desk",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntry\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "requestChargeType",
        "data_type": "string optional, max chars : 120",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp required",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer optional",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer optional",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer optional",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double optional",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double optional",
        "description": "Additional cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double optional",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the time entry"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "mode",
        "data_type": "String optional",
        "description": "Mode configured in time tracking. Supported values are Manual and Auto"
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Billing Preference"
      },
      {
        "name": "invoiceId",
        "data_type": "long optional",
        "description": "ID of the invoice related to the time entry"
      }
    ],
    "Response Example": "-d'{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}'"
  },
  {
    "Api name": "Update Ticket Time Entry",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing ticket time entry",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000034008\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "requestChargeType",
        "data_type": "string optional, max chars : 120",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp optional",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer optional",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer optional",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer optional",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double optional",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double optional",
        "description": "Additional cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double optional",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the time entry"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "mode",
        "data_type": "String optional",
        "description": "Mode configured in time tracking. Supported values are Manual and Auto"
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Billing Preference"
      },
      {
        "name": "invoiceId",
        "data_type": "long optional",
        "description": "ID of the invoice related to the time entry"
      }
    ],
    "Response Example": "-d'{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}'"
  },
  {
    "Api name": "Delete Ticket Time Entry",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a time entry recorded for a ticket",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000034008\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get summation of Ticket Time Entries",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntrySummation",
    "Api Method": "GET",
    "Desc": "This API fetches the sum of time entries associated with a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntrySummation?billStatus=billed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module from which the time entries must be fetched. Values allowed are tickets and tasks ."
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      }
    ],
    "Response Example": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
  },
  {
    "Api name": "Get Ticket Time Entries by Billing Type",
    "Api URL": "/api/v1/tickets/{ticket_id}/timeEntryByBillingType",
    "Api Method": "GET",
    "Desc": "This API fetches time entries for a ticket created after recently modified time of the given billing type from your help desk",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000031007/timeEntryByBillingType?billingType=FIXED_COST_FOR_TICKETS&include=owner&from=0&limit=10\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "billingType",
        "data_type": "String required",
        "description": "Allowed values are FIXED_COST_FOR_TICKETS FIXED_COST_FOR_AGENTS SPECIFIC_COST_PER_AGENT SPECIFIC_COST_PER_PROFILE"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed value is : owner"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"0\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : { },\n    \"executedTime\" : null,\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"0\",\n    \"agentCostPerHour\" : null,\n    \"description\" : null,\n    \"hoursSpent\" : \"0\",\n    \"ownerId\" : \"15000000009148\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"createdBy\" : \"15000000009148\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2018-01-10T18:45:17.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"15000000031007\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : null,\n    \"totalCost\" : \"0.0\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"0\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : { },\n    \"executedTime\" : \"2017-12-20T18:09:20.000Z\",\n    \"departmentId\" : \"4000000008694\",\n    \"fixedCost\" : null,\n    \"minutesSpent\" : \"0\",\n    \"agentCostPerHour\" : null,\n    \"description\" : \"Dummy#2\",\n    \"hoursSpent\" : \"1\",\n    \"ownerId\" : \"15000000009148\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"createdBy\" : \"15000000009148\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2018-01-10T15:20:47.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"15000000029314\",\n    \"requestChargeType\" : \"Upgrade Request\",\n    \"additionalCost\" : null,\n    \"totalCost\" : \"0.0\"\n  } ]\n}"
  },
  {
    "Api name": "Ticket Approvals",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Often, customer support agents do not have the authority to make decisions related to ticket resolution. When the intervention of a support manager or any other higher authority is required in the decision-making process, the agent can submit the ticket for approval.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "approverIds show Attributes",
        "data_type": "list",
        "description": "IDs of users to whom the approval must be submitted"
      },
      {
        "name": "subject",
        "data_type": "string",
        "description": "Subject of the approval"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Status of the approval"
      },
      {
        "name": "description",
        "data_type": "String",
        "description": "Description of the approval"
      },
      {
        "name": "requestedTime",
        "data_type": "timestamp",
        "description": "Time when the approval was requested"
      },
      {
        "name": "processedTime",
        "data_type": "timestamp",
        "description": "Time when the approval was processed"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the approval"
      },
      {
        "name": "requester show Attributes",
        "data_type": "object",
        "description": "Details of user who requested for the approval"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      },
      {
        "name": "approver show Attributes",
        "data_type": "object",
        "description": "Details of user who processed the approval"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List approvals",
    "Api URL": "/api/v1/tickets/{ticket_id}/approvals",
    "Api Method": "GET",
    "Desc": "This API lists the approvals submitted in your help desk.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/approvals\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number starting from which the approvals must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of approvals to fetch"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Key that filters the approvals by status"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"approver\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raj\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n      \"id\" : \"4000000015001\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"saran\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n      \"id\" : \"4000000012629\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n    \"subject\" : \"Testing\",\n    \"description\" : \"testing\",\n    \"id\" : \"1892000001054081\",\n    \"status\" : \"Approved\",\n    \"processedTime\" : \"2018-02-07T10:12:35.000Z\"\n  } ]\n}"
  },
  {
    "Api name": "Get approval",
    "Api URL": "/api/v1/tickets/{ticket_id}/approvals/{approval_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of an approval.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/approvals/1892000001054081\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"approver\" : {\n    \"firstName\" : \"saran\",\n    \"lastName\" : \"raj\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n    \"id\" : \"4000000015001\",\n    \"email\" : null\n  },\n  \"requester\" : {\n    \"firstName\" : \"aravind\",\n    \"lastName\" : \"a\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n    \"id\" : \"4000000012629\",\n    \"email\" : null\n  },\n  \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n  \"subject\" : \"Testing\",\n  \"processedTime \" : \"2018-02-07T10:12:35.000Z\",\n  \"description\" : \"testing\",\n  \"id\" : \"1892000001054081\",\n  \"status\" : \"Rejected\"\n}"
  },
  {
    "Api name": "Create approval",
    "Api URL": "/api/v1/tickets/{ticket_id}/approvals",
    "Api Method": "POST",
    "Desc": "This API creates an approval in your help desk.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/approvals\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"approverIds\" : [ \"1892000000042001\" ],\n  \"subject\" : \"New approval\",\n  \"description\" : \"new app desc\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "approverIds",
        "data_type": "list required",
        "description": "IDs of users to whom the approval must be submitted"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 1000",
        "description": "Subject of the approval"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Status of the approval"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of the approval"
      }
    ],
    "Response Example": "-d'{\n  \"approverIds\" : [ \"1892000000042001\" ],\n  \"subject\" : \"New approval\",\n  \"description\" : \"new app desc\"\n}'"
  },
  {
    "Api name": "Update approval",
    "Api URL": "/api/v1/tickets/{ticket_id}/approvals/{approval_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing ticket approval.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/1892000000094004/approvals/1892000001054081\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"status\" : \"Approved/Rejected\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "approverIds",
        "data_type": "list optional",
        "description": "IDs of users to whom the approval must be submitted"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 1000",
        "description": "Subject of the approval"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Status of the approval"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of the approval"
      }
    ],
    "Response Example": "-d'{\n  \"status\" : \"Approved/Rejected\"\n}'"
  },
  {
    "Api name": "Task TimeEntry",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Tasks Time Entry refers to the time taken by an agent to complete a task.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the time entry"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "requestChargeType",
        "data_type": "string",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "parent show Attributes",
        "data_type": "object",
        "description": "Module to which the time entry is associated."
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of module. Values supported are TICKETS , TASKS , CALLS , and EVENTS"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the module"
      },
      {
        "name": "associatedTicketId",
        "data_type": "long",
        "description": "ID of the ticket associated, if the parent module is TASKS , CALLS or EVENTS"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double",
        "description": "Additional cost incurred"
      },
      {
        "name": "totalCost",
        "data_type": "double",
        "description": "Total cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the time entry"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get a Task Time Entry",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a time entry recorded for a task.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000033010?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1003\",\n    \"associatedTicketId\" : \"4000000030017\",\n    \"subject\" : \"Tasks subject\",\n    \"id\" : \"4000000031014\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"departmentId\" : \"4000000008694\",\n  \"fixedCost\" : null,\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
  },
  {
    "Api name": "List Task Time Entries",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntry",
    "Api Method": "GET",
    "Desc": "This API lists the time entries associated with a task.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntry?from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      },
      {
        "name": "orderBy",
        "data_type": "String optional",
        "description": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time1\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time2\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time3\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
  },
  {
    "Api name": "Add a Task Time Entry",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntry",
    "Api Method": "POST",
    "Desc": "This API creates a time entry in your help desk",
    "OAuth Scope": "Desk.activities.CREATE, Desk.activities.tasks.CREATE,Desk.tasks.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntry\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "requestChargeType",
        "data_type": "string optional, max chars : 120",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp required",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer optional",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer optional",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer optional",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double optional",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double optional",
        "description": "Additional cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double optional",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the time entry"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "mode",
        "data_type": "String optional",
        "description": "Mode configured in time tracking. Supported values are Manual and Auto"
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Billing Preference"
      },
      {
        "name": "invoiceId",
        "data_type": "long optional",
        "description": "ID of the invoice related to the time entry"
      }
    ],
    "Response Example": "-d'{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}'"
  },
  {
    "Api name": "Update a Task Time Entry",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing time entry.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000034008\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "requestChargeType",
        "data_type": "string optional, max chars : 120",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp optional",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer optional",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer optional",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer optional",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double optional",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double optional",
        "description": "Additional cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double optional",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the time entry"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "cf",
        "data_type": "JSONObject optional",
        "description": "User-defined fields related to the time entry."
      },
      {
        "name": "mode",
        "data_type": "String optional",
        "description": "Mode configured in time tracking. Supported values are Manual and Auto"
      },
      {
        "name": "isBillable",
        "data_type": "boolean optional",
        "description": "Billing Preference"
      },
      {
        "name": "invoiceId",
        "data_type": "long optional",
        "description": "ID of the invoice related to the time entry"
      }
    ],
    "Response Example": "-d'{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}'"
  },
  {
    "Api name": "Delete a Task Time Entry",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a time entry recorded for a task.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000034008\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get summation of Task Time Entries",
    "Api URL": "/api/v1/tasks/{task_id}/timeEntrySummation",
    "Api Method": "GET",
    "Desc": "This API fetches the sum of time entries associated with a task.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/4000000031007/timeEntrySummation?billStatus=billed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      }
    ],
    "Response Example": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
  },
  {
    "Api name": "Agent TimeEntry",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Agent time entry refers to the time taken by an agent to resolve a ticket or perform a task.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the time entry"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "requestChargeType",
        "data_type": "string",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "parent show Attributes",
        "data_type": "object",
        "description": "Module to which the time entry is associated."
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of module. Values supported are TICKETS , TASKS , CALLS , and EVENTS"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the module"
      },
      {
        "name": "associatedTicketId",
        "data_type": "long",
        "description": "ID of the ticket associated, if the parent module is TASKS , CALLS or EVENTS"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double",
        "description": "Additional cost incurred"
      },
      {
        "name": "totalCost",
        "data_type": "double",
        "description": "Total cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the time entry"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get an Agent Time Entry",
    "Api URL": "/api/v1/agents/{agent_id}/timeEntry/{timeEntry_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a time entry related to an agent.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/4000000031007/timeEntry/4000000033010?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner."
      }
    ],
    "Response Example": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1001\",\n    \"associatedTicketId\" : \"4000000031007\",\n    \"subject\" : \"Task subject\",\n    \"id\" : \"4000000031010\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
  },
  {
    "Api name": "List Agent Time Entries",
    "Api URL": "/api/v1/agents/{agent_id}/timeEntry",
    "Api Method": "GET",
    "Desc": "This API lists the time entries associated with an agent.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module from which the time entries must be fetched. Values allowed are tickets and tasks ."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      },
      {
        "name": "orderBy",
        "data_type": "String optional",
        "description": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner ."
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
  },
  {
    "Api name": "Get summation of Agent Time Entries",
    "Api URL": "/api/v1/agents/{agent_id}/timeEntrySummation",
    "Api Method": "GET",
    "Desc": "This API fetches the sum of time entries associated with an agent.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/4000000031007/timeEntrySummation?module=ticket&billStatus=billed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module Preference. It can be either tickets tasks"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      }
    ],
    "Response Example": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
  },
  {
    "Api name": "Contact TimeEntry",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contact time entry refers to the time taken to resolve a ticket or perform a task related to a particular contact.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the time entry"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "requestChargeType",
        "data_type": "string",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "parent show Attributes",
        "data_type": "object",
        "description": "Module to which the time entry is associated."
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of module. Values supported are TICKETS , TASKS , CALLS , and EVENTS"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the module"
      },
      {
        "name": "associatedTicketId",
        "data_type": "long",
        "description": "ID of the ticket associated, if the parent module is TASKS , CALLS or EVENTS"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double",
        "description": "Additional cost incurred"
      },
      {
        "name": "totalCost",
        "data_type": "double",
        "description": "Total cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the time entry"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Contact Time Entries",
    "Api URL": "/api/v1/contacts/{contact_id}/timeEntry",
    "Api Method": "GET",
    "Desc": "This API lists time entries recorded for a ticket or task related to a contact.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module from which the time entries must be fetched. Values allowed are tickets and tasks ."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      },
      {
        "name": "orderBy",
        "data_type": "String optional",
        "description": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC ."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
  },
  {
    "Api name": "Get summation of Contact Time Entries",
    "Api URL": "/api/v1/contacts/{contact_id}/timeEntrySummation",
    "Api Method": "GET",
    "Desc": "This API fetches summation of time entries for a contact from your help desk",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000031007/timeEntrySummation?module=ticket&billStatus=billed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module Preference. It can be either tickets tasks"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      }
    ],
    "Response Example": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
  },
  {
    "Api name": "Account TimeEntry",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account time entry refers to the time taken to resolve a ticket or perform a task related to a particular account.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the time entry"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "requestChargeType",
        "data_type": "string",
        "description": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance."
      },
      {
        "name": "ownerId",
        "data_type": "long",
        "description": "ID of the user associated with the time entry"
      },
      {
        "name": "parent show Attributes",
        "data_type": "object",
        "description": "Module to which the time entry is associated."
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of module. Values supported are TICKETS , TASKS , CALLS , and EVENTS"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the module"
      },
      {
        "name": "associatedTicketId",
        "data_type": "long",
        "description": "ID of the ticket associated, if the parent module is TASKS , CALLS or EVENTS"
      },
      {
        "name": "executedTime",
        "data_type": "timestamp",
        "description": "Time when work related to the time entry was started."
      },
      {
        "name": "hoursSpent",
        "data_type": "integer",
        "description": "Number of hours in the time entry."
      },
      {
        "name": "minutesSpent",
        "data_type": "integer",
        "description": "Number of minutes in the time entry."
      },
      {
        "name": "secondsSpent",
        "data_type": "integer",
        "description": "Number of seconds in the time entry."
      },
      {
        "name": "agentCostPerHour",
        "data_type": "double",
        "description": "Per hour cost of an agent."
      },
      {
        "name": "additionalCost",
        "data_type": "double",
        "description": "Additional cost incurred"
      },
      {
        "name": "totalCost",
        "data_type": "double",
        "description": "Total cost incurred"
      },
      {
        "name": "fixedCost",
        "data_type": "double",
        "description": "Fixed cost"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the time entry"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Account Time Entries",
    "Api URL": "/api/v1/accounts/{account_id}/timeEntry",
    "Api Method": "GET",
    "Desc": "This API lists time entries recorded for a ticket or task related to an account.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module from which the time entries must be fetched. Values allowed are tickets and tasks ."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the time entries must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of time entries to fetch"
      },
      {
        "name": "orderBy",
        "data_type": "String optional",
        "description": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC@"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the time entry. Value supported is owner"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : \"10.17\",\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688128\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
  },
  {
    "Api name": "Get summation of Account Time Entries",
    "Api URL": "/api/v1/accounts/{account_id}/timeEntrySummation",
    "Api Method": "GET",
    "Desc": "This API fetches summation of time entries for an account from your help desk",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000031007/timeEntrySummation?module=ticket&billStatus=billed\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Module Preference. It can be either tickets tasks"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department"
      },
      {
        "name": "billStatus",
        "data_type": "String optional",
        "description": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
      }
    ],
    "Response Example": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
  },
  {
    "Api name": "Ticket Timer",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket timer is a feature that records the time an agent spends on resolving a ticket.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "hours",
        "data_type": "integer",
        "description": "No. of hours spent"
      },
      {
        "name": "minutes",
        "data_type": "integer",
        "description": "No. of minutes spent"
      },
      {
        "name": "seconds",
        "data_type": "integer",
        "description": "No. of seconds spent"
      },
      {
        "name": "state",
        "data_type": "integer",
        "description": "State of the timer. States can be RUNNING , PAUSED , INIT"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Ticket Timer",
    "Api URL": "/api/v1/tickets/{ticket_id}/timer",
    "Api Method": "GET",
    "Desc": "This API fetches the time elapsed in the ticket timer, along with the current state",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/tickets/13000000021183/timer\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"hours\" : 0,\n  \"seconds\" : 26,\n  \"minutes\" : 5,\n  \"state\" : \"RUNNING\"\n}"
  },
  {
    "Api name": "Performs Ticket Timer actions",
    "Api URL": "/api/v1/tickets/{ticket_id}/timer",
    "Api Method": "POST",
    "Desc": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttp://desk.zoho.com/api/v1/tickets/13000000021183/timer?action=START\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "action",
        "data_type": "String required",
        "description": "Action of the timer.Supported actions are START , STOP , PAUSE and RESUME"
      }
    ],
    "Response Example": "{\n  \"hours\" : 0,\n  \"seconds\" : 0,\n  \"minutes\" : 0,\n  \"state\" : \"RUNNING\"\n}"
  },
  {
    "Api name": "Task Timer",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Task timer is the feature that records the time an agent spends on completing a task.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "hours",
        "data_type": "integer",
        "description": "No. of hours spent"
      },
      {
        "name": "minutes",
        "data_type": "integer",
        "description": "No. of minutes spent"
      },
      {
        "name": "seconds",
        "data_type": "integer",
        "description": "No. of seconds spent"
      },
      {
        "name": "state",
        "data_type": "integer",
        "description": "State of the timer. States can be RUNNING , PAUSED , INIT"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Task Timer",
    "Api URL": "/api/v1/tasks/{task_id}/timer",
    "Api Method": "GET",
    "Desc": "This API fetches the time elapsed in the task timer, along with the current state",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/tasks/13000000021183/timer\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"hours\" : 0,\n  \"seconds\" : 26,\n  \"minutes\" : 5,\n  \"state\" : \"RUNNING\"\n}"
  },
  {
    "Api name": "Performs Task Timer actions",
    "Api URL": "/api/v1/tasks/{task_id}/timer",
    "Api Method": "POST",
    "Desc": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttp://desk.zoho.com/api/v1/tasks/13000000075019/timer?action=START\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "action",
        "data_type": "String required",
        "description": "Action of the timer.Supported actions are START , STOP , PAUSE and RESUME"
      }
    ],
    "Response Example": "{\n  \"hours\" : 0,\n  \"seconds\" : 0,\n  \"minutes\" : 0,\n  \"state\" : \"RUNNING\"\n}"
  },
  {
    "Api name": "Active Timer",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Active timer will fetch currently active [either running (or) paused] timer(s) details",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get Active Timer for an Agent",
    "Api URL": "/api/v1/myActiveTimers",
    "Api Method": "GET",
    "Desc": "This API fetches currently running timer details for an agent",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/myActiveTimers?departmentId=7000000022910?from=0&limit=10\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "Department to which the ticket belongs"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "limit"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "from"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 30,\n      \"minutes\" : 6,\n      \"state\" : \"RUNNING\"\n    },\n    \"task\" : {\n      \"subject\" : \"Bug Fix #120\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016001\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Tasks\"\n  }, {\n    \"call\" : {\n      \"subject\" : \"Firt Call\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016002\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 37,\n      \"minutes\" : 7,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Calls\"\n  }, {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 59,\n      \"minutes\" : 7,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016007\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"event\" : {\n      \"subject\" : \"First Event\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016003\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"entity\" : \"Events\"\n  }, {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 4,\n      \"minutes\" : 8,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Tickets\"\n  } ]\n}"
  },
  {
    "Api name": "List active timers",
    "Api URL": "/api/v1/allActiveTimers",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of currently active timers in a department, based on the limit specified.",
    "OAuth Scope": "Desk.tickets.READ, Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ, Desk.activities.tasks.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/allActiveTimers?departmentId=75485000000569047?startTime=0&limit=20&sortBy=-startTime&module=Tickets,Tasks,Events,Calls&owners=75485000000418459,75485000000182033\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the timers must be fetched"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "Zoho Desk modules from which the timers must be fetched. Values allowed are: Tickets, Tasks, Events, and Calls. You can pass multiple values by separating them using commas. If you do not pass a value, all modules are considered."
      },
      {
        "name": "startTime",
        "data_type": "long optional",
        "description": "Point of time before or after which the timers were started. This parameter works in conjunction with the sortBy parameter. If the value of sortBy is startTime, the timers are listed in ascending order. If the value of sortBy is -startTime, they are listed in descending order. (Note: With startTime in play, the time value associated with the last timer in an API response is considered as the value from which the next set of timers must be fetched in the subsequent response.)"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of timers to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the timers from oldest to latest (ascending order) or latest to oldest (descending order). Values allowed are: startTime (ascending order) and -startTime (descending order, which is the default sorting order)."
      },
      {
        "name": "owners",
        "data_type": "long optional",
        "description": "Key that filters timers by Owner. Values allowed are any valid Owner ID or multiple Owner IDs separated by commas."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/75485000000418459/photo?orgId=60708463\",\n      \"name\" : \"McKinson George\",\n      \"id\" : \"75485000000418459\"\n    },\n    \"timer\" : {\n      \"hours\" : \"137\",\n      \"seconds\" : \"38\",\n      \"minutes\" : \"17\",\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"401\",\n      \"subject\" : \"Ticket for timer by another agent\",\n      \"dueDate\" : null,\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000001513021\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Open\"\n    },\n    \"startTime\" : \"1626290803841\",\n    \"entity\" : \"Tickets\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/75485000000182033/photo?orgId=60708463\",\n      \"name\" : \"Carol Lucas\",\n      \"id\" : \"75485000000182033\"\n    },\n    \"timer\" : {\n      \"hours\" : \"192\",\n      \"seconds\" : \"23\",\n      \"minutes\" : \"38\",\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"673\",\n      \"subject\" : \"Ticket for timer\",\n      \"dueDate\" : null,\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000002473027\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Open\"\n    },\n    \"startTime\" : \"1626150959474\",\n    \"entity\" : \"Tickets\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/75485000000182033/photo?orgId=60708463\",\n      \"name\" : \"Carol Lucas\",\n      \"id\" : \"75485000000182033\"\n    },\n    \"timer\" : {\n      \"hours\" : \"216\",\n      \"seconds\" : \"10\",\n      \"minutes\" : \"47\",\n      \"state\" : \"RUNNING\"\n    },\n    \"task\" : {\n      \"subject\" : \"Task with ticket for timer\",\n      \"dueDate\" : \"2021-07-14T06:30:00.000Z\",\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000002466025\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Not Started\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"672\",\n      \"subject\" : \"checking active timer\",\n      \"dueDate\" : \"2021-07-14T06:30:00.000Z\",\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000002459023\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Open\"\n    },\n    \"startTime\" : \"1626064031778\",\n    \"entity\" : \"Tasks\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/75485000000182033/photo?orgId=60708463\",\n      \"name\" : \"Carol Lucas\",\n      \"id\" : \"75485000000182033\"\n    },\n    \"timer\" : {\n      \"hours\" : \"226\",\n      \"seconds\" : \"21\",\n      \"minutes\" : \"21\",\n      \"state\" : \"RUNNING\"\n    },\n    \"startTime\" : \"1626029581045\",\n    \"event\" : {\n      \"subject\" : \"Event without ticket \",\n      \"dueDate\" : null,\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000002463059\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Not Started\"\n    },\n    \"entity\" : \"Events\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/75485000000182033/photo?orgId=60708463\",\n      \"name\" : \"Carol Lucas\",\n      \"id\" : \"75485000000182033\"\n    },\n    \"timer\" : {\n      \"hours\" : \"274\",\n      \"seconds\" : \"42\",\n      \"minutes\" : \"26\",\n      \"state\" : \"RUNNING\"\n    },\n    \"task\" : {\n      \"subject\" : \"Task without ticket\",\n      \"dueDate\" : null,\n      \"depId\" : \"75485000000569047\",\n      \"id\" : \"75485000000572019\",\n      \"depName\" : \"TestDept\",\n      \"status\" : \"Not Started\"\n    },\n    \"startTime\" : \"1625856459759\",\n    \"entity\" : \"Tasks\"\n  } ]\n}"
  },
  {
    "Api name": "List ticket timers",
    "Api URL": "/api/v1/tickets/{ticket_id}/activeTimer",
    "Api Method": "GET",
    "Desc": "This API fetches the details of timers currently active in a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/tickets/13000000021183/activeTimer?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the timers must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of timers to fetch"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the timers. Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Jones\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Sam Jones\",\n      \"id\" : \"7000000020001\"\n    },\n    \"timer\" : {\n      \"hours\" : 93,\n      \"seconds\" : 9,\n      \"minutes\" : 6,\n      \"state\" : \"Running\"\n    },\n    \"userId\" : \"7000000020001\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"Downey\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Robert Downey\",\n      \"id\" : \"7000000030001\"\n    },\n    \"timer\" : {\n      \"hours\" : 19,\n      \"seconds\" : 24,\n      \"minutes\" : 9,\n      \"state\" : \"Paused\"\n    },\n    \"userId\" : \"7000000030001\"\n  } ]\n}"
  },
  {
    "Api name": "List task timers",
    "Api URL": "/api/v1/tasks/{task_id}/activeTimer",
    "Api Method": "GET",
    "Desc": "This API fetches the details of timers currently active in a task.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttp://desk.zoho.com/api/v1/tasks/13000000021183/activeTimer?include=owner\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the timers must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of timers to fetch"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the timers. Value supported is owner ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Jones\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Sam Jones\",\n      \"id\" : \"7000000020001\"\n    },\n    \"timer\" : {\n      \"hours\" : 93,\n      \"seconds\" : 9,\n      \"minutes\" : 6,\n      \"state\" : \"Running\"\n    },\n    \"userId\" : \"7000000020001\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"Downey\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Robert Downey\",\n      \"id\" : \"7000000030001\"\n    },\n    \"timer\" : {\n      \"hours\" : 19,\n      \"seconds\" : 24,\n      \"minutes\" : 9,\n      \"state\" : \"Paused\"\n    },\n    \"userId\" : \"7000000030001\"\n  } ]\n}"
  },
  {
    "Api name": "Ticket Tags",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket tags refer to the keywords added to tickets to ensure quick grouping, filtering, and reference.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Search tags",
    "Api URL": "api/v1/tags/search",
    "Api Method": "GET",
    "Desc": "This API searches for tags added in your help desk portal.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tags/search\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which the tags must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-100",
        "description": "Number of tags to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the tags must be fetched."
      },
      {
        "name": "searchVal",
        "data_type": "String optional",
        "description": "Search keyword related to the tag."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  }, {\n    \"name\" : \"sample\",\n    \"tagType\" : \"SYSTEM\",\n    \"id\" : 123234324\n  } ]\n}"
  },
  {
    "Api name": "List ticket tags",
    "Api URL": "api/v1/ticketTags",
    "Api Method": "GET",
    "Desc": "This API lists the ticket tags added in your help desk portal.�",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketTags\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the tags must be fetched"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts tags by a specific attribute: createdTime or count. The default sorting order is descending."
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which the tags must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-100",
        "description": "Number of tags to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketCount\" : \"10\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  }, {\n    \"ticketCount\" : \"0\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  } ]\n}"
  },
  {
    "Api name": "List tickets by tag",
    "Api URL": "api/v1/tags/{tag_id}/tickets",
    "Api Method": "GET",
    "Desc": "This API lists tickets containing the tag specified.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tags/1892000001010007/tickets?include=assignee,contacts,departments,team,isRead\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "Index number, starting from which tickets must be fetched."
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-100",
        "description": "Number of tickets to list"
      },
      {
        "name": "assignee",
        "data_type": "string optional, max chars : 100",
        "description": "User assigned to resolve the ticket. Values allowed are Unassigned or a valid assigneeId . You can pass multiple assigneeIds as comma-separated values."
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 100",
        "description": "Channel through which the tickets were received. You can pass multiple values by separating them with commas."
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Resolution status of the tickets. You can pass multiple values by separating them with commas."
      },
      {
        "name": "receivedInDays",
        "data_type": "integer optional",
        "description": "Number of days since the tickets were received. Values allowed are 15 , 30 , 90 ."
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 100",
        "description": "Priority of the tickets. You can pass multiple values by separating them with commas."
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the tickets by a specific attribute: dueDate , recentThread , createdTime , or ticketNumber . The default sorting order is ascending. A - prefix denotes a descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the tickets. Values allowed are: contacts , products , departments , team , isRead and assignee . You can pass multiple values by separating them with commas."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : true,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8838109870\",\n      \"id\" : \"1892000000042032\",\n      \"isSpam\" : false,\n      \"type\" : \"paid\",\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"accountId\" : \"189200000005345\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"169\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Facebook\",\n    \"isRead\" : true,\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Richard\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8838109870\",\n      \"id\" : \"1892000000093203\",\n      \"isSpam\" : false,\n      \"type\" : \"paid\",\n      \"email\" : \"richard@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:34:53.000Z\",\n    \"id\" : \"1892000000093205\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2014-03-11T07:51:29.618Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000093203\",\n    \"threadCount\" : \"43\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/8920000000069071/logo?orgId=11278831\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  } ]\n}"
  },
  {
    "Api name": "Associate Tag",
    "Api URL": "/api/v1/tickets/{ticket_id}/associateTag",
    "Api Method": "POST",
    "Desc": "This API adds a single tag or multiple tags to a ticket.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/associateTag\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "tags",
        "data_type": "list required",
        "description": "Names of the tags"
      }
    ],
    "Response Example": "-d'{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}'"
  },
  {
    "Api name": "Dissociate Tag",
    "Api URL": "/api/v1/tickets/{ticket_id}/dissociateTag",
    "Api Method": "POST",
    "Desc": "This API removes a single tag or multiple tags from a ticket.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/dissociateTag\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "tags",
        "data_type": "list required",
        "description": "Names of the tags"
      }
    ],
    "Response Example": "-d'{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}'"
  },
  {
    "Api name": "List tags in a ticket",
    "Api URL": "api/v1/tickets/{ticket_id}/tags",
    "Api Method": "GET",
    "Desc": "This API lists tags associated with a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/tags\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"tags\" : [ {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  }, {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  } ]\n}"
  },
  {
    "Api name": "List recent tags",
    "Api URL": "api/v1/recentTicketTags",
    "Api Method": "GET",
    "Desc": "This API lists the five most recent tags associated with tickets.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/recentTicketTags\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department from which the tags must be fetched"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketCount\" : \"10\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  }, {\n    \"ticketCount\" : \"0\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  } ]\n}"
  },
  {
    "Api name": "Update recent tags",
    "Api URL": "/api/v1/recentTicketTags/{tag_id}",
    "Api Method": "POST",
    "Desc": "This API adds a tag to the list of recently viewed tags. tag_id is a mandatory parameter in the API request.",
    "OAuth Scope": "Desk.tickets.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/recentTicketTags/42312412421\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Replace the specified tags",
    "Api URL": "/api/v1/tags/{tag_id}/replace",
    "Api Method": "PATCH",
    "Desc": "This API replaces a tag to the specified tag. tag_id is a mandatory parameter in the API request.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tags/12312312312/replace\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"id\" : \"12312312312\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "Tag ID of the Replacing Tag"
      }
    ],
    "Response Example": "-d'{\n  \"id\" : \"12312312312\"\n}'"
  },
  {
    "Api name": "Customer Feedback",
    "Api URL": "",
    "Api Method": "",
    "Desc": "This functionality is used to collect customer feedback for outgoing ticket replies. It is essential to ensure that the feedback feature is enabled for the department associated with the ticket to get feedback on the ticket’s outgoing response.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List all customer feedback",
    "Api URL": "api/v1/customerHappiness",
    "Api Method": "GET",
    "Desc": "Get customer feedback list for a given department. You can also use any one of the sub modules: agentId, contactId, accountId, or ticketId at a time.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/customerHappiness?authtoken=ae075d0de8621f986c07c1fe256e4243&orgId=1234567&department=3000000023770\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "department",
        "data_type": "String required",
        "description": "Mandatory param to fetch the customer-happiness list for a given ID of the department. You can also provide department as allDepartment to fetch customer happiness from all departments"
      },
      {
        "name": "agentId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-happiness list for a particular agent"
      },
      {
        "name": "contactId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-happiness list for a particular contact"
      },
      {
        "name": "accountId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-happiness list for a particular account"
      },
      {
        "name": "ticketId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-happiness list for a particular ticket"
      },
      {
        "name": "startTime",
        "data_type": "Long optional",
        "description": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds"
      },
      {
        "name": "endTime",
        "data_type": "Long optional",
        "description": "Start time till which the customer-happiness list should show. End time should be in GMT time zone and in milliseconds"
      },
      {
        "name": "from",
        "data_type": "int optional",
        "description": "The starting index from which the list should be displayed based on the time of receiving customer feedback"
      },
      {
        "name": "limit",
        "data_type": "int optional, range : 1-50",
        "description": "Number of ratings to be displayed in the list"
      },
      {
        "name": "rating",
        "data_type": "string optional, max chars : 100",
        "description": "Segregate the list based on the type of rating. Allowed values are good , ok , or bad"
      },
      {
        "name": "duration",
        "data_type": "string optional, max chars : 100",
        "description": "Period from which the customer happiness rating must be fetched. Values allowed are: TODAY , THIS_WEEK , LAST_WEEK , THIS_MONTH , LAST_MONTH , LAST_7_DAYS , YESTERDAY , LAST_1_HOUR , CUSTOM_IN_DATE , LAST_100_RATINGS , LAST24HOURS and LAST_30_DAYS"
      },
      {
        "name": "startDate",
        "data_type": "timestamp optional",
        "description": "start date time"
      },
      {
        "name": "endDate",
        "data_type": "timestamp optional",
        "description": "end date time"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sorted by ratedtime"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : contacts , tickets , agents . You can include both by separating them with a comma in the query param."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"agentId\" : \"5000000015959\",\n    \"agent\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000015959/photo\",\n      \"id\" : \"5000000015959\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"118\",\n      \"subject\" : \"GPS not working\",\n      \"id\" : \"5000000074060\"\n    },\n    \"contactId\" : \"5000000017055\",\n    \"departmentId\" : \"5000000056329\",\n    \"rating\" : \"GOOD\",\n    \"threadId\" : \"5000000090001\",\n    \"feedback\" : \"Great Work!!!\",\n    \"accountId\" : \"5000000017043\",\n    \"ratedTime\" : \"2021-12-02T14:36:20.291Z\",\n    \"customerRatedTime\" : \"2021-12-02T09:06:20.291Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Nirmal Kumar\",\n      \"id\" : \"5000000017055\"\n    },\n    \"id\" : \"5000000090012\",\n    \"ticketId\" : \"5000000074060\"\n  }, {\n    \"agentId\" : \"5000000015959\",\n    \"agent\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000015959/photo\",\n      \"id\" : \"5000000015959\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"117\",\n      \"subject\" : \"Apps take time to load\",\n      \"id\" : \"5000000056151\"\n    },\n    \"contactId\" : \"5000000026602\",\n    \"departmentId\" : \"5000000042101\",\n    \"rating\" : \"BAD\",\n    \"threadId\" : \"5000000092045\",\n    \"feedback\" : \"The solution provided doesn't seem to work.\",\n    \"accountId\" : \"-1\",\n    \"ratedTime\" : \"2018-09-26T10:47:35.936Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Phillip Collins\",\n      \"id\" : \"5000000026602\"\n    },\n    \"id\" : \"5000000092056\",\n    \"ticketId\" : \"5000000056151\"\n  }, {\n    \"agentId\" : \"5000000015959\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"114\",\n      \"subject\" : \"zPhone battery needs to be fixed\",\n      \"id\" : \"5000000055051\"\n    },\n    \"contactId\" : \"5000000017055\",\n    \"departmentId\" : \"5000000012860\",\n    \"rating\" : \"OKAY\",\n    \"threadId\" : \"5000000092069\",\n    \"feedback\" : \"The battery performance is better but I expect a little more.\",\n    \"accountId\" : \"5000000017043\",\n    \"ratedTime\" : \"2018-09-26T10:49:16.202Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Sam Rossner\",\n      \"id\" : \"5000000017055\"\n    },\n    \"id\" : \"5000000092084\",\n    \"ticketId\" : \"5000000055051\"\n  } ]\n}"
  },
  {
    "Api name": "Get customer feedback count",
    "Api URL": "api/v1/customerHappiness/count",
    "Api Method": "GET",
    "Desc": "This API gives you the count of the ratings given by the customers for each category of a given department. You can also use any one of the sub modules: agentId, contactId, accountId, or ticketId at a time.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/customerHappiness/count?authtoken=ae075d0de8621f986c07c1fe256e4243&orgId=1234567&department=30000002344\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "department",
        "data_type": "String required",
        "description": "Mandatory param to fetch the customer-happiness list for a given ID of a department. You can also provide department as allDepartment to fetch customer-happiness list from all the departments"
      },
      {
        "name": "agentId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-ratings count for a particular agent"
      },
      {
        "name": "contactId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-ratings count for a particular contact"
      },
      {
        "name": "accountId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-ratings count for a particular account"
      },
      {
        "name": "ticketId",
        "data_type": "Long optional",
        "description": "Filter that returns the customer-ratings count for a particular ticket"
      },
      {
        "name": "startTime",
        "data_type": "Long optional",
        "description": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds"
      },
      {
        "name": "endTime",
        "data_type": "Long optional",
        "description": "Start time till which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds"
      },
      {
        "name": "duration",
        "data_type": "string optional, max chars : 100",
        "description": "Period from which the customer happiness rating must be fetched. Values allowed are: TODAY , THIS_WEEK , LAST_WEEK , THIS_MONTH , LAST_MONTH , LAST_7_DAYS , YESTERDAY , LAST_1_HOUR , CUSTOM_IN_DATE , LAST_100_RATINGS , LAST24HOURS and LAST_30_DAYS"
      },
      {
        "name": "startDate",
        "data_type": "timestamp optional",
        "description": "start date time"
      },
      {
        "name": "endDate",
        "data_type": "timestamp optional",
        "description": "end date time"
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "The from index"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of rating to be displayed"
      }
    ],
    "Response Example": "{\n  \"30000002344\" : {\n    \"bad\" : 3,\n    \"ok\" : 2,\n    \"good\" : 5\n  }\n}"
  },
  {
    "Api name": "Get the customer feedback content",
    "Api URL": "api/v1/customerHappiness/{thread_id}/content",
    "Api Method": "GET",
    "Desc": "This API retrieves the content of specific customer feedback.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/customerHappiness/5000000085253/content\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"content\" : \"I appreciate the help and thanks for the quick response.\"\n}"
  },
  {
    "Api name": "Get the customer feedback placeholder link",
    "Api URL": "api/v1/customerHappinessLinkHolder",
    "Api Method": "GET",
    "Desc": "This API provides an html placeholder to insert the customer feedback link into the reply mail. The link, when clicked by the email recipient, leads them to a feedback form where they can provide their feedback.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/customerHappinessLinkHolder?departmentId=21000000007241\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "Long required",
        "description": "ID of the department for which the placeholder should be collected."
      },
      {
        "name": "languageCode",
        "data_type": "string optional, max chars : 100",
        "description": "Localization languageCode of Customer Happiness page to be displayed"
      }
    ],
    "Response Example": "{\n  \"linkHolder\" : \"<div title=\\\"link:::\\\"></div><a href=\\\"javascript:void(0)\\\">How would you rate our customer service?</a><br/><div  style=\\\"line-height: 16px; cursor: pointer; float: left; color:#666; margin: 15px 10px 10px 0; background: #f5f5f5; border-radius: 50px; font-size: 13px; min-width: 100px; padding: 5px 10px 5px 5px;\\\"><img width=\\\"24\\\" height=\\\"24\\\" align=\\\"left\\\" style=\\\"margin-right:5px;background: transparent\\\" src=\\\"https://static.zohocdn.com/desk/app/images/emo-g.27152b145e7c33304a9b.png\\\" alt=\\\"\\\" ><div style=\\\"float: left; margin-top: 4px;\\\">Good</div> </div><div  style=\\\"line-height: 16px; cursor: pointer; float: left; color:#666; margin: 15px 10px 10px 0; background: #f5f5f5; border-radius: 50px; font-size: 13px; min-width: 100px; padding: 5px 10px 5px 5px;\\\"><img width=\\\"24\\\" height=\\\"24\\\" align=\\\"left\\\" style=\\\"margin-right:5px;background: transparent\\\" src=\\\"https://static.zohocdn.com/desk/app/images/emo-y.2c45cbbe146a58f59ee0.png\\\" alt=\\\"\\\"><div style=\\\"float: left; margin-top: 4px;\\\">Okay</div> </div><div  style=\\\"line-height: 16px; cursor: pointer; float: left; color:#666; margin: 15px 10px 10px 0; background: #f5f5f5; border-radius: 50px; font-size: 13px; min-width: 100px; padding: 5px 10px 5px 5px;\\\"><img width=\\\"24\\\" height=\\\"24\\\" align=\\\"left\\\" style=\\\"margin-right:5px;background: transparent\\\" src=\\\"https://static.zohocdn.com/desk/app/images/emo-r.8d4f8a095a2c3e1be1ab.png\\\" alt=\\\"\\\"><div style=\\\"float: left; margin-top: 4px;\\\">Bad</div> </div><div style=\\\"clear:both\\\"></div><div title=\\\"link:::\\\"></div></div>\"\n}"
  },
  {
    "Api name": "Ticket Templates",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket templates are provisions that automatically populate predefined values in ticket fields, thereby helping users save time and effort while adding new tickets.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the ticket template"
      },
      {
        "name": "ticketTemplateName",
        "data_type": "string",
        "description": "Name of the ticket template"
      },
      {
        "name": "showInCustomerPortal",
        "data_type": "boolean",
        "description": "Key that specifies if the template must be displayed in the help center or not"
      },
      {
        "name": "layoutId",
        "data_type": "long",
        "description": "ID of the ticket layout from which the template is derived"
      },
      {
        "name": "ticketTemplateValues show Attributes",
        "data_type": "list",
        "description": "Values to auto-populate in the different fields in the template"
      },
      {
        "name": "subject",
        "data_type": "string",
        "description": "Subject of the ticket"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long",
        "description": "ID of the department in which the ticket must be created"
      },
      {
        "name": "contactId see documentation",
        "data_type": "referred object",
        "description": "ID of the contact who raised the ticket"
      },
      {
        "name": "accountId see documentation",
        "data_type": "referred object",
        "description": "ID of the account associated with the ticket"
      },
      {
        "name": "productId",
        "data_type": "referred object",
        "description": "ID of the product associated with the ticket"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the contact"
      },
      {
        "name": "phone",
        "data_type": "string",
        "description": "Phone number of the contacto"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "A brief description of the issue raised in the ticket"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Resolution status of the ticket"
      },
      {
        "name": "assigneeId",
        "data_type": "long",
        "description": "ID of the agent assigned to resolve the ticket"
      },
      {
        "name": "teamId",
        "data_type": "long",
        "description": "ID of the team assigned to resolve the ticket"
      },
      {
        "name": "category",
        "data_type": "string",
        "description": "Category of the ticket"
      },
      {
        "name": "subCategory",
        "data_type": "string",
        "description": "Sub-category of the ticket"
      },
      {
        "name": "language",
        "data_type": "string",
        "description": "Language preference to set for the ticket"
      },
      {
        "name": "dueDate",
        "data_type": "timestamp",
        "description": "Date on or before which the ticket must be resolvede"
      },
      {
        "name": "priority",
        "data_type": "string",
        "description": "Priority of the ticket"
      },
      {
        "name": "channel",
        "data_type": "string",
        "description": "Channel through which the ticket was received"
      },
      {
        "name": "classification",
        "data_type": "string",
        "description": "Classification of the ticket"
      },
      {
        "name": "cf show Attributes",
        "data_type": "list",
        "description": "Custom fields related to the ticket"
      },
      {
        "name": "secondaryContacts see documentation show Attributes",
        "data_type": "list",
        "description": "Secondary Contacts associated with ticket"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create ticket template",
    "Api URL": "api/v1/ticketTemplates",
    "Api Method": "POST",
    "Desc": "This API helps create a ticket template in your help desk portal.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/ticketTemplates\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"phone\" : \"9876545645\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  },\n  \"layoutId\" : \"4000000020012\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ticketTemplateName",
        "data_type": "string required, max chars : 200",
        "description": "Name of the ticket template"
      },
      {
        "name": "showInCustomerPortal",
        "data_type": "boolean optional",
        "description": "Key that specifies if the template must be displayed in the help center or not"
      },
      {
        "name": "ticketTemplateValues",
        "data_type": "list required",
        "description": "Values to auto-populate in the different fields in the template"
      }
    ],
    "Response Example": "-d'{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"phone\" : \"9876545645\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  },\n  \"layoutId\" : \"4000000020012\"\n}'"
  },
  {
    "Api name": "Get ticket template",
    "Api URL": "api/v1/ticketTemplates/{ticketTemplates_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular ticket template.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketTemplates/4000000020001?include=departments,assignee,contacts,team,products\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the template. Values allowed are: contacts , products , departments , team , and assignee . You can pass multiple values by separating them using commas in the API request."
      }
    ],
    "Response Example": "{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"id\" : \"4000000020001\",\n  \"layoutId\" : \"4000000020012\",\n  \"ticketTemplateValues\" : {\n    \"subCategory\" : null,\n    \"product\" : null,\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"productId\" : null,\n    \"contactId\" : null,\n    \"subject\" : null,\n    \"departmentId\" : \"4000000007073\",\n    \"dueDate\" : null,\n    \"channel\" : null,\n    \"description\" : null,\n    \"secondaryContacts\" : [ \"4000000009076\", \"4000000009062\" ],\n    \"priority\" : null,\n    \"classification\" : null,\n    \"assigneeId\" : null,\n    \"accountId\" : null,\n    \"phone\" : \"9876545645\",\n    \"contact\" : null,\n    \"assignee\" : null,\n    \"department\" : {\n      \"name\" : \"testing department\",\n      \"id\" : \"4000000007073\"\n    },\n    \"category\" : null,\n    \"account\" : null,\n    \"email\" : \"jacks@zylker.com\",\n    \"status\" : null\n  }\n}"
  },
  {
    "Api name": "List ticket templates",
    "Api URL": "api/v1/ticketTemplates",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of ticket templates, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketTemplates\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the templates must be fetched"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department from which templates must be fetched"
      },
      {
        "name": "layoutId",
        "data_type": "long optional",
        "description": "ID of the layout from which templated must be fetched for the given department ID"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 10, range : 1-100",
        "description": "Number of templates to list. The default value is 10 and the maximum value supported is 100"
      },
      {
        "name": "showInCustomerPortal",
        "data_type": "boolean optional",
        "description": "Visibility of the templates in the help center"
      },
      {
        "name": "templateName deprecated",
        "data_type": "String optional",
        "description": "Name of the template"
      },
      {
        "name": "searchStr",
        "data_type": "String optional",
        "description": "String to search for ticket templates by ticket template name"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"showInCustomerPortal\" : true,\n    \"ticketTemplateName\" : \"Template1\",\n    \"id\" : \"4000000020001\",\n    \"layoutId\" : \"4000000020121\"\n  }, {\n    \"showInCustomerPortal\" : false,\n    \"ticketTemplateName\" : \"Template2\",\n    \"id\" : \"4000000020063\",\n    \"layoutId\" : \"4000000020431\"\n  } ]\n}"
  },
  {
    "Api name": "Update ticket template",
    "Api URL": "api/v1/ticketTemplates/{ticketTemplates_id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update the details of a particular ticket template.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/ticketTemplates/4000000020001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"showInCustomerPortal\" : false,\n  \"ticketTemplateName\" : \"temptest\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"60\"\n    },\n    \"productId\" : \"4000000009012\",\n    \"subject\" : \"UrgentProblem\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ticketTemplateName",
        "data_type": "string optional, max chars : 200",
        "description": "Name of the ticket template"
      },
      {
        "name": "showInCustomerPortal",
        "data_type": "boolean optional",
        "description": "Key that specifies if the template must be displayed in the help center or not"
      },
      {
        "name": "ticketTemplateValues",
        "data_type": "list optional",
        "description": "Values to auto-populate in the different fields in the template"
      }
    ],
    "Response Example": "-d'{\n  \"showInCustomerPortal\" : false,\n  \"ticketTemplateName\" : \"temptest\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"60\"\n    },\n    \"productId\" : \"4000000009012\",\n    \"subject\" : \"UrgentProblem\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  }\n}'"
  },
  {
    "Api name": "Delete ticket template",
    "Api URL": "api/v1/ticketTemplates/deleteMany",
    "Api Method": "POST",
    "Desc": "This API deletes a ticket template from your help desk portal.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/ticketTemplates/deleteMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array of Entity id to be deleted"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}'"
  },
  {
    "Api name": "Tickets Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket comments are discussions related to a ticket, primarily between agents in your help desk portal. Private comments are visible only to agents, while public comments are displayed on the customer portal.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "The comment content. To mention an agent: zsu[@user:{zuid}]zsu. To mention a team: zsu[@team:{teamID} team_name]zsu. Note: This format can also be used to retrieve agent information."
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Specifies the comment is public or private. Note: This key's value can only be set when adding a comment."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who added the comment."
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time at which the comment was added."
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time at which the comment was last modified."
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who added the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "attachmentIds show Attributes",
        "data_type": "list",
        "description": "List of file attachments included in the comment. Note: For more details on attachments, refer to the Uploads section."
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Specifies the type of the content whether html or plainText . The default value is html."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create ticket comment",
    "Api URL": "api/v1/tickets/{ticket_id}/comments",
    "Api Method": "POST",
    "Desc": "This API allows you to add a comment to a ticket. To mention an agent or team, use the below format:To mention an agent:zsu[@user:{zuid}]zsu.To mention a team:zsu[@team:{teamID} team_name]zsu.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isPublic\" : \"true\",\n  \"attachmentIds\" : [ \"4000000008892\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"zsu[@user:11550965]zsu Please fix this ASAP\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "The comment content. To mention an agent: zsu[@user:{zuid}]zsu. To mention a team: zsu[@team:{teamID} team_name]zsu. Note: This format can also be used to retrieve agent information."
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "Specifies the comment is public or private. Note: This key's value can only be set when adding a comment."
      },
      {
        "name": "attachmentIds",
        "data_type": "list optional",
        "description": "List of file attachments included in the comment. Note: For more details on attachments, refer to the Uploads section."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Specifies the type of the content whether html or plainText . The default value is html."
      }
    ],
    "Response Example": "-d'{\n  \"isPublic\" : \"true\",\n  \"attachmentIds\" : [ \"4000000008892\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"zsu[@user:11550965]zsu Please fix this ASAP\"\n}'"
  },
  {
    "Api name": "Update ticket comment",
    "Api URL": "api/v1/tickets/{ticket_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API modifies an existing comment. To include an@mention, follow this format:zsu[@user:{zuid}]zsu.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"4000000008994\" ],\n  \"content\" : \"Edited comment.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "The comment content. To mention an agent: zsu[@user:{zuid}]zsu. To mention a team: zsu[@team:{teamID} team_name]zsu. Note: This format can also be used to retrieve agent information."
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "Specifies the comment is public or private. Note: This key's value can only be set when adding a comment."
      },
      {
        "name": "attachmentIds",
        "data_type": "list optional",
        "description": "List of file attachments included in the comment. Note: For more details on attachments, refer to the Uploads section."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Specifies the type of the content whether html or plainText . The default value is html."
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"4000000008994\" ],\n  \"content\" : \"Edited comment.\"\n}'"
  },
  {
    "Api name": "Delete ticket comment",
    "Api URL": "api/v1/tickets/{ticket_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a comment.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get ticket comment",
    "Api URL": "api/v1/tickets/{ticket_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a ticket comment from your help desk portal.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments The allowed values are mentions and plainText . In the API request, you can pass mention , plainText , or both by using commas to separate them."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-01-24T14:12:45.000Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:06:58.000Z\",\n  \"isPublic\" : true,\n  \"plainText\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"id\" : \"4000000529001\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"<div>Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing</div>\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"carol@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all ticket comments",
    "Api URL": "api/v1/tickets/{ticket_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a ticket, based on the limit specified.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "Number of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments The allowed values are mentions and plainText . In the API request, you can pass mention , plainText , or both by using commas to separate them."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-01-24T14:12:45.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_edited.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:06:58.000Z\",\n    \"isPublic\" : true,\n    \"plainText\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"id\" : \"4000000529001\",\n    \"contentType\" : \"html\",\n    \"content\" : \"<div>Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing</div>\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"carol@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T14:14:37.000Z\",\n    \"isPublic\" : false,\n    \"plainText\" : \"zsu[@user:55616589]zsu Please fix this ASAP\",\n    \"id\" : \"4000000529007\",\n    \"contentType\" : \"html\",\n    \"content\" : \"<div>zsu[@user:55616589]zsu Please fix this ASAP</div>\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"0\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"carol@zylker.com\",\n      \"zuid\" : \"55616589\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Get a ticket comment history",
    "Api URL": "api/v1/tickets/{ticket_id}/comments/{comment_id}/history",
    "Api Method": "GET",
    "Desc": "This API fetches the history of comments recorded on a ticket, including instances of adding and editing the comments.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/history\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the comment activities must be fetched"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments The allowed values are mentions and plainText . In the API request, you can pass mention , plainText , or both by using commas to separate them."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "Number of comment activities to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"attachments\" : [ \"sample.png\", \"sam.txt\" ],\n    \"commentedTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"isPublic\" : false,\n    \"commenterId\" : 13231241244,\n    \"content\" : \"hello comment\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2000000012629/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"CEO\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"hagdsag@zylker.com\"\n    }\n  }, {\n    \"attachments\" : [ \"sample.png\", \"sam.txt\" ],\n    \"commentedTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"isPublic\" : true,\n    \"commenterId\" : 13231241244,\n    \"content\" : \"hello comment\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2000000012629/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"hagdsag@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Contacts Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contact comments refer to comments recorded on contacts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a contact comment",
    "Api URL": "api/v1/contacts/{contact_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/4000000530041/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contact comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contact comment\"\n}'"
  },
  {
    "Api name": "Update a contact comment",
    "Api URL": "api/v1/contacts/{contact_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing contact comment.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530045\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"second contact comment edit\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"second contact comment edit\"\n}'"
  },
  {
    "Api name": "Delete a contact comment",
    "Api URL": "api/v1/contacts/{contact_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing contact comment.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530037\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get a contact comment",
    "Api URL": "api/v1/contacts/{contact_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a contact comment from the portal.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530043?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:34:56.000Z\",\n  \"id\" : \"4000000530043\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade15tywin@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  }, {\n    \"offSet\" : \"59\",\n    \"departmentId\" : \"3113800000634345\",\n    \"entityNumber\" : \"1342\",\n    \"length\" : \"26\",\n    \"name\" : \"\",\n    \"id\" : \"3113800000143134\",\n    \"type\" : \"TICKET\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all contact comments",
    "Api URL": "api/v1/contacts/{contact_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a contact, based on the limit specified.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000530041/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "sortby can be commentedTime . default order : commentedTime in descending order , prefix - denotes desc"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:35:23.000Z\",\n    \"id\" : \"4000000530045\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"second contact comment\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:34:56.000Z\",\n    \"id\" : \"4000000530043\",\n    \"contentType\" : \"html\",\n    \"content\" : \"First contact comment\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"CEO\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Accounts Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account comments refer to comments made on accounts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create an account comment",
    "Api URL": "api/v1/accounts/{account_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to an account.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First account comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First account comment\"\n}'"
  },
  {
    "Api name": "Update an account comment",
    "Api URL": "api/v1/accounts/{account_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing account comment.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"second account comment edit\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"second account comment edit\"\n}'"
  },
  {
    "Api name": "Delete an account comment",
    "Api URL": "api/v1/accounts/{account_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing account comment.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get an account comment",
    "Api URL": "api/v1/accounts/{account_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches an account comment from the portal.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-01-24T19:46:24.000Z\",\n  \"commentedTime\" : \"2017-01-24T19:45:21.000Z\",\n  \"id\" : \"4000000530047\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade15tywin@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  }, {\n    \"offSet\" : \"59\",\n    \"departmentId\" : \"3113800000634345\",\n    \"entityNumber\" : \"1342\",\n    \"length\" : \"26\",\n    \"name\" : \"\",\n    \"id\" : \"3113800000143134\",\n    \"type\" : \"TICKET\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all account comments",
    "Api URL": "api/v1/accounts/{account_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on an account, based on the limit specified.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "sortby can be commentedTime . default order : commentedTime in descending order , prefix - denotes desc"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:45:55.000Z\",\n    \"id\" : \"4000000530049\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    }, {\n      \"offSet\" : \"59\",\n      \"departmentId\" : \"3113800000634345\",\n      \"length\" : \"26\",\n      \"id\" : \"3113800000143134\",\n      \"type\" : \"TICKET\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T19:46:24.000Z\",\n    \"commentedTime\" : \"2017-01-24T19:45:21.000Z\",\n    \"id\" : \"4000000530047\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    }, {\n      \"offSet\" : \"59\",\n      \"departmentId\" : \"3113800000634345\",\n      \"entityNumber\" : \"1342\",\n      \"length\" : \"26\",\n      \"name\" : \"\",\n      \"id\" : \"3113800000143134\",\n      \"type\" : \"TICKET\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Tasks Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Task comments refer to comments recorded on tasks assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a task comment",
    "Api URL": "api/v1/tasks/{task_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to a task.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/4000000530001/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Task comment.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Task comment.\"\n}'"
  },
  {
    "Api name": "Update a task comment",
    "Api URL": "api/v1/tasks/{task_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing task comment.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"Edit Task comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"Edit Task comment\"\n}'"
  },
  {
    "Api name": "Delete a task comment",
    "Api URL": "api/v1/tasks/{task_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing task comment.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get a task comment",
    "Api URL": "api/v1/tasks/{task_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a task comment from the portal.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530005?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Task Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all task comments",
    "Api URL": "api/v1/tasks/{task_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a task, based on the limit specified.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/4000000530001/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Second Task Comment......\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Task comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Articles Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Article comments refer to comments recorded on help articles in the knowledge base. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu . To retrieve or set enduser mentions, use this code format: zsu[@enduser:{zuid}]zsu . To retrieve or set group mentions use this code format: zsu[@group:{groupid}]zsu . To retrieve or set hashtags, use this code format: zsh[#{HEADER_DATA}]zsh ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Used to check whether the added comment is a Public Comment or a Private Comment"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the Ticket is shown once the comment is converted as Ticket. By default null"
      },
      {
        "name": "ticket show Attributes",
        "data_type": "object",
        "description": "Details of the ticket is shown once the comment is converted as Ticket"
      },
      {
        "name": "ticketNumber",
        "data_type": "long",
        "description": "Serial number of the ticket"
      },
      {
        "name": "ticketId",
        "data_type": "long",
        "description": "ID of the ticket"
      },
      {
        "name": "webUrl",
        "data_type": "string",
        "description": "URL to access the resource"
      },
      {
        "name": "mentions show Attributes",
        "data_type": "object",
        "description": "Mentions Can be of Two Types UserMentions and GroupMention"
      },
      {
        "name": "groups show Attributes",
        "data_type": "list",
        "description": "List of Group Mention objects"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the group"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the Group"
      },
      {
        "name": "offSet",
        "data_type": "long",
        "description": "OffSet of the Group Mention"
      },
      {
        "name": "length",
        "data_type": "long",
        "description": "Length of the Group Mention"
      },
      {
        "name": "logoUrl",
        "data_type": "string",
        "description": "URL of the image file displaying the group's logo"
      },
      {
        "name": "users show Attributes",
        "data_type": "list",
        "description": "List of User Mention objects"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the agent"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the Group"
      },
      {
        "name": "offSet",
        "data_type": "long",
        "description": "OffSet of the Group Mention"
      },
      {
        "name": "length",
        "data_type": "long",
        "description": "Length of the Group Mention"
      },
      {
        "name": "zuid",
        "data_type": "long",
        "description": "Zoho user ID of the agent"
      },
      {
        "name": "webUrl",
        "data_type": "string",
        "description": "URL to the user Contact Page"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL of the image file displaying the agent's photo"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the agent"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the agent"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the agent"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of user. Values supported are AGENT and END_USER ."
      },
      {
        "name": "kbRole",
        "data_type": "string",
        "description": "KB Role as Reviewer."
      },
      {
        "name": "label show Attributes",
        "data_type": "object",
        "description": "User Label JSON Object"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the User Label"
      },
      {
        "name": "logoUrl",
        "data_type": "string",
        "description": "URL of the image file displaying the User Label logo"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the User Label"
      },
      {
        "name": "preferences show Attributes",
        "data_type": "object",
        "description": "Label UI Preferences"
      },
      {
        "name": "shape",
        "data_type": "string",
        "description": "Shape of the User Label"
      },
      {
        "name": "textColor",
        "data_type": "String",
        "description": "Text Color of the User Label"
      },
      {
        "name": "bgColor",
        "data_type": "String",
        "description": "Background Color of the User Label"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a translation comment",
    "Api URL": "api/v1/articles/{article_id}/translations/{locale}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to an article translation.",
    "OAuth Scope": "Desk.articles.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isPublic\" : \"false\",\n  \"attachmentIds\" : [ \"4658200041001\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"<div>Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string required, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format:      AGENT : zsu[@user:{zuid}]zsu , Enduser : zsu[@enduser:{zuid}]zsu , Group : zsu[@group:{groupid}]zsu , HashTag : zsh[#{HEADER_DATA}]zsh ."
      },
      {
        "name": "isPublic",
        "data_type": "boolean required",
        "description": "Visibility of the comment, which can be set only at the time of commenting."
      },
      {
        "name": "contentType",
        "data_type": "string required, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"isPublic\" : \"false\",\n  \"attachmentIds\" : [ \"4658200041001\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"<div>Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\"\n}'"
  },
  {
    "Api name": "Update a translation comment",
    "Api URL": "api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing article translation comment.",
    "OAuth Scope": "Desk.articles.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4658200041003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isPublic\" : true,\n  \"attachmentIds\" : [ \"4658200041001\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"<div>Changed Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format:      AGENT : zsu[@user:{zuid}]zsu , Enduser : zsu[@enduser:{zuid}]zsu , Group : zsu[@group:{groupid}]zsu , HashTag : zsh[#{HEADER_DATA}]zsh ."
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "Visibility of the comment, which can be set only at the time of commenting."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"isPublic\" : true,\n  \"attachmentIds\" : [ \"4658200041001\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"<div>Changed Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\"\n}'"
  },
  {
    "Api name": "Delete a translation comment",
    "Api URL": "api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing article translation comment.",
    "OAuth Scope": "Desk.articles.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4658200041003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get a article translation comment",
    "Api URL": "api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches an article translation comment from the portal.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4658200041003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2022-05-09T13:10:29.000Z\",\n  \"attachments\" : [ {\n    \"previewurl\" : \"https://desk.zoho.com/api/v1/articles/46582000006958052/translations/en/attachments/nmhny14ce774984eb4b15891e1cbe274e612c/content?orgId=57044830\",\n    \"size\" : \"35594\",\n    \"name\" : \"Zoho desk introduction.jpg\",\n    \"id\" : \"4658200041001\",\n    \"href\" : \"https://downloadserver.zoho.com/webdownload?x-service=desk&event-id=b45a36decdceb443ccb4d3445f29c9966de7dee89041ea315318c4f358836a09e07add42e10810f8961c3f92bf853\"\n  } ],\n  \"tickets\" : {\n    \"ticketNumber\" : \"115\",\n    \"isTrashed\" : \"false\",\n    \"webUrl\" : \"https://desk.zoho.com/agent/zohocorp/desk/tickets/details/5000000114001\",\n    \"id\" : \"5000000114001\"\n  },\n  \"hashtags\" : [ {\n    \"offset\" : \"47\",\n    \"length\" : \"33\",\n    \"headerValue\" : \"Introduction\",\n    \"headerId\" : \"Sample_header\"\n  } ],\n  \"commentedTime\" : \"2022-05-09T05:09:00.000Z\",\n  \"commenterName\" : \"Jack\",\n  \"content\" : \"<div>Changed Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\",\n  \"commenterId\" : \"4658200004039\",\n  \"commenter\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Jack\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4658200004039/photo?orgId=292828\",\n    \"webUrl\" : \"https://desk.zoho.com/support/arunice/ShowHomePage.do#setup/users-control/agents/1000000000351\",\n    \"roleName\" : \"CEO\",\n    \"name\" : \"Jack\",\n    \"id\" : \"4658200004039\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#5C6368\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"MVP\",\n      \"id\" : \"5000000081007\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/35531135311?portalId=3153815r1fnf113131rf31n9\"\n    },\n    \"type\" : \"AGENT\",\n    \"email\" : \"Jack@gmail.com\",\n    \"kbRole\" : \"REVIEWER\"\n  },\n  \"mentions\" : {\n    \"groups\" : [ {\n      \"offSet\" : \"260\",\n      \"name\" : \"MVP\",\n      \"length\" : \"28\",\n      \"id\" : \"5000000113025\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/4658200004039?portalId=292828341431fq\"\n    } ],\n    \"users\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Cristiano\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4658200044017/photo?orgId=292828\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#setup/users-control/agents/5000000000347\",\n      \"length\" : \"28\",\n      \"name\" : \"Cristiano\",\n      \"id\" : \"4658200044017\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"ROUNDED\",\n          \"bgColor\" : \"#CE6785\",\n          \"textColor\" : \"#FFFFFF\"\n        },\n        \"name\" : \"Prime user\",\n        \"id\" : \"5000000081001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/35531135311?portalId=3153815r1fnf113131rf31n8\"\n      },\n      \"type\" : \"AGENT\",\n      \"email\" : \"Cristiano@gmail.com\",\n      \"zuid\" : \"695624\",\n      \"kbRole\" : \"REVIEWER\"\n    } ]\n  },\n  \"isPublic\" : true,\n  \"id\" : \"4658200041003\",\n  \"contentType\" : \"html\",\n  \"ticketId\" : \"5000000114001\",\n  \"status\" : \"PUBLISHED\"\n}"
  },
  {
    "Api name": "List all translation comments",
    "Api URL": "api/v1/articles/{article_id}/translations/{locale}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on an article translation, based on the limit specified.",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 1, range : >0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 5, range : 1-10",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort comments by the commentedTime attribute. The default sorting order is ascending. -commentedTime denotes descending order of sorting."
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values ticket"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2022-05-09T13:10:29.000Z\",\n    \"attachments\" : [ {\n      \"previewurl\" : \"https://desk.zoho.com/api/v1/articles/46582000006958052/translations/en/attachments/nmhny14ce774984eb4b15891e1cbe274e612c/content?orgId=57044830\",\n      \"size\" : \"35594\",\n      \"name\" : \"Zoho desk introduction.jpg\",\n      \"id\" : \"4658200041001\",\n      \"href\" : \"https://downloadserver.zoho.com/webdownload?x-service=desk&event-id=b45a36decdceb443ccb4d3445f29c9966de7dee89041ea315318c4f358836a09e07add42e10810f8961c3f92bf853\"\n    } ],\n    \"tickets\" : {\n      \"ticketNumber\" : \"115\",\n      \"isTrashed\" : \"false\",\n      \"webUrl\" : \"https://desk.zoho.com/agent/zohocorp/desk/tickets/details/5000000114001\",\n      \"id\" : \"5000000114001\"\n    },\n    \"hashtags\" : [ {\n      \"offset\" : \"47\",\n      \"length\" : \"33\",\n      \"headerValue\" : \"Introduction\",\n      \"headerId\" : \"Sample_header\"\n    } ],\n    \"commentedTime\" : \"2022-05-09T05:09:00.000Z\",\n    \"commenterName\" : \"Jack\",\n    \"content\" : \"<div>Changed Sample content zsu[@user:695624]zsu&nbsp; zsh[#sample_header:Introduction]zsh&nbsp;</div>\",\n    \"commenterId\" : \"4658200004039\",\n    \"commenter\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Jack\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4658200004039/photo?orgId=292828\",\n      \"webUrl\" : \"https://desk.zoho.com/support/arunice/ShowHomePage.do#setup/users-control/agents/1000000000351\",\n      \"roleName\" : \"CEO\",\n      \"name\" : \"Jack\",\n      \"id\" : \"4658200004039\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#5C6368\",\n          \"textColor\" : \"#FFFFFF\"\n        },\n        \"name\" : \"MVP\",\n        \"id\" : \"5000000081007\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/35531135311?portalId=3153815r1fnf113131rf31n9\"\n      },\n      \"type\" : \"AGENT\",\n      \"email\" : \"Jack@gmail.com\",\n      \"kbRole\" : \"REVIEWER\"\n    },\n    \"mentions\" : {\n      \"groups\" : [ {\n        \"offSet\" : \"260\",\n        \"name\" : \"MVP\",\n        \"length\" : \"28\",\n        \"id\" : \"5000000113025\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/4658200004039?portalId=292828341431fq\"\n      } ],\n      \"users\" : [ {\n        \"firstName\" : \"\",\n        \"lastName\" : \"Cristiano\",\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4658200044017/photo?orgId=292828\",\n        \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#setup/users-control/agents/5000000000347\",\n        \"length\" : \"28\",\n        \"name\" : \"Cristiano\",\n        \"id\" : \"4658200044017\",\n        \"label\" : {\n          \"preferences\" : {\n            \"shape\" : \"ROUNDED\",\n            \"bgColor\" : \"#CE6785\",\n            \"textColor\" : \"#FFFFFF\"\n          },\n          \"name\" : \"Prime user\",\n          \"id\" : \"5000000081001\",\n          \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/35531135311?portalId=3153815r1fnf113131rf31n8\"\n        },\n        \"type\" : \"AGENT\",\n        \"email\" : \"Cristiano@gmail.com\",\n        \"zuid\" : \"695624\",\n        \"kbRole\" : \"REVIEWER\"\n      } ]\n    },\n    \"isPublic\" : true,\n    \"id\" : \"4658200041003\",\n    \"contentType\" : \"html\",\n    \"ticketId\" : \"5000000114001\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
  },
  {
    "Api name": "Contracts Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contract comments refer to comments recorded on SLA contracts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a contract comment",
    "Api URL": "api/v1/contracts/{contract_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to a contract.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contracts/4000000230035/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contract comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contract comment\"\n}'"
  },
  {
    "Api name": "Update a contract comment",
    "Api URL": "api/v1/contracts/{contract_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing contract comment.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"second contract comment edit\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"second contract comment edit\"\n}'"
  },
  {
    "Api name": "Delete a contract comment",
    "Api URL": "api/v1/contracts/{contract_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing contract comment.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get a contract comment",
    "Api URL": "api/v1/contracts/{contract_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a contract comment from the portal.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-01-24T19:50:40.000Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T19:50:08.000Z\",\n  \"id\" : \"4000000530053\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"second contract comment edit\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"PortalUser\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all contract comment",
    "Api URL": "api/v1/contracts/{contract_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a contract, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contracts/4000000230035/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "sortby can be commentedTime . default order : commentedTime in descending order , prefix - denotes desc"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-01-24T19:50:40.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_edited.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T19:50:08.000Z\",\n    \"id\" : \"4000000530053\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"second contract comment edit\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:49:34.000Z\",\n    \"id\" : \"4000000530051\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"First contract comment\",\n    \"mention\" : [ ]\n  } ]\n}"
  },
  {
    "Api name": "Uploads",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Uploads are temporary file attachments that exist with a ticket for a period of 24 hours.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Upload file",
    "Api URL": "/api/v1/uploads",
    "Api Method": "POST",
    "Desc": "This API uploads a file.Note:This API call generates a unique ID only that can be associated with a single parent entity.Refer to additional information regarding,bulk upload in custom functions.",
    "OAuth Scope": "Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/uploads\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to attach"
      }
    ],
    "Response Example": "{\n  \"size\" : \"4769\",\n  \"creatorId\" : \"4000000008692\",\n  \"name\" : \"zoho.jpeg\",\n  \"createdTime\" : \"2016-06-23T07:31:42.000Z\",\n  \"isPublic\" : false,\n  \"id\" : \"4000000055001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/uploads/1892000001008043/contents\"\n}"
  },
  {
    "Api name": "Ticket Attachments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket attachments are files you attach to a ticket to aid quick resolution.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List ticket attachments",
    "Api URL": "/api/v1/tickets/{ticket_id}/attachments",
    "Api Method": "GET",
    "Desc": "This API lists the files attached to a ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1892000001004024/attachments?include=creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the attachments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of attachments to fetch"
      },
      {
        "name": "isPublic",
        "data_type": "Boolean optional",
        "description": "Key that returns if the attachment is public or no"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the attachments. Value allowed is creator , which returns the details of users who added the attachments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"issues.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"guidelines.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042001\",\n    \"name\" : \"CreditHistory.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042001\",\n    \"name\" : \"values.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
  },
  {
    "Api name": "Create Ticket attachment",
    "Api URL": "/api/v1/tickets/{ticket_id}/attachments",
    "Api Method": "POST",
    "Desc": "This API attaches a file to a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1892000001004024/attachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isPublic",
        "data_type": "Boolean optional",
        "description": "Field that determines whether the attachment is public or private"
      },
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to attach to the ticket"
      }
    ],
    "Response Example": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042001\",\n  \"name\" : \"issues.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001/content\"\n}"
  },
  {
    "Api name": "Update Ticket attachment",
    "Api URL": "/api/v1/tickets/{ticket_id}/attachments/{attachment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing attachment.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk .zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isPublic\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "Whether to Show"
      }
    ],
    "Response Example": "-d'{\n  \"isPublic\" : true\n}'"
  },
  {
    "Api name": "Delete Ticket attachment",
    "Api URL": "/api/v1/tickets/{ticket_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an attachment from a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Contacts Attachments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contact attachments are files you attach to a contact to provide more context and reference information to other users.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Contact Attachments",
    "Api URL": "/api/v1/contacts/{contact_id}/attachments",
    "Api Method": "GET",
    "Desc": "This API lists the files attached to a contact.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/1892000001004024/attachments?include=creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the attachments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of attachments to fetch"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the attachments. Value allowed is creator , which returns the details of users who added the attachments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"creation.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.jpg\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"contact_MobileNo.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"contact_profile.jpg\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
  },
  {
    "Api name": "Create Contact Attachment",
    "Api URL": "/api/v1/contacts/{contact_id}/attachments",
    "Api Method": "POST",
    "Desc": "This API attaches a file to a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/1892000001004024/attachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to attach to the contact"
      }
    ],
    "Response Example": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"profile.jpg\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001010001/content\"\n}"
  },
  {
    "Api name": "Delete Contact attachment",
    "Api URL": "/api/v1/contacts/{contact_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API removes an attachment from a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Accounts Attachments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account attachments are files you attach to an account to provide more context and reference information to other users.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Account attachments",
    "Api URL": "/api/v1/accounts/{account_id}/attachments",
    "Api Method": "GET",
    "Desc": "This API lists the files attached to an account.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/1892000001004024/attachments?include=creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the attachments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of attachments to fetch"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the attachments. Value allowed is creator , which returns the details of users who added the attachments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile_photo.jpg\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"logo.jpg\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
  },
  {
    "Api name": "Create Account attachment",
    "Api URL": "/api/v1/accounts/{account_id}/attachments",
    "Api Method": "POST",
    "Desc": "This API attaches a file to an account.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/1892000001004024/attachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to attach to the account"
      }
    ],
    "Response Example": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"AccountDetails.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001010001/content\"\n}"
  },
  {
    "Api name": "Delete Account attachment",
    "Api URL": "/api/v1/accounts/{account_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an attachment from a account.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Contact Deduplication",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Deduplication refers to identifying multiple resources containing the same information and consolidating them into a single, unique resource. The process of deduplicating multiple entries of the same contact is called contact deduplication.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List duplicate contacts",
    "Api URL": "/api/v1/groupContactDuplicateValues",
    "Api Method": "GET",
    "Desc": "This API lists the duplicate entries of a contact.ThefieldNameparameters is mandatory in the API requestNote:If you encounter a 202 status code while executing this API request, it means there are 100,000 or more contacts in the help desk portal. Matching the records and finding duplicates will be time-consuming in such a scenario. Therefore, the deduplication request will be accepted, and after the process is completed, an automated report will be sent to the user who initiated the deduplication.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groupContactDuplicateValues\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the field whose values must be matched for deduplication.Values allowed are: firstName, lastName, email, secondaryEmail, phone, fullName, and bothEmail."
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number starting from which the contacts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of contacts to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the contacts by a specific attribute: count or fieldValue . The default sorting order is ascending. A - prefix denotes descending order of sorting"
      },
      {
        "name": "swFieldValue",
        "data_type": "string optional, max chars : 100",
        "description": "Key that specifies the letter with which the field values must start"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"count\" : 16,\n    \"fieldValue\" : \"Jade\"\n  }, {\n    \"count\" : 2,\n    \"fieldValue\" : \"saran\"\n  } ]\n}"
  },
  {
    "Api name": "List details of duplicate contacts",
    "Api URL": "/api/v1/groupContacts",
    "Api Method": "GET",
    "Desc": "This API lists all the details of duplicate contacts.ThefieldNameandfieldValuesparameters are mandatory in the API request",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groupContacts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 100",
        "description": "Name of the field whose values must be matched for deduplication. Values allowed are: firstName, lastName, email, secondaryEmail, phone, fullName, and bothEmail."
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the contacts by a specific attribute: firstName, lastName, fullName, phone, email, account, createdTime, modifiedTime"
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number starting from which the contacts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of contacts to fetch"
      },
      {
        "name": "fieldValues",
        "data_type": "string required, max chars : 10000",
        "description": "Actual values in each field related to the contact"
      },
      {
        "name": "include see documentation",
        "data_type": "list optional",
        "description": "Secondary information related to the contact. Value allowed is: accounts"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"fieldValue\" : \"Jade\",\n    \"contacts\" : [ {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000091433\",\n      \"firstName\" : \"Jonathan\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n      \"phone\" : \"555555\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : null,\n      \"id\" : \"1892000000772003\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"0\",\n        \"okPercentage\" : \"0\",\n        \"goodPercentage\" : \"0\"\n      },\n      \"email\" : \"case@zylker.com\"\n    }, {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000052077\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : null,\n      \"phone\" : null,\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : {\n        \"id\" : \"1892000000772030\",\n        \"type\" : \"contacts_leads\"\n      },\n      \"id\" : \"1892000000772001\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"22\",\n        \"okPercentage\" : \"31\",\n        \"goodPercentage\" : \"47\"\n      },\n      \"email\" : \"jade@zylker.com\"\n    } ]\n  }, {\n    \"fieldValue\" : \"Christ\",\n    \"contacts\" : [ {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000091433\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n      \"phone\" : \"555555\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : null,\n      \"id\" : \"1892000000772003\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"0\",\n        \"okPercentage\" : \"0\",\n        \"goodPercentage\" : \"0\"\n      },\n      \"email\" : \"case@zylker.com\"\n    }, {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000052077\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : null,\n      \"phone\" : null,\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : {\n        \"id\" : \"1892000000772030\",\n        \"type\" : \"contacts_leads\"\n      },\n      \"id\" : \"1892000000772001\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"22\",\n        \"okPercentage\" : \"31\",\n        \"goodPercentage\" : \"47\"\n      },\n      \"email\" : \"jade@zylker.com\"\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "Get name of default field",
    "Api URL": "/api/v1/contactsDeduplication/defaultFieldName",
    "Api Method": "GET",
    "Desc": "This API fetches the name of the field set as the default field for contact deduplication.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contactsDeduplication/defaultFieldName\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"fieldName\" : \"email\"\n}"
  },
  {
    "Api name": "Set default field for contact deduplication",
    "Api URL": "/api/v1/contactsDeduplication/defaultFieldName",
    "Api Method": "POST",
    "Desc": "This API sets the field you specify as the default field for deduplicating contacts.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contactsDeduplication/defaultFieldName\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"email\",\n  \"markDefault\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 100",
        "description": "The name of the field"
      },
      {
        "name": "markDefault",
        "data_type": "boolean required",
        "description": "to mark the given field as default or remove the field from the default."
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"email\",\n  \"markDefault\" : true\n}'"
  },
  {
    "Api name": "Account Deduplication",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The process of deduplicating multiple entries of the same account is called account deduplication",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List duplicate accounts",
    "Api URL": "/api/v1/groupAccountDuplicateValues",
    "Api Method": "GET",
    "Desc": "This API lists the duplicate entries of an account.ThefieldNameparameters is mandatory in the API requestNote:If you encounter a 202 status code while executing this API request, it means there are 100,000 or more accounts in the help desk portal. Matching the records and finding duplicates will be time-consuming in such a scenario. Therefore, the deduplication request will be accepted, and after the process is completed, an automated report will be sent to the user who initiated the deduplication.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groupAccountDuplicateValues\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the field whose values must be matched for deduplication.Values allowed are: email, phone, and accountName"
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number starting from which the accounts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of accounts to fetch"
      },
      {
        "name": "swFieldValue",
        "data_type": "string optional, max chars : 100",
        "description": "Key that specifies the letter with which the field values must start"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the accounts by a specific attribute: count or fieldValue . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"count\" : 16,\n    \"fieldValue\" : \"Admin Account\"\n  }, {\n    \"count\" : 2,\n    \"fieldValue\" : \"Agent Account\"\n  } ]\n}"
  },
  {
    "Api name": "List details of duplicate accounts",
    "Api URL": "/api/v1/groupAccounts",
    "Api Method": "GET",
    "Desc": "This API lists all the details of duplicate accounts.ThefieldNameandfieldValuesparameters are mandatory in the API request",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/groupAccounts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 100",
        "description": "Name of the field whose values must be matched for deduplication.Values allowed are: email, phone, and accountName"
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number starting from which the accounts must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of accounts to fetch"
      },
      {
        "name": "fieldValues",
        "data_type": "string required, max chars : 10000",
        "description": "Actual values in each field related to the account"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the accounts by a specific attribute: accountName or createdTime or modifiedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"accounts\" : [ {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Admin Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : null,\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"admin@zylker.com\"\n    }, {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Admin Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : null,\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"admin@zylker.com\"\n    } ],\n    \"fieldValue\" : \"Admin Account\"\n  }, {\n    \"accounts\" : [ {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Agent Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : {\n        \"id\" : \"32754000000537001\"\n      },\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"agent@zylker.com\"\n    }, {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Agent Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : {\n        \"id\" : \"32754000000537001\"\n      },\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"agent@zylker.com\"\n    } ],\n    \"fieldValue\" : \"Agent Account\"\n  } ]\n}"
  },
  {
    "Api name": "Get Default Field Name",
    "Api URL": "/api/v1/accountsDeduplication/defaultFieldName",
    "Api Method": "GET",
    "Desc": "This API fetches the name of the field set as the default field for account deduplication.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accountsDeduplication/defaultFieldName\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"fieldName\" : \"email\"\n}"
  },
  {
    "Api name": "Set default field for account deduplication",
    "Api URL": "/api/v1/accountsDeduplication/defaultFieldName",
    "Api Method": "POST",
    "Desc": "This API sets the field you specify as the default field for deduplicating accounts.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accountsDeduplication/defaultFieldName\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"accountName\",\n  \"markDefault\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 100",
        "description": "The name of the field"
      },
      {
        "name": "markDefault",
        "data_type": "boolean required",
        "description": "to mark the given field as default or remove the field from the default."
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"accountName\",\n  \"markDefault\" : true\n}'"
  },
  {
    "Api name": "Entity Followers",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Followers API will be following the entity like articles, kbCategory and notify the followers on any updates",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last Name of the user"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "DisplayName of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      },
      {
        "name": "webURL",
        "data_type": "string",
        "description": "URL to access the agent details."
      },
      {
        "name": "userType",
        "data_type": "string",
        "description": "Type of the user followed the entity (Agents | Endusers)"
      },
      {
        "name": "moduleAPIName",
        "data_type": "string",
        "description": "moduleAPIName refers to API name of modules in Desk. allowedValues are ( articleTranslations , kbRootCategories , kbSections )"
      },
      {
        "name": "entityId",
        "data_type": "long",
        "description": "Unique Id for the specified entity as moduleAPIName"
      },
      {
        "name": "label show Attributes",
        "data_type": "object",
        "description": "Label details of the user"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the User Label"
      },
      {
        "name": "logoUrl",
        "data_type": "string",
        "description": "URL of the image file displaying the User Label logo"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the User Label"
      },
      {
        "name": "preferences show Attributes",
        "data_type": "object",
        "description": "Label UI Preferences"
      },
      {
        "name": "shape",
        "data_type": "string",
        "description": "Shape of the User Label"
      },
      {
        "name": "textColor",
        "data_type": "String",
        "description": "Text Color of the User Label"
      },
      {
        "name": "bgColor",
        "data_type": "String",
        "description": "Background Color of the User Label"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Entity followers count",
    "Api URL": "/api/v1/{moduleAPIName}/{entityId}/followersCount",
    "Api Method": "GET",
    "Desc": "This API fetches the count of follower list based on given filter",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleTranslations/4000000190069/followersCountuserType=END_USER\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userType",
        "data_type": "String optional",
        "description": "To get the followers count based on userType allowed values AGENTS , END_USERS ,      default value : all users will be processed"
      }
    ],
    "Response Example": "{\n  \"count\" : 289\n}"
  },
  {
    "Api name": "Get Entity followers details",
    "Api URL": "/api/v1/{moduleAPIName}/{entityId}/followers",
    "Api Method": "GET",
    "Desc": "This API fetches the list of follower details based on the given filter",
    "OAuth Scope": "Desk.articles.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/articleTranslations/4000000190069/followers?userType=AGENT&from=1&limit=1\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userType",
        "data_type": "String optional",
        "description": "To get the followers based on userType allowed values AGENTS , END_USERS ,      default value : all users will be processed"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 1, range : >=0",
        "description": "Index number, starting from which the followers must be listed. Default value is 1."
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of followers to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo?orgId=3115331\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#setup/users-control/agents/5000000000347\",\n    \"name\" : \"Desk Agent\",\n    \"id\" : \"5000000012902\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#5C6368\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"MVP\",\n      \"id\" : \"5000000081009\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/35531135311?portalId=3153815r1fnf113131rf31n9\"\n    },\n    \"userType\" : \"AGENT\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Account Followers",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account followers are users who follow an account to track the tickets raised from the account and the support provided.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Add account followers",
    "Api URL": "api/v1/accounts/{account_id}/addFollowers",
    "Api Method": "POST",
    "Desc": "This API adds one or more users to the followers list of an account",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/addFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Remove account followers",
    "Api URL": "api/v1/accounts/{account_id}/removeFollowers",
    "Api Method": "POST",
    "Desc": "This API removes one or more users from the followers list of an account",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/removeFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Get account followers",
    "Api URL": "api/v1/accounts/{account_id}/followers",
    "Api Method": "GET",
    "Desc": "This API fetches the list of users following an account.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/accounts/4000000190069/followers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the followers must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of followers to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Contact Followers",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Contact followers are users who follow a contact to track the tickets raised by the contact and the support provided.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Add contact followers",
    "Api URL": "api/v1/contacts/{contact_id}/addFollowers",
    "Api Method": "POST",
    "Desc": "This API adds one or more users to the followers list of a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/4000000190069/addFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Remove contact followers",
    "Api URL": "api/v1/contacts/{contact_id}/removeFollowers",
    "Api Method": "POST",
    "Desc": "This API removes one or more users from the followers list of a contact.",
    "OAuth Scope": "Desk.contacts.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/contacts/4000000190069/removeFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Get contact followers",
    "Api URL": "api/v1/contacts/{contact_id}/followers",
    "Api Method": "GET",
    "Desc": "This API fetches the list of users following a contact.",
    "OAuth Scope": "Desk.contacts.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/contacts/4000000190069/followers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the followers must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of followers to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Ticket Followers",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket followers are users who follow a ticket to track the progress made in resolving it.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      },
      {
        "name": "following",
        "data_type": "string",
        "description": "Key that returns the module being followed. Values allowed are tickets, contacts, or accounts"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Add ticket followers",
    "Api URL": "api/v1/tickets/{ticket_id}/addFollowers",
    "Api Method": "POST",
    "Desc": "This API adds one or more users to the followers list of a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/addFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Remove ticket followers",
    "Api URL": "api/v1/tickets/{ticket_id}/removeFollowers",
    "Api Method": "POST",
    "Desc": "This API removes one or more users from the followers list of a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/removeFollowers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"followerIds\" : [ 5000000013292 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "followerIds",
        "data_type": "list required",
        "description": "the list of ids to be added as follower"
      }
    ],
    "Response Example": "-d'{\n  \"followerIds\" : [ 5000000013292 ]\n}'"
  },
  {
    "Api name": "Get ticket followers",
    "Api URL": "api/v1/tickets/{ticket_id}/followers",
    "Api Method": "GET",
    "Desc": "This API fetches the list of users following a ticket.Note:Sometimes, followers of a contact/account indirectly end up as ticket followers if the ticket is associated with the contact/account they follow. In that case, thefollowingkey returns the value of the original module the user follows--*contact* or account.Even in a case where the user first followed the ticket and then followed the contact/account associated with it, the following key returns the value contact or account. This is because the contact/account is the parent resource of the ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/4000000190069/followers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"following\" : \"ticket\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"following\" : \"contact\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
  },
  {
    "Api name": "Tasks Attachments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Task attachments are files you attach to a task to aid quick resolution.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Task attachments",
    "Api URL": "/api/v1/tasks/{task_id}/attachments",
    "Api Method": "GET",
    "Desc": "This API lists the files attached to a task.",
    "OAuth Scope": "Desk.activities.READ, Desk.activities.tasks.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tasks/1892000001004024/attachments?include=creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the attachments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of attachments to fetch"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the attachments. Value allowed is creator , which returns the details of users who added the attachments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"issue.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"program.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"errorfixed.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"error_page.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  } ]\n}"
  },
  {
    "Api name": "Create Task attachment",
    "Api URL": "/api/v1/tasks/{task_id}/attachments",
    "Api Method": "POST",
    "Desc": "This API attaches a file to a task.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tasks/1892000001004024/attachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to attach to the task"
      }
    ],
    "Response Example": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"task_history.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000001010001/content\"\n}"
  },
  {
    "Api name": "Delete Task attachment",
    "Api URL": "/api/v1/tasks/{task_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API removes an attachment from a task.",
    "OAuth Scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Product Attachments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Product attachments are the files you attach to a product to aid quick resolution.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment Note : This ID can be used only by the user who uploaded the attachment. If another user tries to use the attachment ID in other APIs such as sendEmailReply, draftEmailReply, etc an error will be thrown."
      },
      {
        "name": "creatorId",
        "data_type": "long",
        "description": "ID of user who attached the file"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of attaching the file"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "Key that returns if the attachment is public or not"
      },
      {
        "name": "size",
        "data_type": "long",
        "description": "Size of the attachment"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List all attachments",
    "Api URL": "/api/v1/products/{product_id}/attachments",
    "Api Method": "GET",
    "Desc": "This API lists all attachments in a product.",
    "OAuth Scope": "Desk.products.READ,Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/products/1892000001004024/attachments?include=creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "from Index"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "the number of attachments to be displayed"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the attachments. Value allowed is creator , which returns the details of users who added the attachments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"ticket.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"bsnl-feb14.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042002\",\n    \"name\" : \"history.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"fixes.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
  },
  {
    "Api name": "Create an attachment",
    "Api URL": "/api/v1/products/{product_id}/attachments",
    "Api Method": "POST",
    "Desc": "This API attaches a file to a product.",
    "OAuth Scope": "Desk.products.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/products/1892000001004024/attachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "attachment to be added"
      }
    ],
    "Response Example": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"tools.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001010001/content\"\n}"
  },
  {
    "Api name": "Delete an attachment",
    "Api URL": "/api/v1/products/{product_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an attachment from a product.",
    "OAuth Scope": "Desk.products.UPDATE,Desk.settings.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001010001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Activities",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Activity refers to secondary activities that your customer support agents perform. In Zoho Desk, activities are of three types: tasks, calls, and events. It is not mandatory for activities to be related only to ticket resolution.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List ticket activities",
    "Api URL": "/api/v1/tickets/{ticket_id}/activities",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of activities associated with a ticket, based on the limit specified.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ, Desk.activities.tasks.READ,Desk.calls.READ,Desk.tasks.READ,Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/5000000016294/activities?include=tickets,contacts,assignee,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the activities must be listed"
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes if the activity was completed or not"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional",
        "description": "Key that denotes whether to fetch spam activities or not"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of activities to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: activityTime or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : contacts, assignee,tickets,teams,projects,integInfo."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"35\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Stall in Dubai Airport\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e484b8a02355a7e402\",\n    \"createdTime\" : \"2019-04-12T05:21:21.000Z\",\n    \"startTime\" : \"2019-12-25T16:52:11.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"35\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000083048\",\n    \"isSpam\" : false,\n    \"category\" : \"Demo\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"Not Started\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : \"3000000008763\",\n      \"id\" : \"5000000016294\",\n      \"team\" : {\n        \"name\" : \"Responsive Team\",\n        \"id\" : \"3000000008763\",\n        \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3000000008763/logo?orgId=11278831\"\n      },\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"Steve\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Gadget Replacement\",\n    \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : {\n      \"name\" : \"Responsive Team\",\n      \"id\" : \"3000000008763\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3000000008763/logo?orgId=11278831\"\n    },\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"teamId\" : \"3000000008763\",\n    \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n    \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"35\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000081089\",\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"outbound\",\n    \"status\" : \"Completed\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"Steve\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Rest OS Version\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-24T06:30:00.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e40af0073cf7981c2f\",\n    \"createdTime\" : \"2019-04-10T10:07:26.000Z\",\n    \"startTime\" : \"2019-04-24T06:30:00.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000081036\",\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"Not Started\"\n  } ]\n}"
  },
  {
    "Api name": "Delete spam activities",
    "Api URL": "/api/v1/activities/emptySpam",
    "Api Method": "POST",
    "Desc": "This API deletes all spam activities.",
    "OAuth Scope": "Desk.activities.calls.DELETE, Desk.activities.events.DELETE, Desk.activities.DELETE, Desk.activities.tasks.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/activities/emptySpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"4000000025121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department to which the activities belong"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"4000000025121\"\n}'"
  },
  {
    "Api name": "Calls",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Calls refer to the support-related calls your customers make to your help desk and vice versa. It is mandatory for each call to be mapped to a contact.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the call"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get call",
    "Api URL": "api/v1/calls/{call_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a call.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.READ,Desk.calls.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/calls/5000000081089?include=tickets,contacts,assignee,teams,creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the call. Values allowed are: contacts , assignee , tickets , teams , livecalls , creator ."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2019-04-30T10:42:41.000Z\",\n  \"subject\" : \"Call check scheduled\",\n  \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n  \"departmentId\" : \"5000000012710\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : null,\n  \"ownerId\" : \"5000000015911\",\n  \"livecall\" : {\n    \"recordings\" : [ {\n      \"duration\" : \"84\",\n      \"url\" : \"https://api.twilio.com/2010-04-01/\"\n    }, {\n      \"duration\" : \"675\",\n      \"url\" : \"https://api.twilio.com/2010-04-01/\"\n    } ],\n    \"voiceMailDuration\" : null,\n    \"id\" : \"6000000026017\",\n    \"voiceMailUrl\" : null\n  },\n  \"duration\" : \"7380\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false\n  },\n  \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n  \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000081089\",\n  \"direction\" : \"outbound\",\n  \"creator\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"emailId\" : \"zylker@zylker.com\",\n    \"id\" : \"5000000015911\"\n  },\n  \"cf\" : { },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : \"3691000006805001\",\n    \"id\" : \"5000000016294\",\n    \"team\" : {\n      \"name\" : \"Testing Team\",\n      \"id\" : \"3691000006805001\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805001/logo?orgId=11278831\"\n    },\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  },\n  \"reminder\" : [ {\n    \"alertType\" : [ \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-24T06:30:00.000Z\"\n  }, {\n    \"alertType\" : [ \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-23T06:30:00.000Z\"\n  }, {\n    \"alertType\" : [ \"EMAIL\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-22T06:30:00.000Z\"\n  } ],\n  \"contactId\" : \"5000000016252\",\n  \"team\" : {\n    \"name\" : \"Testing Team\",\n    \"id\" : \"3691000006805001\",\n    \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805001/logo?orgId=11278831\"\n  },\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Completed\"\n}"
  },
  {
    "Api name": "List calls",
    "Api URL": "api/v1/calls",
    "Api Method": "GET",
    "Desc": "This API fetches a particular number of calls, based on the limit specified.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.READ,Desk.calls.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/calls?include=tickets,contacts,assignee,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the call. Values allowed are: contacts , assignee , tickets , teams ."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the calls must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of calls to fetch"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department from which the calls must be fetched"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "long optional",
        "description": "Departments from which the calls need to be queried"
      },
      {
        "name": "viewId see documentation",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "assignee",
        "data_type": "long optional",
        "description": "Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas."
      },
      {
        "name": "startTime",
        "data_type": "string optional, max chars : 100",
        "description": "Start time for completing the call. Values allowed are Overdue , Tomorrow , CurrentWeek , CurrentMonth and Today .You can pass multiple values by separating them with commas."
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the call is completed or not"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the calls by a specific attribute: startTime or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"hRl\",\n    \"completedTime\" : \"2019-04-02T06:36:43.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e48740f9abf01f71bf\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:36:43.000Z\",\n    \"startTime\" : \"2019-03-24T11:40:01.000Z\",\n    \"id\" : \"5000000049385\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Canceled\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"Irt\",\n    \"completedTime\" : \"2019-04-02T06:37:06.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4603451fcf41c54b2\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:37:06.000Z\",\n    \"startTime\" : \"2019-03-24T11:40:24.000Z\",\n    \"id\" : \"5000000053840\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Canceled\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"SG0\",\n    \"completedTime\" : \"2019-04-02T06:36:28.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : {\n      \"name\" : \"Testing Team\",\n      \"id\" : \"3691000006805001\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805001/logo?orgId=11278831\"\n    },\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e46c76cc4bfd688f1b\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:36:28.000Z\",\n    \"startTime\" : \"2019-04-01T11:39:44.000Z\",\n    \"id\" : \"5000000047098\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Completed\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
  },
  {
    "Api name": "Create call",
    "Api URL": "api/v1/calls",
    "Api Method": "POST",
    "Desc": "This API adds a call entry to your help desk portal.",
    "OAuth Scope": "Desk.activities.calls.CREATE, Desk.activities.CREATE,Desk.calls.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"duration\" : \"300\",\n  \"reminder\" : [ {\n    \"alertType\" : [ \"EMAIL\", \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2018-12-25T04:52:13.000Z\"\n  } ],\n  \"contactId\" : \"1892000000088017\",\n  \"subject\" : \"New Testing Call\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n  \"priority\" : \"High\",\n  \"ticketId\" : \"3000000008753\",\n  \"direction\" : \"inbound\",\n  \"status\" : \"In Progress\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the call"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the call"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department associated with the call and ticket"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 300",
        "description": "Subject of the call"
      },
      {
        "name": "startTime",
        "data_type": "timestamp required",
        "description": "Time when the call started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "direction",
        "data_type": "string required, max chars : 100",
        "description": "Direction of the call: inbound or outbound"
      },
      {
        "name": "duration",
        "data_type": "integer required",
        "description": "Duration of the call in seconds"
      },
      {
        "name": "status",
        "data_type": "string required, max chars : 120",
        "description": "Completion status of the call"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the call is assigned"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the call"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the call"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket associated with the call"
      },
      {
        "name": "contactId",
        "data_type": "long required",
        "description": "ID of the contact associated with the call"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder associated with the call"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the call is assigned"
      },
      {
        "name": "recordingUrl",
        "data_type": "string optional, max chars : 2500",
        "description": "Recording or voice mail URL"
      }
    ],
    "Response Example": "-d'{\n  \"duration\" : \"300\",\n  \"reminder\" : [ {\n    \"alertType\" : [ \"EMAIL\", \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2018-12-25T04:52:13.000Z\"\n  } ],\n  \"contactId\" : \"1892000000088017\",\n  \"subject\" : \"New Testing Call\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n  \"priority\" : \"High\",\n  \"ticketId\" : \"3000000008753\",\n  \"direction\" : \"inbound\",\n  \"status\" : \"In Progress\"\n}'"
  },
  {
    "Api name": "Update call",
    "Api URL": "api/v1/calls/{call_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of a call.",
    "OAuth Scope": "Desk.activities.calls.UPDATE, Desk.activities.UPDATE,Desk.calls.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/calls/3000000054002\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Call completed with a callback request\",\n  \"status\" : \"completed\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the call"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the call"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department associated with the call and ticket"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 300",
        "description": "Subject of the call"
      },
      {
        "name": "startTime",
        "data_type": "timestamp optional",
        "description": "Time when the call started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "direction",
        "data_type": "string optional, max chars : 100",
        "description": "Direction of the call: inbound or outbound"
      },
      {
        "name": "duration",
        "data_type": "integer optional",
        "description": "Duration of the call in seconds"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Completion status of the call"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the call is assigned"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the call"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the call"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket associated with the call"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact associated with the call"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder associated with the call"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the call is assigned"
      },
      {
        "name": "recordingUrl",
        "data_type": "string optional, max chars : 2500",
        "description": "Recording or voice mail URL"
      }
    ],
    "Response Example": "-d'{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Call completed with a callback request\",\n  \"status\" : \"completed\"\n}'"
  },
  {
    "Api name": "List calls by ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}/calls",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of calls associated with a ticket, based on the limit specified.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.READ,Desk.tickets.READ,Desk.calls.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/5000000016294/calls?include=tickets,contacts,assignee,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the calls must be listed"
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes if the call was completed or not"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional",
        "description": "Key that denotes whether to fetch spam calls or not"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of calls to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: startTime or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : contacts , assignee , tickets , teams ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"subject\" : \"Call check scheduled\",\n    \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n    \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n    \"id\" : \"5000000081089\",\n    \"direction\" : \"outbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013468\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Completed\"\n  }, {\n    \"subject\" : \"ddddd\",\n    \"completedTime\" : \"2019-04-17T07:11:43.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4437f38846d520c51\",\n    \"isCommented\" : false,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-05T11:15:15.000Z\",\n    \"startTime\" : \"2019-04-24T06:30:00.000Z\",\n    \"id\" : \"5000000069105\",\n    \"direction\" : \"outbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : \"3691000006805001\",\n      \"id\" : \"5000000016294\",\n      \"team\" : {\n        \"name\" : \"Testing Team\",\n        \"id\" : \"3691000006805001\",\n        \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805001/logo?orgId=11278831\"\n      },\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : {\n      \"name\" : \"Testing Team\",\n      \"id\" : \"3691000006805001\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805001/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013468\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4437f38846d520c51\",\n    \"teamId\" : \"3691000006805001\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Completed\"\n  } ]\n}"
  },
  {
    "Api name": "Delete calls",
    "Api URL": "/api/v1/calls/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves call entries to the Recycle Bin of your help desk portal.",
    "OAuth Scope": "Desk.activities.calls.DELETE, Desk.activities.DELETE,Desk.calls.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"entityIds\" : [ \"3000000053002\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "entityIds",
        "data_type": "list required",
        "description": "IDs of the activities to delete"
      }
    ],
    "Response Example": "-d'{\n  \"entityIds\" : [ \"3000000053002\" ]\n}'"
  },
  {
    "Api name": "Delete spam calls",
    "Api URL": "/api/v1/calls/deleteSpam",
    "Api Method": "POST",
    "Desc": "This API deletes the given spam calls",
    "OAuth Scope": "Desk.activities.calls.DELETE, Desk.activities.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/deleteSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"callIds\" : [ \"1892000000007107\", \"1892000000001208\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "callIds",
        "data_type": "list required",
        "description": "IDs of the spam calls"
      }
    ],
    "Response Example": "-d'{\n  \"callIds\" : [ \"1892000000007107\", \"1892000000001208\" ]\n}'"
  },
  {
    "Api name": "Clear live call mapping from an activity",
    "Api URL": "/api/v1/calls/{call_id}/clearLiveCall",
    "Api Method": "POST",
    "Desc": "This API clears the live call mapping from an activity",
    "OAuth Scope": "Desk.calls.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/{call_id}/clearLiveCall\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Update many calls",
    "Api URL": "/api/v1/calls/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple calls at once.",
    "OAuth Scope": "Desk.activities.calls.UPDATE, Desk.activities.UPDATE,Desk.calls.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'"
  },
  {
    "Api name": "Empty spam calls",
    "Api URL": "/api/v1/calls/emptySpam",
    "Api Method": "POST",
    "Desc": "This API deletes all spam calls.",
    "OAuth Scope": "Desk.activities.calls.DELETE, Desk.activities.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/emptySpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"4000000025121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department to which the activities belong"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"4000000025121\"\n}'"
  },
  {
    "Api name": "Calls Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Call comments refer to comments recorded on calls assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a call comment",
    "Api URL": "api/v1/calls/{call_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to a call.",
    "OAuth Scope": "Desk.activities.calls.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/calls/4000000530001/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Call comment.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Call comment.\"\n}'"
  },
  {
    "Api name": "Update a call comment",
    "Api URL": "api/v1/calls/{call_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing call comment.",
    "OAuth Scope": "Desk.activities.calls.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"Edit Call comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"Edit Call comment\"\n}'"
  },
  {
    "Api name": "Delete a call comment",
    "Api URL": "api/v1/calls/{call_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing call comment.",
    "OAuth Scope": "Desk.activities.calls.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get a call comment",
    "Api URL": "api/v1/calls/{call_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a call comment from the portal.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530005\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Call Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all call comments",
    "Api URL": "api/v1/calls/{call_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a call, based on the limit specified.",
    "OAuth Scope": "Desk.activities.calls.READ, Desk.activities.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/calls/4000000530001/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Second Call Comment......\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Call comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Events",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Events refer to pre-planned, and most of the time, directly customer-facing activities aimed at ticket resolution. The different events supported in Zoho Desk are: meetings and demos.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the event"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get event",
    "Api URL": "api/v1/events/{event_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of an event.",
    "OAuth Scope": "Desk.activities.events.READ, Desk.activities.READ,Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/events/5000000065115?include=tickets?include=assignee,tickets,contacts,teams,creator\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : contacts , assignee , tickets , teams , integInfo , creator ."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2019-04-30T14:22:13.000Z\",\n  \"subject\" : \"Zoholics 2019\",\n  \"completedTime\" : null,\n  \"departmentId\" : \"5000000012710\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : null,\n  \"ownerId\" : \"5000000015911\",\n  \"secId\" : \"9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n  \"duration\" : \"10980\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false,\n    \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n  },\n  \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n  \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000065115\",\n  \"creator\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"emailId\" : \"zylker@zylker.com\",\n    \"id\" : \"5000000015911\"\n  },\n  \"cf\" : { },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : \"3691000006805021\",\n    \"id\" : \"5000000016294\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\",\n    \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n  },\n  \"reminder\" : null,\n  \"contactId\" : \"5000000016252\",\n  \"team\" : {\n    \"name\" : \"Desk Team\",\n    \"id\" : \"3691000006805021\",\n    \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n  },\n  \"priority\" : \"High\",\n  \"layoutId\" : \"5000000013470\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n  \"teamId\" : \"3691000006805021\",\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Not Started\"\n}"
  },
  {
    "Api name": "List events",
    "Api URL": "api/v1/events",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of events, based on the limit specified.",
    "OAuth Scope": "Desk.activities.events.READ, Desk.activities.READ,Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/events?include=assignee,tickets,contacts,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the event. Values allowed are: contacts , assignee , tickets , teams , integInfo ."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the events must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of events to list"
      },
      {
        "name": "startTime",
        "data_type": "string optional, max chars : 100",
        "description": "Start time for completing the event. Values allowed are Overdue , Tomorrow , CurrentWeek , CurrentMonth and Today .You can pass multiple values by separating them with commas."
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department from which the events must be fetched"
      },
      {
        "name": "departmentIds see documentation",
        "data_type": "long optional",
        "description": "Departments from which the events need to be queried"
      },
      {
        "name": "assignee",
        "data_type": "long optional",
        "description": "Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas."
      },
      {
        "name": "viewId see documentation",
        "data_type": "long optional",
        "description": "ID of the view to apply while fetching the resources"
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the event is completed or not"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts the events by a specific attribute: startTime or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Partner's conference'\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false\n    },\n    \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n    \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n    \"id\" : \"5000000065115\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : \"3691000006805021\",\n      \"id\" : \"5000000016294\",\n      \"team\" : {\n        \"name\" : \"Desk Team\",\n        \"id\" : \"3691000006805021\",\n        \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n      },\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Developers meet\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"teamId\" : \"3691000006805021\",\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false\n    },\n    \"createdTime\" : \"2019-04-16T12:02:27.000Z\",\n    \"startTime\" : \"2019-04-25T06:30:00.000Z\",\n    \"id\" : \"5000000084070\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
  },
  {
    "Api name": "Create event",
    "Api URL": "api/v1/events",
    "Api Method": "POST",
    "Desc": "This API adds an event entry to your help desk portal.",
    "OAuth Scope": "Desk.activities.events.CREATE, Desk.activities.CREATE,Desk.events.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"duration\" : \"40\",\n  \"contactId\" : \"3000000001234\",\n  \"subject\" : \"Dubai startup meet\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the event"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the event"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department associated with the event and ticket"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 300",
        "description": "Subject of the event"
      },
      {
        "name": "startTime",
        "data_type": "timestamp required",
        "description": "Time when the event started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "duration",
        "data_type": "integer required",
        "description": "Duration of the event in seconds"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Completion status of the event"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the event is assigned"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the event"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the event"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 120",
        "description": "Category of the event"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket associated with the event"
      },
      {
        "name": "contactId",
        "data_type": "long required",
        "description": "ID of the contact associated with the event"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder associated with the event"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the event is assigned"
      }
    ],
    "Response Example": "-d'{\n  \"duration\" : \"40\",\n  \"contactId\" : \"3000000001234\",\n  \"subject\" : \"Dubai startup meet\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}'"
  },
  {
    "Api name": "Update event",
    "Api URL": "api/v1/events/{event_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an event.",
    "OAuth Scope": "Desk.activities.events.UPDATE, Desk.activities.UPDATE,Desk.events.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/events/3000000054002\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Event completed with a callback request\",\n  \"status\" : \"completed\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields deprecated",
        "data_type": "list optional",
        "description": "User-defined fields related to the event"
      },
      {
        "name": "cf",
        "data_type": "list optional",
        "description": "User-defined fields related to the event"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department associated with the event and ticket"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 300",
        "description": "Subject of the event"
      },
      {
        "name": "startTime",
        "data_type": "timestamp optional",
        "description": "Time when the event started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "duration",
        "data_type": "integer optional",
        "description": "Duration of the event in seconds"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 120",
        "description": "Completion status of the event"
      },
      {
        "name": "ownerId",
        "data_type": "long optional",
        "description": "ID of the user to whom the event is assigned"
      },
      {
        "name": "priority",
        "data_type": "string optional, max chars : 120",
        "description": "Priority of the event"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 65535",
        "description": "Description of the event"
      },
      {
        "name": "category",
        "data_type": "string optional, max chars : 120",
        "description": "Category of the event"
      },
      {
        "name": "ticketId see documentation",
        "data_type": "long optional",
        "description": "ID of the ticket associated with the event"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact associated with the event"
      },
      {
        "name": "reminder",
        "data_type": "JSONArray optional",
        "description": "Details of the reminder associated with the event"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID of the team to which the event is assigned"
      }
    ],
    "Response Example": "-d'{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Event completed with a callback request\",\n  \"status\" : \"completed\"\n}'"
  },
  {
    "Api name": "List events by ticket",
    "Api URL": "/api/v1/tickets/{ticket_id}/events",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of events associated with a ticket, based on the limit specified.",
    "OAuth Scope": "Desk.activities.events.READ, Desk.activities.READ,Desk.tickets.READ,Desk.events.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/5000000016294/events?include=assignee,tickets,contacts,teams\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the events must be listed"
      },
      {
        "name": "isCompleted",
        "data_type": "boolean optional",
        "description": "Key that denotes if the event was completed or not"
      },
      {
        "name": "isSpam",
        "data_type": "boolean optional",
        "description": "Key that denotes whether to fetch spam events or not"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of events to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: startTime or createdTime .The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Allowed values are : contacts, assignee,tickets,teams,integInfo."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"subject\" : \"Zoholics at Australia\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n    \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n    \"id\" : \"5000000065115\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : \"3691000006805021\",\n      \"id\" : \"5000000016294\",\n      \"team\" : {\n        \"name\" : \"Desk Team\",\n        \"id\" : \"3691000006805021\",\n        \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n      },\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : {\n      \"name\" : \"Desk Team\",\n      \"id\" : \"3691000006805021\",\n      \"logoUrl\" : \"https://desk.zoho.com/api/v1/teams/3691000006805021/logo?orgId=11278831\"\n    },\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013470\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"teamId\" : \"3691000006805021\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\"\n  }, {\n    \"subject\" : \"sadfsadf\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-16T12:02:27.000Z\",\n    \"startTime\" : \"2019-04-25T06:30:00.000Z\",\n    \"id\" : \"5000000084070\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013470\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\"\n  } ]\n}"
  },
  {
    "Api name": "Delete events",
    "Api URL": "/api/v1/events/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves event entries to the Recycle Bin of your help desk portal.",
    "OAuth Scope": "Desk.activities.events.DELETE, Desk.activities.DELETE,Desk.events.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"entityIds\" : [ \"3000000053002\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "entityIds",
        "data_type": "list required",
        "description": "IDs of the activities to delete"
      }
    ],
    "Response Example": "-d'{\n  \"entityIds\" : [ \"3000000053002\" ]\n}'"
  },
  {
    "Api name": "Delete spam events",
    "Api URL": "/api/v1/events/deleteSpam",
    "Api Method": "POST",
    "Desc": "This API deletes the given spam events",
    "OAuth Scope": "Desk.activities.events.DELETE, Desk.activities.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events/deleteSpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"eventIds\" : [ \"1892000000001297\", \"1892000000001358\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "eventIds",
        "data_type": "list required",
        "description": "IDs of the spam events"
      }
    ],
    "Response Example": "-d'{\n  \"eventIds\" : [ \"1892000000001297\", \"1892000000001358\" ]\n}'"
  },
  {
    "Api name": "Update many events",
    "Api URL": "/api/v1/events/updateMany",
    "Api Method": "POST",
    "Desc": "This API updates multiple events at once.",
    "OAuth Scope": "Desk.activities.events.UPDATE, Desk.activities.UPDATE,Desk.events.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      },
      {
        "name": "isCustomField",
        "data_type": "boolean optional",
        "description": "Key that denotes if the field is a user-defined field or not"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}'"
  },
  {
    "Api name": "Empty spam events",
    "Api URL": "/api/v1/events/emptySpam",
    "Api Method": "POST",
    "Desc": "This API deletes all spam events.",
    "OAuth Scope": "Desk.activities.events.DELETE, Desk.activities.DELETE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events/emptySpam\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"4000000025121\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long required",
        "description": "ID of the department to which the activities belong"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"4000000025121\"\n}'"
  },
  {
    "Api name": "Events Comments",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Event comments refer to comments recorded on events assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the comment"
      },
      {
        "name": "content",
        "data_type": "string",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "commenterId",
        "data_type": "long",
        "description": "ID of the user who made the comment"
      },
      {
        "name": "commentedTime",
        "data_type": "timestamp",
        "description": "Time of comment creation"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of comment modification"
      },
      {
        "name": "commenter show Attributes",
        "data_type": "object",
        "description": "Details of the user who made the comment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "roleName",
        "data_type": "string",
        "description": "Name of the role assigned to the user."
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email address of the user"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The user type. The supported values are AGENT , END_USER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. To access this resource, the below OAuth scope is mandatory. ZohoContacts.userphoto.READ"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the attachment."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the attachment."
      },
      {
        "name": "size",
        "data_type": "int",
        "description": "Size of the attachment, expressed in KB."
      },
      {
        "name": "href",
        "data_type": "string",
        "description": "URL to access the attachment."
      },
      {
        "name": "contentType",
        "data_type": "string",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a event comment",
    "Api URL": "api/v1/events/{event_id}/comments",
    "Api Method": "POST",
    "Desc": "This API adds a comment to a event.",
    "OAuth Scope": "Desk.activities.events.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/events/4000000530001/comments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Event comment.\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Event comment.\"\n}'"
  },
  {
    "Api name": "Update a event comment",
    "Api URL": "api/v1/events/{event_id}/comments/{comment_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an existing event comment.",
    "OAuth Scope": "Desk.activities.events.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/events/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"content\" : \"Edit Event comment\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 32000",
        "description": "Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu ."
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "Used to denote the content-type which maybe html or plainText . The default type is html ."
      }
    ],
    "Response Example": "-d'{\n  \"content\" : \"Edit Event comment\"\n}'"
  },
  {
    "Api name": "Delete a event comment",
    "Api URL": "api/v1/events/{event_id}/comments/{comment_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes an existing event comment.",
    "OAuth Scope": "Desk.activities.events.UPDATE, Desk.activities.UPDATE,Desk.tasks.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/events/4000000530001/comments/4000000530003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get a event comment",
    "Api URL": "api/v1/events/{event_id}/comments/{comment_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a event comment from the portal.",
    "OAuth Scope": "Desk.activities.events.READ, Desk.activities.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/events/4000000530001/comments/4000000530005?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Event Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "List all event comments",
    "Api URL": "api/v1/events/{event_id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments recorded on a event, based on the limit specified.",
    "OAuth Scope": "Desk.activities.events.READ, Desk.activities.READ,Desk.tasks.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/events/4000000530001/comments?include=mentions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number starting from which the comments must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-100",
        "description": "No. of comments to fetch"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "include see documentation",
        "data_type": "String optional",
        "description": "Secondary information related to the comments. Value allowed is mentions , which returns the details of users mentioned in the comments."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Event comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Display Entity",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Display Entity helps to open a Entity in Agent's Browser automatically.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Auto Display an Entity",
    "Api URL": "/api/v1/agents/{agentId}/{entityName}/{entityId}/display",
    "Api Method": "POST",
    "Desc": "This API is used to instruct an agent's browser to open and display a given entity automatically without any manual action required by the agent.agentId:Id of the agent in whose browser the entity to be opened.entityName:Name of the entity that needs to be opened.Values allowed are: tickets, contacts.entityId:Id of the entity.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/1917000000040001/tickets/1917000007169506/display\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Modules",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Module is a structured compartment used to store, organize, and manage specific types of data allowing businesses to efficiently handle different entities such as tickets, contacts, products, price details etc.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "singularLabel",
        "data_type": "string",
        "description": "SingularLabel of the module"
      },
      {
        "name": "pluralLabel",
        "data_type": "string",
        "description": "PluralLabel of the module"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "Description of the module"
      },
      {
        "name": "departmentIds show Attributes",
        "data_type": "list",
        "description": "IDs of departments associated with the Module"
      },
      {
        "name": "profileIds show Attributes",
        "data_type": "list",
        "description": "IDs of profileIds associated with the Module"
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "Unique readonly name of the module"
      },
      {
        "name": "nameField",
        "data_type": "string",
        "description": "Specifies the name of the primary field of the module.  When creating a module, a unique primary field is assigned to that module."
      },
      {
        "name": "isCustomModule",
        "data_type": "boolean",
        "description": "Specifies whether the module is a custom module"
      },
      {
        "name": "isDeptSpecific",
        "data_type": "boolean",
        "description": "Specifies whether the module is department-specific"
      },
      {
        "name": "hasRecycleBin",
        "data_type": "boolean",
        "description": "Specifies whether the module has a recycle bin feature to store records and attachments deleted from the desk account.          If the value is 'true', the deleted records will be moved to the recycle bin, which you can restore if needed. If not, the records will be permanently deleted."
      },
      {
        "name": "id",
        "data_type": "Long",
        "description": "The unique id of the module"
      },
      {
        "name": "createdBy",
        "data_type": "long",
        "description": "Id of the User who created the module"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Specifies the time of creation of the Module"
      },
      {
        "name": "modifiedBy",
        "data_type": "long",
        "description": "Id of the User who modified the module"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Specifies the time at which changes were made to the module"
      },
      {
        "name": "modifier show Attributes",
        "data_type": "object",
        "description": "Details of user who modified the module"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create Custom Module",
    "Api URL": "/api/v1/organizationModules",
    "Api Method": "POST",
    "Desc": "The API creates a Custom Module.Custom Moduleallows users to organize, store, and manage specific types of data tailored to meet unique business requirements.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/organizationModules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"description\" : \"Doctor informations\",\n  \"profileIds\" : [ 1000000029530 ],\n  \"isDeptSpecific\" : true,\n  \"pluralLabel\" : \"Doctors\",\n  \"departmentIds\" : [ 1000000774623, 1000000025632 ],\n  \"singularLabel\" : \"Doctor\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "singularLabel",
        "data_type": "string required, max chars : 50",
        "description": "Singular Label of the module"
      },
      {
        "name": "pluralLabel",
        "data_type": "string required, max chars : 50",
        "description": "Plural Label of the module"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the module"
      },
      {
        "name": "departmentIds",
        "data_type": "list optional",
        "description": "IDs of departments associated with the module"
      },
      {
        "name": "profileIds",
        "data_type": "list optional",
        "description": "IDs of profileIds associated with the module"
      },
      {
        "name": "isDeptSpecific",
        "data_type": "boolean optional",
        "description": "Specifies whether the module is department-specific. If the key is not provided, it will create an organization-level module."
      }
    ],
    "Response Example": "-d'{\n  \"description\" : \"Doctor informations\",\n  \"profileIds\" : [ 1000000029530 ],\n  \"isDeptSpecific\" : true,\n  \"pluralLabel\" : \"Doctors\",\n  \"departmentIds\" : [ 1000000774623, 1000000025632 ],\n  \"singularLabel\" : \"Doctor\"\n}'"
  },
  {
    "Api name": "Edit Custom Module",
    "Api URL": "/api/v1/organizationModules/{moduleId}",
    "Api Method": "PUT",
    "Desc": "The API edits a Custom Module.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/organizationModules/1000003000001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"description\" : \"Doctor informations\",\n  \"profileIds\" : [ 1000000029530, 1000000029533 ],\n  \"pluralLabel\" : \"Doctors\",\n  \"departmentIds\" : [ 1000000774623, 1000000025632 ],\n  \"singularLabel\" : \"Doctor\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "singularLabel",
        "data_type": "string required, max chars : 50",
        "description": "Singular Label of the module"
      },
      {
        "name": "pluralLabel",
        "data_type": "string required, max chars : 50",
        "description": "Plural Label of the module"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the module"
      },
      {
        "name": "departmentIds",
        "data_type": "list required",
        "description": "IDs of departments associated with the module"
      },
      {
        "name": "profileIds",
        "data_type": "list required",
        "description": "IDs of profileIds associated with the module"
      }
    ],
    "Response Example": "-d'{\n  \"description\" : \"Doctor informations\",\n  \"profileIds\" : [ 1000000029530, 1000000029533 ],\n  \"pluralLabel\" : \"Doctors\",\n  \"departmentIds\" : [ 1000000774623, 1000000025632 ],\n  \"singularLabel\" : \"Doctor\"\n}'"
  },
  {
    "Api name": "Get a Module",
    "Api URL": "/api/v1/organizationModules/{moduleId}",
    "Api Method": "GET",
    "Desc": "This API fetches a single Module",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizationModules/1000003000001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"displayLabel\" : \"Doctors\",\n  \"modifiedTime\" : \"2024-04-19T09:35:02.000Z\",\n  \"apiName\" : \"cm_doctors\",\n  \"modifier\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\",\n    \"email\" : \"kyle@zylker.com\"\n  },\n  \"nameField\" : \"name\",\n  \"profileIds\" : [ \"1000000029530\", \"1000000029533\" ],\n  \"description\" : \"Doctor informations\",\n  \"departmentIds\" : [ \"1000000774623\", \"1000000025632\" ],\n  \"pluralLabel\" : \"Doctors\",\n  \"singularLabel\" : \"Doctor\",\n  \"hasRecycleBin\" : true,\n  \"createdBy\" : \"1000000000375\",\n  \"isCustomModule\" : true,\n  \"createdTime\" : \"2024-04-19T09:04:17.000Z\",\n  \"modifiedBy\" : \"1000000000375\",\n  \"isDeptSpecific\" : true,\n  \"id\" : \"1000003000001\"\n}"
  },
  {
    "Api name": "Get All Modules",
    "Api URL": "/api/v1/organizationModules",
    "Api Method": "GET",
    "Desc": "The API fetches all the modules.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizationModules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"displayLabel\" : \"Accounts\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"accounts\",\n    \"modifier\" : null,\n    \"nameField\" : \"accountName\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Accounts\",\n    \"singularLabel\" : \"Account\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : false,\n    \"id\" : \"1000000000377\"\n  }, {\n    \"displayLabel\" : \"Contacts\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"contacts\",\n    \"modifier\" : null,\n    \"nameField\" : \"lastName\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Contacts\",\n    \"singularLabel\" : \"Contact\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : false,\n    \"id\" : \"1000000000379\"\n  }, {\n    \"displayLabel\" : \"Tasks\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"tasks\",\n    \"modifier\" : null,\n    \"nameField\" : \"subject\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Tasks\",\n    \"singularLabel\" : \"Task\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000383\"\n  }, {\n    \"displayLabel\" : \"Tickets\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"tickets\",\n    \"modifier\" : null,\n    \"nameField\" : \"subject\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Tickets\",\n    \"singularLabel\" : \"Ticket\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000423\"\n  }, {\n    \"displayLabel\" : \"Contracts\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"contracts\",\n    \"modifier\" : null,\n    \"nameField\" : \"contractName\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Contracts\",\n    \"singularLabel\" : \"Contract\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000427\"\n  }, {\n    \"displayLabel\" : \"Products\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"products\",\n    \"modifier\" : null,\n    \"nameField\" : \"productName\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Products\",\n    \"singularLabel\" : \"Product\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : false,\n    \"id\" : \"1000000000429\"\n  }, {\n    \"displayLabel\" : \"Time Entry\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"timeEntry\",\n    \"modifier\" : null,\n    \"nameField\" : \"requestChargeType\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Time Entry\",\n    \"singularLabel\" : \"Time Entry\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000431\"\n  }, {\n    \"displayLabel\" : \"Agents\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"agents\",\n    \"modifier\" : null,\n    \"nameField\" : \"lastName\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Agents\",\n    \"singularLabel\" : \"Agent\",\n    \"hasRecycleBin\" : false,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : false,\n    \"id\" : \"1000000000435\"\n  }, {\n    \"displayLabel\" : \"Events\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"events\",\n    \"modifier\" : null,\n    \"nameField\" : \"subject\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Events\",\n    \"singularLabel\" : \"Event\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000445\"\n  }, {\n    \"displayLabel\" : \"Calls\",\n    \"modifiedTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"apiName\" : \"calls\",\n    \"modifier\" : null,\n    \"nameField\" : \"subject\",\n    \"description\" : null,\n    \"pluralLabel\" : \"Calls\",\n    \"singularLabel\" : \"Call\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : null,\n    \"isCustomModule\" : false,\n    \"createdTime\" : \"2000-01-01T00:00:00.000Z\",\n    \"modifiedBy\" : null,\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000000000447\"\n  }, {\n    \"displayLabel\" : \"Doctors\",\n    \"modifiedTime\" : \"2024-04-19T09:35:02.000Z\",\n    \"apiName\" : \"cm_doctors\",\n    \"modifier\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"nameField\" : \"name\",\n    \"description\" : \"Doctor informations\",\n    \"pluralLabel\" : \"Doctors\",\n    \"singularLabel\" : \"Doctor\",\n    \"hasRecycleBin\" : true,\n    \"createdBy\" : \"1000000000375\",\n    \"isCustomModule\" : true,\n    \"createdTime\" : \"2024-04-19T09:04:17.000Z\",\n    \"modifiedBy\" : \"1000000000375\",\n    \"isDeptSpecific\" : true,\n    \"id\" : \"1000003000001\"\n  } ]\n}"
  },
  {
    "Api name": "Get modules accessible to current user profile",
    "Api URL": "/api/v1/myAccessibleModules",
    "Api Method": "GET",
    "Desc": "The API fetches a list of modules that are accessible to the current user profile.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myAccessibleModules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modules\" : [ {\n    \"displayLabel\" : \"Contracts\",\n    \"apiKey\" : \"contracts\",\n    \"isEnabled\" : false,\n    \"nameField\" : null,\n    \"id\" : \"1000000000485\",\n    \"pluralLabel\" : \"Contracts\",\n    \"singularLabel\" : \"Contract\"\n  }, {\n    \"displayLabel\" : \"Time Entry\",\n    \"apiKey\" : \"timeEntry\",\n    \"isEnabled\" : false,\n    \"nameField\" : null,\n    \"id\" : \"1000000000489\",\n    \"pluralLabel\" : \"Time Entry\",\n    \"singularLabel\" : \"Time Entry\"\n  }, {\n    \"displayLabel\" : \"Department\",\n    \"apiKey\" : \"departments\",\n    \"isEnabled\" : false,\n    \"nameField\" : null,\n    \"id\" : \"1000000000491\",\n    \"pluralLabel\" : \"Departments\",\n    \"singularLabel\" : \"Department\"\n  }, {\n    \"displayLabel\" : \"Agents\",\n    \"apiKey\" : \"agents\",\n    \"isEnabled\" : false,\n    \"nameField\" : null,\n    \"id\" : \"1000000000493\",\n    \"pluralLabel\" : \"Agents\",\n    \"singularLabel\" : \"Agent\"\n  }, {\n    \"displayLabel\" : \"Topics\",\n    \"apiKey\" : \"category\",\n    \"isEnabled\" : false,\n    \"nameField\" : null,\n    \"id\" : \"1000000000527\",\n    \"pluralLabel\" : \"Topics\",\n    \"singularLabel\" : \"Topic\"\n  }, {\n    \"displayLabel\" : \"Ticketss\",\n    \"apiKey\" : \"tickets\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000481\",\n    \"pluralLabel\" : \"Ticketss\",\n    \"singularLabel\" : \"Ticket\"\n  }, {\n    \"displayLabel\" : \"Reports\",\n    \"apiKey\" : \"reports\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000463\",\n    \"pluralLabel\" : \"Reports\",\n    \"singularLabel\" : \"Report\"\n  }, {\n    \"displayLabel\" : \"Dashboards\",\n    \"apiKey\" : \"dashboards\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000465\",\n    \"pluralLabel\" : \"Dashboards\",\n    \"singularLabel\" : \"Dashboard\"\n  }, {\n    \"displayLabel\" : \"Knowledge Base\",\n    \"apiKey\" : \"kbCategory\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000483\",\n    \"pluralLabel\" : \"Articles\",\n    \"singularLabel\" : \"Article\"\n  }, {\n    \"displayLabel\" : \"Contacts\",\n    \"apiKey\" : \"contacts\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000461\",\n    \"pluralLabel\" : \"Contacts\",\n    \"singularLabel\" : \"Contact\"\n  }, {\n    \"displayLabel\" : \"Products\",\n    \"apiKey\" : \"products\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000487\",\n    \"pluralLabel\" : \"Products\",\n    \"singularLabel\" : \"Product\"\n  }, {\n    \"displayLabel\" : \"Accounts\",\n    \"apiKey\" : \"accounts\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000459\",\n    \"pluralLabel\" : \"Accounts\",\n    \"singularLabel\" : \"Account\"\n  }, {\n    \"displayLabel\" : \"Community\",\n    \"apiKey\" : \"community\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000533\",\n    \"pluralLabel\" : \"Community\",\n    \"singularLabel\" : \"Community\"\n  }, {\n    \"displayLabel\" : \"Social\",\n    \"apiKey\" : \"social\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000535\",\n    \"pluralLabel\" : \"Social\",\n    \"singularLabel\" : \"Social\"\n  }, {\n    \"displayLabel\" : \"Chat\",\n    \"apiKey\" : \"chat\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000537\",\n    \"pluralLabel\" : \"Chat\",\n    \"singularLabel\" : \"Chat\"\n  }, {\n    \"displayLabel\" : \"Activities\",\n    \"apiKey\" : \"activities\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000471\",\n    \"pluralLabel\" : \"Activities\",\n    \"singularLabel\" : \"Activity\"\n  }, {\n    \"displayLabel\" : \"Calls\",\n    \"apiKey\" : \"calls\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000531\",\n    \"pluralLabel\" : \"Calls\",\n    \"singularLabel\" : \"Call\"\n  }, {\n    \"displayLabel\" : \"Tasks\",\n    \"apiKey\" : \"tasks\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000469\",\n    \"pluralLabel\" : \"Tasks\",\n    \"singularLabel\" : \"Task\"\n  }, {\n    \"displayLabel\" : \"Events\",\n    \"apiKey\" : \"events\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000529\",\n    \"pluralLabel\" : \"Events\",\n    \"singularLabel\" : \"Event\"\n  }, {\n    \"displayLabel\" : \"IM\",\n    \"apiKey\" : \"im\",\n    \"isEnabled\" : true,\n    \"nameField\" : null,\n    \"id\" : \"1000000000475\",\n    \"pluralLabel\" : \"IM\",\n    \"singularLabel\" : \"IM\"\n  } ]\n}"
  },
  {
    "Api name": "Get modules",
    "Api URL": "/api/v1/modules",
    "Api Method": "GET",
    "Desc": "The API fetches all the modules available in Zoho Desk.This API isdeprecated, useapi/v1/organizationModulesapi for fetching modules.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/modules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modules\" : [ {\n    \"displayLabel\" : \"Contracts\",\n    \"apiKey\" : \"contracts\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000485\",\n    \"pluralLabel\" : \"Contracts\",\n    \"singularLabel\" : \"Contract\"\n  }, {\n    \"displayLabel\" : \"Time Entry\",\n    \"apiKey\" : \"timeEntry\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000489\",\n    \"pluralLabel\" : \"Time Entry\",\n    \"singularLabel\" : \"Time Entry\"\n  }, {\n    \"displayLabel\" : \"Department\",\n    \"apiKey\" : \"departments\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000491\",\n    \"pluralLabel\" : \"Departments\",\n    \"singularLabel\" : \"Department\"\n  }, {\n    \"displayLabel\" : \"Agents\",\n    \"apiKey\" : \"agents\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000493\",\n    \"pluralLabel\" : \"Agents\",\n    \"singularLabel\" : \"Agent\"\n  }, {\n    \"displayLabel\" : \"Topics\",\n    \"apiKey\" : \"category\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000527\",\n    \"pluralLabel\" : \"Topics\",\n    \"singularLabel\" : \"Topic\"\n  }, {\n    \"displayLabel\" : \"Ticketss\",\n    \"apiKey\" : \"tickets\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000481\",\n    \"pluralLabel\" : \"Ticketss\",\n    \"singularLabel\" : \"Ticket\"\n  }, {\n    \"displayLabel\" : \"Reports\",\n    \"apiKey\" : \"reports\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000463\",\n    \"pluralLabel\" : \"Reports\",\n    \"singularLabel\" : \"Report\"\n  }, {\n    \"displayLabel\" : \"Dashboards\",\n    \"apiKey\" : \"dashboards\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000465\",\n    \"pluralLabel\" : \"Dashboards\",\n    \"singularLabel\" : \"Dashboard\"\n  }, {\n    \"displayLabel\" : \"Knowledge Base\",\n    \"apiKey\" : \"kbCategory\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000483\",\n    \"pluralLabel\" : \"Articles\",\n    \"singularLabel\" : \"Article\"\n  }, {\n    \"displayLabel\" : \"Contacts\",\n    \"apiKey\" : \"contacts\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000461\",\n    \"pluralLabel\" : \"Contacts\",\n    \"singularLabel\" : \"Contact\"\n  }, {\n    \"displayLabel\" : \"Products\",\n    \"apiKey\" : \"products\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000487\",\n    \"pluralLabel\" : \"Products\",\n    \"singularLabel\" : \"Product\"\n  }, {\n    \"displayLabel\" : \"Accounts\",\n    \"apiKey\" : \"accounts\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000459\",\n    \"pluralLabel\" : \"Accounts\",\n    \"singularLabel\" : \"Account\"\n  }, {\n    \"displayLabel\" : \"Community\",\n    \"apiKey\" : \"community\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000533\",\n    \"pluralLabel\" : \"Community\",\n    \"singularLabel\" : \"Community\"\n  }, {\n    \"displayLabel\" : \"Social\",\n    \"apiKey\" : \"social\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000535\",\n    \"pluralLabel\" : \"Social\",\n    \"singularLabel\" : \"Social\"\n  }, {\n    \"displayLabel\" : \"Chat\",\n    \"apiKey\" : \"chat\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000537\",\n    \"pluralLabel\" : \"Chat\",\n    \"singularLabel\" : \"Chat\"\n  }, {\n    \"displayLabel\" : \"Activities\",\n    \"apiKey\" : \"activities\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000471\",\n    \"pluralLabel\" : \"Activities\",\n    \"singularLabel\" : \"Activity\"\n  }, {\n    \"displayLabel\" : \"Calls\",\n    \"apiKey\" : \"calls\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000531\",\n    \"pluralLabel\" : \"Calls\",\n    \"singularLabel\" : \"Call\"\n  }, {\n    \"displayLabel\" : \"Tasks\",\n    \"apiKey\" : \"tasks\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000469\",\n    \"pluralLabel\" : \"Tasks\",\n    \"singularLabel\" : \"Task\"\n  }, {\n    \"displayLabel\" : \"Events\",\n    \"apiKey\" : \"events\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000529\",\n    \"pluralLabel\" : \"Events\",\n    \"singularLabel\" : \"Event\"\n  }, {\n    \"displayLabel\" : \"IM\",\n    \"apiKey\" : \"im\",\n    \"nameField\" : null,\n    \"id\" : \"1000000000475\",\n    \"pluralLabel\" : \"IM\",\n    \"singularLabel\" : \"IM\"\n  } ]\n}"
  },
  {
    "Api name": "Records",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A record represents a complete set of information associated with a particular entity or object stored within a module. Once a module is created, records can be created for that module. For example, within a doctor module, a list of doctors can be created, with each doctor being a distinct record within that module.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "The primary field of the Module for the record"
      },
      {
        "name": "layout show Attributes",
        "data_type": "object",
        "description": "The layout of the record"
      },
      {
        "name": "owner show Attributes",
        "data_type": "object",
        "description": "The owner of the record"
      },
      {
        "name": "cf show Attributes",
        "data_type": "object",
        "description": "The custom fields associated with the Module for the record"
      },
      {
        "name": "department show Attributes",
        "data_type": "object",
        "description": "Department associated with the record"
      },
      {
        "name": "id",
        "data_type": "Long",
        "description": "The unique ID of the record"
      },
      {
        "name": "isPresence",
        "data_type": "boolean",
        "description": "Specifies whether the record is trashed. The value will be 'false' for records that are in recyclebin."
      },
      {
        "name": "modifiedBy show Attributes",
        "data_type": "object",
        "description": "The user who modified the record"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Specifies the time at which changes were made to the record"
      },
      {
        "name": "createdBy show Attributes",
        "data_type": "object",
        "description": "The User who created the record"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Specifies the time of creation of the record"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a Record",
    "Api URL": "/api/v1/{moduleApiName}",
    "Api Method": "POST",
    "Desc": "This API creates a record for a module.Call the Organization field API:Call theOrganization field APIto get the required field information in the custom module.Collect the field API names:Extract the API names you want to include in your record from the response of the Organization field API. These API names will be used to specify the field values when creating the record.Pass the field information to the Record API:Make a request to the Record API, providing the field API names and their corresponding values to create the record.A sample record creation request is provided on the right side for reference.",
    "OAuth Scope": "Desk.custommodule.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/cm_doctors\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"layout\" : {\n    \"id\" : \"1000003000004\"\n  },\n  \"owner\" : {\n    \"id\" : \"1000000000375\"\n  },\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"department\" : {\n    \"id\" : \"1000000025632\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required",
        "description": "The primary field of the Module for the record"
      },
      {
        "name": "layout",
        "data_type": "jsonObject optional",
        "description": "Layout of the record"
      },
      {
        "name": "owner",
        "data_type": "jsonObject optional",
        "description": "The owner of the record"
      },
      {
        "name": "cf",
        "data_type": "jsonObject optional",
        "description": "Custom fields associated with the record"
      }
    ],
    "Response Example": "-d'{\n  \"layout\" : {\n    \"id\" : \"1000003000004\"\n  },\n  \"owner\" : {\n    \"id\" : \"1000000000375\"\n  },\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"department\" : {\n    \"id\" : \"1000000025632\"\n  }\n}'"
  },
  {
    "Api name": "Update a Record",
    "Api URL": "/api/v1/{moduleApiName}/{entityId}",
    "Api Method": "PATCH",
    "Desc": "This API Edits a record for a module.Call the Organization field API:Call theOrganization field APIto get the required field information in the custom module.Collect the field API names:Extract the API names you want to include in your record from the response of the Organization field API. These API names will be used to specify the field values when updating the record.Pass the field information to the Record API:Make a request to the Record API, providing the field API names and their corresponding values to update the record.A sample record update request is provided on the right side for reference.",
    "OAuth Scope": "Desk.custommodule.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/cm_doctors/1000003019049\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"layout\" : {\n    \"id\" : \"1000003000004\"\n  },\n  \"owner\" : {\n    \"id\" : \"1000000000375\"\n  },\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description change\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"department\" : {\n    \"id\" : \"1000000025632\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required",
        "description": "The primary field of the Module for the record"
      },
      {
        "name": "layout",
        "data_type": "jsonObject optional",
        "description": "Layout of the record"
      },
      {
        "name": "owner",
        "data_type": "jsonObject optional",
        "description": "The owner of the record"
      },
      {
        "name": "cf",
        "data_type": "jsonObject optional",
        "description": "Custom fields associated with the record"
      }
    ],
    "Response Example": "-d'{\n  \"layout\" : {\n    \"id\" : \"1000003000004\"\n  },\n  \"owner\" : {\n    \"id\" : \"1000000000375\"\n  },\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description change\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"department\" : {\n    \"id\" : \"1000000025632\"\n  }\n}'"
  },
  {
    "Api name": "Get a Record",
    "Api URL": "/api/v1/{moduleApiName}/{entityId}",
    "Api Method": "GET",
    "Desc": "This API fetches a single record.",
    "OAuth Scope": "Desk.custommodule.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/cm_doctors/1000003019049\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"layout\" : {\n    \"id\" : \"1000003000004\",\n    \"layoutName\" : \"Standard - Department1\"\n  },\n  \"owner\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\",\n    \"email\" : \"kyle@zylker.com\"\n  },\n  \"modifiedTime\" : \"2024-04-22T14:09:41.000Z\",\n  \"cf\" : {\n    \"cf_doctor_description\" : \"Doctor 1 description change\"\n  },\n  \"createdBy\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\",\n    \"email\" : \"kyle@zylker.com\"\n  },\n  \"name\" : \"Doctor 1\",\n  \"createdTime\" : \"2024-04-22T13:55:53.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n    \"id\" : \"4000000000329\",\n    \"email\" : \"kyle@zylker.com\"\n  },\n  \"isPresence\" : true,\n  \"id\" : \"1000003019049\",\n  \"department\" : {\n    \"departmentName\" : \"Department1\",\n    \"id\" : \"1000000025632\"\n  }\n}"
  },
  {
    "Api name": "Get Records",
    "Api URL": "/api/v1/{moduleApiName}",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of records, based on the limit specified.",
    "OAuth Scope": "Desk.custommodule.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/cm_doctors?limit=50&from=1&viewId=1000003000413&sortBy=-createdTime&fields=createdTime,id\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long optional",
        "description": "The ID of the view from which records need to be fetched."
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0",
        "description": "The starting index number from where the records should be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer optional, default : 50, range : 1-50",
        "description": "The number of records that need to be fetched."
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute. The allowed values are createdTime or modifiedTime . Note: The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "fields",
        "data_type": "string optional, max chars : 100",
        "description": "Key that returns the values of mentioned fields (both pre-defined and custom). Note: All field types except multi-text are supported. Standard, non-editable fields are supported too. Maximum of 30 fields is supported as comma separated values."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"layout\" : {\n      \"id\" : \"1000003000004\",\n      \"layoutName\" : \"Standard - Department1\"\n    },\n    \"owner\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"modifiedTime\" : \"2024-04-22T14:18:17.000Z\",\n    \"createdBy\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"name\" : \"Doctor 2\",\n    \"createdTime\" : \"2024-04-22T14:18:17.000Z\",\n    \"modifiedBy\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"id\" : \"1000003019058\",\n    \"department\" : {\n      \"departmentName\" : \"Department1\",\n      \"id\" : \"1000000025632\"\n    }\n  }, {\n    \"layout\" : {\n      \"id\" : \"1000003000004\",\n      \"layoutName\" : \"Standard - Department1\"\n    },\n    \"owner\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"modifiedTime\" : \"2024-04-22T14:09:41.000Z\",\n    \"createdBy\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"name\" : \"Doctor 1\",\n    \"createdTime\" : \"2024-04-22T13:55:53.000Z\",\n    \"modifiedBy\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Kyle\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000329/photo?orgId=3981311\",\n      \"id\" : \"4000000000329\",\n      \"email\" : \"kyle@zylker.com\"\n    },\n    \"id\" : \"1000003019049\",\n    \"department\" : {\n      \"departmentName\" : \"Department1\",\n      \"id\" : \"1000000025632\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Get record count",
    "Api URL": "/api/v1/{moduleApiName}/count",
    "Api Method": "GET",
    "Desc": "This API fetches the number of records.",
    "OAuth Scope": "Desk.custommodule.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/cm_doctors/count?viewId=1000003000413\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "ID of the view from which the record count needs to be fetched."
      }
    ],
    "Response Example": "{\n  \"count\" : \"2\"\n}"
  },
  {
    "Api name": "Move Records To Trash",
    "Api URL": "/api/v1/{moduleApiName}/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves records to the Recycle Bin.",
    "OAuth Scope": "Desk.custommodule.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/cm_doctors/moveToTrash\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"recordIds\" : [ \"1000003019001\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "recordIds",
        "data_type": "list required",
        "description": "IDs of the records to move to the Recycle Bin"
      }
    ],
    "Response Example": "-d'{\n  \"recordIds\" : [ \"1000003019001\" ]\n}'"
  },
  {
    "Api name": "Update Many records",
    "Api URL": "/api/v1/{moduleApiName}/updateMany",
    "Api Method": "POST",
    "Desc": "The API simultaneously updates multiple records.",
    "OAuth Scope": "Desk.custommodule.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/cm_doctors/updateMany\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldName\" : \"cf_doctor_description\",\n  \"ids\" : [ \"1000003019070\", \"1000003019058\" ],\n  \"fieldValue\" : \"Doctor description\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the records to update. Note: The maximum number of IDs allowed is 50."
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 320",
        "description": "Name of the field to update"
      },
      {
        "name": "fieldValue",
        "data_type": "string optional, max chars : 320",
        "description": "Value in the field"
      }
    ],
    "Response Example": "-d'{\n  \"fieldName\" : \"cf_doctor_description\",\n  \"ids\" : [ \"1000003019070\", \"1000003019058\" ],\n  \"fieldValue\" : \"Doctor description\"\n}'"
  },
  {
    "Api name": "OrganizationFields",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Account refers to customer organizations that use your products or services. An account can have multiple contacts.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isEncryptedField",
        "data_type": "boolean",
        "description": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Name of the field on the UI"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get organization fields in a module",
    "Api URL": "/api/v1/organizationFields",
    "Api Method": "GET",
    "Desc": "This API fetches fields in a module",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizationFields?module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "the module name with in which search to be done. Value may be tickets, contacts , accounts  ,tasks , calls , events, timeEntry,products, contracts, agents"
      },
      {
        "name": "apiNames",
        "data_type": "string optional, max chars : 100",
        "description": "Key that fetches only the fields whose apiNames are given. Multiple values can be passed, with commas for separation."
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "Key that fetches only the fields for the given departmentId."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"displayLabel\" : \"Department\",\n    \"apiName\" : \"departmentId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000353\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Account Name\",\n    \"apiName\" : \"accountId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000355\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Contact Name\",\n    \"apiName\" : \"contactId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000357\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Email\",\n    \"apiName\" : \"email\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000359\",\n    \"type\" : \"Email\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Phone\",\n    \"apiName\" : \"phone\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000361\",\n    \"type\" : \"Phone\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Subject\",\n    \"apiName\" : \"subject\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000363\",\n    \"type\" : \"Text\",\n    \"maxLength\" : 255,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Description\",\n    \"apiName\" : \"description\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000365\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open_july\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open_newDept\"\n    }, {\n      \"statusType\" : \"On Hold\",\n      \"value\" : \"On Hold\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Escalated\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"Closed1\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Closed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"newDeptClosed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"julyDeptClosed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"julyDeptClosed1\"\n    } ],\n    \"apiName\" : \"status\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000367\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Product Name\",\n    \"apiName\" : \"productId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000369\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Case Owner\",\n    \"apiName\" : \"assigneeId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000371\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ {\n      \"value\" : \"General\"\n    }, {\n      \"value\" : \"Defects\"\n    }, {\n      \"value\" : \"ManojKumar\"\n    } ],\n    \"apiName\" : \"category\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000421\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Sub Category\",\n    \"allowedValues\" : [ {\n      \"value\" : \"Sub General\"\n    }, {\n      \"value\" : \"Sub Defects\"\n    }, {\n      \"value\" : \"Sub Defects1235\"\n    } ],\n    \"apiName\" : \"subCategory\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000423\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Due Date\",\n    \"apiName\" : \"dueDate\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000405\",\n    \"type\" : \"DateTime\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ {\n      \"value\" : \"-None-\"\n    }, {\n      \"value\" : \"High\"\n    }, {\n      \"value\" : \"Medium\"\n    }, {\n      \"value\" : \"Low\"\n    } ],\n    \"apiName\" : \"priority\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000407\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Mode\",\n    \"allowedValues\" : [ {\n      \"value\" : \"Phone\"\n    }, {\n      \"value\" : \"Email\"\n    }, {\n      \"value\" : \"Web\"\n    }, {\n      \"value\" : \"Twitter\"\n    }, {\n      \"value\" : \"Facebook\"\n    }, {\n      \"value\" : \"Chat\"\n    }, {\n      \"value\" : \"Forums\"\n    }, {\n      \"value\" : \"Feedback Widget\"\n    } ],\n    \"apiName\" : \"channel\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000409\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Is Overdue\",\n    \"apiName\" : \"Is Overdue\",\n    \"isCustomField\" : false,\n    \"defaultValue\" : \"true\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000411\",\n    \"type\" : \"Boolean\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Is Escalated\",\n    \"apiName\" : \"Is Escalated\",\n    \"isCustomField\" : false,\n    \"defaultValue\" : \"true\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000413\",\n    \"type\" : \"Boolean\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Classification\",\n    \"allowedValues\" : [ {\n      \"value\" : \"-None-\"\n    }, {\n      \"value\" : \"Question\"\n    }, {\n      \"value\" : \"Problem\"\n    }, {\n      \"value\" : \"Feature\"\n    }, {\n      \"value\" : \"Others\"\n    } ],\n    \"apiName\" : \"classification\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000415\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Resolution\",\n    \"apiName\" : \"resolution\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000417\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Sample Text Field\",\n    \"apiName\" : \"cf_sample_text_field\",\n    \"isCustomField\" : false,\n    \"toolTipType\" : \"placeHolder\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"toolTip\" : \"Sample Text Field\",\n    \"id\" : \"4000000000447\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Large Text Field\",\n    \"apiName\" : \"cf_large_text_field\",\n    \"isCustomField\" : true,\n    \"i18NLabel\" : \"Large Text Field\",\n    \"name\" : \"LargeText field\",\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000449\",\n    \"type\" : \"LargeText\",\n    \"maxLength\" : 16000000,\n    \"isMandatory\" : false,\n    \"properties\" : {\n      \"translatable\" : true\n    }\n  } ]\n}"
  },
  {
    "Api name": "Create Field",
    "Api URL": "/api/v1/organizationFields",
    "Api Method": "POST",
    "Desc": "This API creates a field",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/organizationFields?module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : true,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"50\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Name of the module whose fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, timeEntry, products , calls , events, and contracts."
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isEncryptedField",
        "data_type": "boolean optional",
        "description": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption"
      },
      {
        "name": "displayLabel",
        "data_type": "string required, max chars : 250",
        "description": "Name of the field on the UI"
      },
      {
        "name": "name deprecated",
        "data_type": "string optional, max chars : 250",
        "description": "Name of the custom field"
      },
      {
        "name": "type",
        "data_type": "string required, max chars : 100",
        "description": "Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText"
      },
      {
        "name": "maxLength",
        "data_type": "integer optional",
        "description": "Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields"
      },
      {
        "name": "decimalPlaces",
        "data_type": "integer optional",
        "description": "Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields"
      },
      {
        "name": "roundingPrecision",
        "data_type": "integer optional",
        "description": "Precision of the value in the field. Precision refers to the total number of digits in a decimal number. For example, the precision of 30.12 is 4. Applicable for Currency fields"
      },
      {
        "name": "roundingOption",
        "data_type": "string optional, max chars : 120",
        "description": "Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp. Applicable only for Currency fields"
      },
      {
        "name": "defaultValue",
        "data_type": "string optional, max chars : 120",
        "description": "Default value set for a field. Applicable for Checkbox fields"
      },
      {
        "name": "toolTip",
        "data_type": "string optional, max chars : 200",
        "description": "the tool tip of the field"
      },
      {
        "name": "toolTipType",
        "data_type": "string optional, max chars : 200",
        "description": "the tool tip of the field"
      },
      {
        "name": "isTrackLastActivityTime",
        "data_type": "boolean optional",
        "description": "While enabled tracks the last activity of the particular field"
      }
    ],
    "Response Example": "-d'{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : true,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"50\"\n}'"
  },
  {
    "Api name": "Edit Field",
    "Api URL": "/api/v1/organizationFields/{field_id}",
    "Api Method": "PATCH",
    "Desc": "This API edits a field",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/organizationFields/4000000049001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"40\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isEncryptedField",
        "data_type": "boolean optional",
        "description": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption"
      },
      {
        "name": "displayLabel",
        "data_type": "string optional, max chars : 250",
        "description": "Name of the field on the UI"
      },
      {
        "name": "name deprecated",
        "data_type": "string optional, max chars : 250",
        "description": "Name of the custom field"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 100",
        "description": "Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText"
      },
      {
        "name": "maxLength",
        "data_type": "integer optional",
        "description": "Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields"
      },
      {
        "name": "decimalPlaces",
        "data_type": "integer optional",
        "description": "Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields"
      },
      {
        "name": "roundingPrecision",
        "data_type": "integer optional",
        "description": "Precision of the value in the field. Precision refers to the total number of digits in a decimal number. For example, the precision of 30.12 is 4. Applicable for Currency fields"
      },
      {
        "name": "roundingOption",
        "data_type": "string optional, max chars : 120",
        "description": "Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp. Applicable only for Currency fields"
      },
      {
        "name": "defaultValue",
        "data_type": "string optional, max chars : 120",
        "description": "Default value set for a field. Applicable for Checkbox fields"
      },
      {
        "name": "toolTip",
        "data_type": "string optional, max chars : 200",
        "description": "the tool tip of the field"
      },
      {
        "name": "toolTipType",
        "data_type": "string optional, max chars : 200",
        "description": "the tool tip of the field"
      },
      {
        "name": "isTrackLastActivityTime",
        "data_type": "boolean optional",
        "description": "While enabled tracks the last activity of the particular field"
      }
    ],
    "Response Example": "-d'{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"40\"\n}'"
  },
  {
    "Api name": "Get Field",
    "Api URL": "/api/v1/organizationFields/{field_id}",
    "Api Method": "GET",
    "Desc": "This API get a field",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizationFields/4000000049001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"apiName\" : \"cf_sample_text_field\",\n  \"isCustomField\" : true,\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"id\" : \"4000000049001\",\n  \"type\" : \"Text\",\n  \"maxLength\" : 40,\n  \"isMandatory\" : false\n}"
  },
  {
    "Api name": "Get Field Permissions",
    "Api URL": "/api/v1/organizationFields/{field_id}/permissions",
    "Api Method": "GET",
    "Desc": "This API get a field permissions for all the profiles",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/organizationFields/4000000049001/permissions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"profileName\" : \"Administrator\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Standard\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Supervisor\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Support Manager\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Newbie Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Light Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  } ]\n}"
  },
  {
    "Api name": "Update Field Permissions",
    "Api URL": "/api/v1/organizationFields/{field_id}/permissions",
    "Api Method": "PATCH",
    "Desc": "This API update field permissions",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/organizationFields/4000000049001/permissions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"profiles\" : [ {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isWriteOnly\" : true\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "profiles",
        "data_type": "list optional",
        "description": "null"
      }
    ],
    "Response Example": "-d'{\n  \"profiles\" : [ {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isWriteOnly\" : true\n  } ]\n}'"
  },
  {
    "Api name": "Delete Field",
    "Api URL": "/api/v1/organizationFields/{field_id}",
    "Api Method": "DELETE",
    "Desc": "This API delete a custom field",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/organizationFields/4000000049001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get organization custom fields count in a module",
    "Api URL": "/api/v1/customFieldCount",
    "Api Method": "GET",
    "Desc": "This API returns the custom field count allowed and available in a module.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/customFieldCount?module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Name of the module whose allowed and available custom fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, calls, events, timeEntry, products, and contracts."
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department in which the layout is configured."
      }
    ],
    "Response Example": "{\n  \"customFieldCounts\" : [ {\n    \"types\" : [ \"Text\", \"PickList\", \"Email\", \"Phone\", \"Website\" ],\n    \"maximumLimit\" : 100,\n    \"available\" : 100,\n    \"type\" : \"Varchar\"\n  }, {\n    \"types\" : [ \"Textarea\", \"Multiselect\" ],\n    \"maximumLimit\" : 30,\n    \"available\" : 30,\n    \"type\" : \"Text\"\n  }, {\n    \"types\" : [ \"Number\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Integer\"\n  }, {\n    \"types\" : [ \"Percent\", \"Decimal\", \"Currency\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Double\"\n  }, {\n    \"types\" : [ \"Date\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Date\"\n  }, {\n    \"types\" : [ \"DateTime\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"DateTime\"\n  }, {\n    \"types\" : [ \"Checkbox\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Boolean\"\n  }, {\n    \"types\" : [ \"Text\", \"Website\", \"Email\", \"Number\", \"Phone\", \"Percent\", \"Decimal\" ],\n    \"maximumLimit\" : 10,\n    \"available\" : 10,\n    \"type\" : \"DESK_SEARCHABLE_CTEXT_OEK\"\n  }, {\n    \"maximumLimit\" : 10,\n    \"available\" : 10,\n    \"type\" : \"Formula\"\n  } ],\n  \"totalAvailableCount\" : 230\n}"
  },
  {
    "Api name": "Get organization custom fields criteria references",
    "Api URL": "/api/v1/organizationFields/{field_id}/criteriaReferences",
    "Api Method": "GET",
    "Desc": "This API fetches criteria references of a custom field",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/organizationFields/4000000049001/criteriaReferences?featureType=DirectAssignment&from=0&limit30\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "featureType",
        "data_type": "String required",
        "description": "Feature name from which criteria references has to be fetched - DirectAssignment, RoundRobin, WorkFlow, SLA, Supervise, BluePrint, CustomView, Report, GameTrophy, GameBadge, LayoutRules, ValidationRules"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 0, range : >=0",
        "description": "Index number, starting from which the rules must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-50",
        "description": "Number of references to fetch"
      }
    ],
    "Response Example": "{\n  \"DirectAssignment\" : [ {\n    \"encryptedId\" : \"c50bd2066db398caace9491e3010e657\",\n    \"name\" : \"DA Rule1\",\n    \"id\" : 21000000057136\n  }, {\n    \"encryptedId\" : \"c50bd2066db398caace9491e789a5cb3\",\n    \"name\" : \"DA Rule2\",\n    \"id\" : 21000000067146\n  } ]\n}"
  },
  {
    "Api name": "Layouts",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Layouts define the arrangement and necessity of fields in forms used to capture details of help desk resources: Tickets, Tasks, Contacts, and so on. Each department can have unique layouts with both default and custom fields. You can also determine the visibility settings for each field in a layout.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the layout"
      },
      {
        "name": "createdBy",
        "data_type": "long",
        "description": "ID of user who created the layout"
      },
      {
        "name": "modifiedBy",
        "data_type": "long",
        "description": "ID of user who modified the layout"
      },
      {
        "name": "departmentId",
        "data_type": "long",
        "description": "ID of department in which the layout is configured"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Time of creating the layout"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Time of modifying the layout"
      },
      {
        "name": "isDefaultLayout",
        "data_type": "boolean",
        "description": "Key that returns if the layout is the default layout in the module"
      },
      {
        "name": "layoutName",
        "data_type": "string",
        "description": "Name of the layout"
      },
      {
        "name": "layoutDesc",
        "data_type": "string",
        "description": "Description of the layout"
      },
      {
        "name": "layoutDisplayName",
        "data_type": "string",
        "description": "Display Name of the layout in HelpCenter"
      },
      {
        "name": "sections show Attributes",
        "data_type": "list",
        "description": "sections in the layout"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the section"
      },
      {
        "name": "isCustomSection",
        "data_type": "boolean",
        "description": "Key that returns if the section is a user-defined section"
      },
      {
        "name": "name",
        "data_type": "null",
        "description": "Name of the section"
      },
      {
        "name": "i18NLabel",
        "data_type": "string",
        "description": "i18nlabel for the section name"
      },
      {
        "name": "fields show Attributes",
        "data_type": "list",
        "description": "Fields in the section"
      },
      {
        "name": "sortField",
        "data_type": "string",
        "description": "sort field"
      },
      {
        "name": "searchFields show Attributes",
        "data_type": "list",
        "description": "search fields"
      },
      {
        "name": "selectFields show Attributes",
        "data_type": "list",
        "description": "select fields"
      },
      {
        "name": "preFillFields show Attributes",
        "data_type": "list",
        "description": "preFill fields"
      },
      {
        "name": "currentModuleField",
        "data_type": "string",
        "description": "current module field"
      },
      {
        "name": "parentModuleField",
        "data_type": "string",
        "description": "parent module field"
      },
      {
        "name": "filter show Attributes",
        "data_type": "object",
        "description": "filter details"
      },
      {
        "name": "filterDisplayPreference",
        "data_type": "string",
        "description": "filter display preference"
      },
      {
        "name": "filterName",
        "data_type": "string",
        "description": "lookup filter display name"
      },
      {
        "name": "messageIfLookupDataEmpty",
        "data_type": "string",
        "description": "message if lookupData is empty"
      },
      {
        "name": "criteriaPattern",
        "data_type": "string",
        "description": "pattern of the criteria provided."
      },
      {
        "name": "criteriaFields show Attributes",
        "data_type": "list",
        "description": "criteria fields of lookup field filter"
      },
      {
        "name": "field show Attributes",
        "data_type": "object",
        "description": "API name of the field."
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "API name of the field's module."
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "API name of the field"
      },
      {
        "name": "fieldLabel",
        "data_type": "string",
        "description": "Field label"
      },
      {
        "name": "path",
        "data_type": "string",
        "description": "Path of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "Criteria filter condition to compare."
      },
      {
        "name": "value show Attributes",
        "data_type": "object",
        "description": "Value of the criteria."
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "RHS Type"
      },
      {
        "name": "primitive show Attributes",
        "data_type": "object",
        "description": "PrimitiveValue"
      },
      {
        "name": "field show Attributes",
        "data_type": "string",
        "description": "RHS field."
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "API name of the field's module."
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "API name of the field"
      },
      {
        "name": "fieldLabel",
        "data_type": "string",
        "description": "Field label"
      },
      {
        "name": "path",
        "data_type": "string",
        "description": "Path of the field"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Layouts",
    "Api URL": "/api/v1/layouts",
    "Api Method": "GET",
    "Desc": "This API lists all the layouts configured for a module.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts?module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Name of the module whose layouts must be fetched. The allowed values are tickets, contacts, accounts, calls, events, tasks, timeEntry, products, and contracts"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department in which the layouts are configured"
      },
      {
        "name": "status",
        "data_type": "String required, default : active",
        "description": "Status of the layout. The allowed values are active,inactive, and all"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 0",
        "description": "The starting index number from where the layouts should be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 100",
        "description": "The number of layouts to be fetched"
      },
      {
        "name": "layoutName",
        "data_type": "string optional, max chars : 200",
        "description": "Name of the layout"
      },
      {
        "name": "id",
        "data_type": "long optional",
        "description": "ID of the layout"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2019-05-09T06:24:10.000Z\",\n    \"departmentId\" : \"4000000012710\",\n    \"module\" : \"Cases\",\n    \"layoutDisplayName\" : \"New Layout For Tickets\",\n    \"layoutDesc\" : \"DESC\",\n    \"isDefaultLayout\" : true,\n    \"layoutName\" : \"New Layout For Tickets\",\n    \"skipDeptAccessValidation\" : false,\n    \"layoutProfiles\" : [ {\n      \"profileName\" : \"Support Administrator\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015183\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"profileName\" : \"Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015186\",\n      \"type\" : \"STANDARD\"\n    }, {\n      \"profileName\" : \"Help Center\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015189\",\n      \"type\" : \"PORTAL\"\n    } ],\n    \"createdBy\" : \"4000000015894\",\n    \"createdTime\" : \"2019-05-03T06:36:33.000Z\",\n    \"modifiedBy\" : \"4000000015894\",\n    \"id\" : \"4000000013464\",\n    \"status\" : \"active\"\n  }, {\n    \"modifiedTime\" : \"2019-05-06T01:45:58.000Z\",\n    \"departmentId\" : \"4000000012710\",\n    \"module\" : \"Cases\",\n    \"layoutDisplayName\" : \"cloneLayout\",\n    \"layoutDesc\" : \"DESC\",\n    \"isDefaultLayout\" : false,\n    \"layoutName\" : \"cloneLayout\",\n    \"skipDeptAccessValidation\" : false,\n    \"layoutProfiles\" : [ {\n      \"profileName\" : \"Support Administrator\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015183\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"profileName\" : \"Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015186\",\n      \"type\" : \"STANDARD\"\n    }, {\n      \"profileName\" : \"Help Center\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015189\",\n      \"type\" : \"PORTAL\"\n    }, {\n      \"profileName\" : \"Supervisor\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015192\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Support Manager\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015195\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Newbie Agent\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015198\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Light Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015201\",\n      \"type\" : \"LIGHT\"\n    } ],\n    \"createdBy\" : \"4000000015894\",\n    \"createdTime\" : \"2019-05-06T01:45:58.000Z\",\n    \"modifiedBy\" : \"4000000015894\",\n    \"id\" : \"4000000017001\",\n    \"status\" : \"active\"\n  } ]\n}"
  },
  {
    "Api name": "Get Layout",
    "Api URL": "/api/v1/layouts/{layout_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a layout configured for a module",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000007177\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000009118\",\n  \"departmentId\" : \"4000000007175\",\n  \"layoutDisplayName\" : \"Default Ticket Layout\",\n  \"createdTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"modifiedBy\" : \"\",\n  \"id\" : \"4000000007177\",\n  \"isDefaultLayout\" : true,\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"apiName\" : \"departmentId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000353\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"apiName\" : \"contactId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000357\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"apiName\" : \"accountId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000355\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"apiName\" : \"email\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000359\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"apiName\" : \"phone\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000361\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Education Type\",\n      \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n      \"apiName\" : \"cf_education_type\",\n      \"isCustomField\" : true,\n      \"defaultValue\" : \"Education :: University :: Private\",\n      \"isNested\" : true,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000009999\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"apiName\" : \"subCategory\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Sub General\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"apiName\" : \"category\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"General\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000421\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"apiName\" : \"subject\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000363\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"apiName\" : \"description\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000365\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"apiName\" : \"status\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Case Owner\",\n      \"apiName\" : \"assigneeId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000371\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"apiName\" : \"productId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000369\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"apiName\" : \"dueDate\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000405\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"apiName\" : \"priority\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000407\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"apiName\" : \"channel\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Overdue\",\n      \"apiName\" : \"Is Overdue\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000411\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Escalated\",\n      \"apiName\" : \"Is Escalated\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000413\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"apiName\" : \"classification\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"apiName\" : \"resolution\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000417\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sample TextArea\",\n      \"apiName\" : \"cf_sample_textarea\",\n      \"isCustomField\" : true,\n      \"toolTipType\" : \"placeHolder\",\n      \"isEncryptedField\" : false,\n      \"toolTip\" : \"Sample Field\",\n      \"id\" : \"4000000000447\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutDesc\" : \"Default Layout of the Ticket\",\n  \"layoutName\" : \"Default Ticket Layout\"\n}"
  },
  {
    "Api name": "Clone Layout",
    "Api URL": "/api/v1/layouts/{layout_id}/clone",
    "Api Method": "POST",
    "Desc": "This API creates new Layout by cloning existing layout.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000013462/clone\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"isDefaultLayout\" : false,\n  \"layoutDesc\" : \"Layout of the accounts\",\n  \"layoutName\" : \"cloneAccLayout1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutName",
        "data_type": "string required, max chars : 150",
        "description": "Name of the layout"
      },
      {
        "name": "layoutDesc",
        "data_type": "string optional, max chars : 500",
        "description": "Description of the layout"
      },
      {
        "name": "layoutDisplayName",
        "data_type": "string required, max chars : 150",
        "description": "Display Name of the layout in HelpCenter"
      },
      {
        "name": "isDefaultLayout",
        "data_type": "boolean required",
        "description": "Key that returns if the layout is the default layout in the module"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Id which helps to clone a layout in another department"
      }
    ],
    "Response Example": "-d'{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"isDefaultLayout\" : false,\n  \"layoutDesc\" : \"Layout of the accounts\",\n  \"layoutName\" : \"cloneAccLayout1\"\n}'"
  },
  {
    "Api name": "Create Layout",
    "Api URL": "/api/v1/layouts",
    "Api Method": "POST",
    "Desc": "This API creates the layout",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skipDeptAccessValidation\" : false,\n  \"module\" : \"accounts\",\n  \"departmentId\" : \"4000000012710\",\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"DESC\",\n  \"sections\" : [ {\n    \"name\" : \"Account Information\",\n    \"i18NLabel\" : \"Account Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000404\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000408\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000406\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000410\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000438\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000412\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"accounts layout \"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isDefaultLayout",
        "data_type": "boolean required",
        "description": "Key that returns if the layout is the default layout in the module"
      },
      {
        "name": "sections",
        "data_type": "list required",
        "description": "sections in the layout"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "mdoule name"
      }
    ],
    "Response Example": "-d'{\n  \"skipDeptAccessValidation\" : false,\n  \"module\" : \"accounts\",\n  \"departmentId\" : \"4000000012710\",\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"DESC\",\n  \"sections\" : [ {\n    \"name\" : \"Account Information\",\n    \"i18NLabel\" : \"Account Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000404\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000408\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000406\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000410\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000438\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000412\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"accounts layout \"\n}'"
  },
  {
    "Api name": "Update Layout",
    "Api URL": "/api/v1/layouts/{layout_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing layout.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/layouts/4000000007177\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"layoutDesc\" : \"Layout cloned from default layout\",\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"i18NLabel\" : \"Ticket Information\",\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000353\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000357\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000355\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000359\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000361\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n      \"defaultValue\" : \"Education :: University :: Private\",\n      \"isNested\" : true,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000009999\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"defaultValue\" : \"Sub General\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"defaultValue\" : \"General\",\n      \"isNested\" : false,\n      \"id\" : \"4000000000421\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000363\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000365\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"defaultValue\" : \"Open\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000371\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000369\",\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"i18NLabel\" : \"Additional Information\",\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"id\" : \"4000000000405\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"id\" : \"4000000000407\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"defaultValue\" : \"Phone\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000411\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000413\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000417\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000447\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"ClonedLayout\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isDefaultLayout",
        "data_type": "boolean optional",
        "description": "Key that returns if the layout is the default layout in the module"
      },
      {
        "name": "sections",
        "data_type": "list optional",
        "description": "sections in the layout"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "mdoule name"
      }
    ],
    "Response Example": "-d'{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"layoutDesc\" : \"Layout cloned from default layout\",\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"i18NLabel\" : \"Ticket Information\",\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000353\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000357\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000355\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000359\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000361\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n      \"defaultValue\" : \"Education :: University :: Private\",\n      \"isNested\" : true,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000009999\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"defaultValue\" : \"Sub General\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"defaultValue\" : \"General\",\n      \"isNested\" : false,\n      \"id\" : \"4000000000421\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000363\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000365\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"defaultValue\" : \"Open\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000371\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000369\",\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"i18NLabel\" : \"Additional Information\",\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"id\" : \"4000000000405\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"id\" : \"4000000000407\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"defaultValue\" : \"Phone\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000411\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000413\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000417\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000447\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"ClonedLayout\"\n}'"
  },
  {
    "Api name": "Delete Layout",
    "Api URL": "/api/v1/layouts/{layout_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a layout",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/layouts/4000000038053\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"transferToLayoutId\" : \"4000000038039\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "transferToLayoutId",
        "data_type": "long required",
        "description": "The layout id to which the entities in the deleted layout to be transferred to"
      }
    ],
    "Response Example": "-d'{\n  \"transferToLayoutId\" : \"4000000038039\"\n}'"
  },
  {
    "Api name": "DeActivate Layout",
    "Api URL": "/api/v1/layouts/{layout_id}/deactivate",
    "Api Method": "POST",
    "Desc": "This Api deactivates existing layout",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000038053/deactivate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"transferToLayoutId\" : \"4000000038039\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "transferToLayoutId",
        "data_type": "long required",
        "description": "The layout id to which the entities in the deleted layout to be transferred to"
      }
    ],
    "Response Example": "-d'{\n  \"transferToLayoutId\" : \"4000000038039\"\n}'"
  },
  {
    "Api name": "Activate Layout",
    "Api URL": "/api/v1/layouts/{layout_id}/activate",
    "Api Method": "POST",
    "Desc": "This api activates the deactivated Layout.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000038053/activate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2019-05-09T09:42:28.000Z\",\n  \"departmentId\" : \"4000000012710\",\n  \"module\" : \"Cases\",\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"layoutDesc\" : \"DESC\",\n  \"isDefaultLayout\" : false,\n  \"sections\" : [ {\n    \"name\" : \"Case Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"isCustomField\" : false,\n      \"name\" : \"departmentId\",\n      \"id\" : \"4000000000556\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"contactId\",\n      \"id\" : \"4000000000560\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountId\",\n      \"id\" : \"4000000000558\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000562\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000564\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"isCustomField\" : false,\n      \"name\" : \"subject\",\n      \"id\" : \"4000000000566\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"isCustomField\" : false,\n      \"name\" : \"description\",\n      \"id\" : \"4000000000568\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000570\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Ticket Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"assigneeId\",\n      \"id\" : \"4000000000574\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"productId\",\n      \"id\" : \"4000000000572\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"isCustomField\" : false,\n      \"name\" : \"dueDate\",\n      \"id\" : \"4000000000610\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"name\" : \"priority\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000614\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Channel\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"name\" : \"channel\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000616\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"name\" : \"classification\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000622\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"isCustomField\" : false,\n      \"name\" : \"resolution\",\n      \"id\" : \"4000000000624\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"Tickets New Layout 6\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000015894\",\n  \"createdTime\" : \"2019-05-06T05:30:06.000Z\",\n  \"modifiedBy\" : \"4000000015894\",\n  \"id\" : \"4000000038033\",\n  \"status\" : \"active\"\n}"
  },
  {
    "Api name": "Get Layout Profiles",
    "Api URL": "/api/v1/layouts/{layout_id}/profiles",
    "Api Method": "GET",
    "Desc": "This api returns the profiles associated with a layout",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000038033/profiles\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"profileName\" : \"Support Administrator\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015183\",\n    \"type\" : \"ADMIN\"\n  }, {\n    \"profileName\" : \"Agent\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015186\",\n    \"type\" : \"STANDARD\"\n  }, {\n    \"profileName\" : \"Help Center\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015189\",\n    \"type\" : \"PORTAL\"\n  }, {\n    \"profileName\" : \"Supervisor\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015192\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Support Manager\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015195\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Newbie Agent\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015198\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Light Agent\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015201\",\n    \"type\" : \"LIGHT\"\n  } ]\n}"
  },
  {
    "Api name": "Associate Layout profiles",
    "Api URL": "/api/v1/layouts/{layout_id}/profiles",
    "Api Method": "PATCH",
    "Desc": "This api Associates the given profiles to the layout",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/layouts/4000000013464/profiles\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"layoutProfileIds\" : [ 4000000015183, 4000000015186, 4000000015189 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutProfileIds",
        "data_type": "list optional",
        "description": "The profile id to which the layout needs to be associated to"
      }
    ],
    "Response Example": "-d'{\n  \"layoutProfileIds\" : [ 4000000015183, 4000000015186, 4000000015189 ]\n}'"
  },
  {
    "Api name": "Standard Layout Format",
    "Api URL": "/api/v1/layouts/standardLayoutFormat",
    "Api Method": "GET",
    "Desc": "This Api provides the standrd layout format for the given module with organisations fields that can be used for create layout",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/standardLayoutFormat?module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Name of the module whose layouts must be fetched. Values allowed are tickets, contacts, accounts , calls , events, tasks, timeEntry, products, and contracts."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"name\" : \"Case Information\",\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"isCustomField\" : false,\n      \"name\" : \"departmentId\",\n      \"id\" : \"4000000000556\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountId\",\n      \"id\" : \"4000000000558\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"contactId\",\n      \"id\" : \"4000000000560\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000562\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000564\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"isCustomField\" : false,\n      \"name\" : \"subject\",\n      \"id\" : \"4000000000566\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"isCustomField\" : false,\n      \"name\" : \"description\",\n      \"id\" : \"4000000000568\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000570\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"productId\",\n      \"id\" : \"4000000000572\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Ticket Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"assigneeId\",\n      \"id\" : \"4000000000574\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"isCustomField\" : false,\n      \"name\" : \"dueDate\",\n      \"id\" : \"4000000000610\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"priority\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000614\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Channel\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"name\" : \"channel\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000616\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"classification\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000622\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"isCustomField\" : false,\n      \"name\" : \"resolution\",\n      \"id\" : \"4000000000624\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "Get MyForm",
    "Api URL": "/api/v1/myForm",
    "Api Method": "GET",
    "Desc": "This API fetches details of a layout, based on the profile of the current user.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myForm?layoutId=4000000007177\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutId",
        "data_type": "long optional",
        "description": "ID of the layout"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2017-07-10T10:32:11.000Z\",\n  \"createdBy\" : \"4000000009118\",\n  \"departmentId\" : \"4000000007175\",\n  \"createdTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"modifiedBy\" : \"4000000009118\",\n  \"id\" : \"4000000007177\",\n  \"isDefaultLayout\" : true,\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"apiName\" : \"departmentId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000353\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"apiName\" : \"contactId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000357\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"apiName\" : \"accountId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000355\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"apiName\" : \"email\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000359\",\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"apiName\" : \"phone\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000361\",\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Education Type\",\n      \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n      \"apiName\" : \"cf_education_type\",\n      \"isCustomField\" : true,\n      \"defaultValue\" : \"Education :: University :: Private\",\n      \"isNested\" : true,\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000009999\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"apiName\" : \"subCategory\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Sub General\",\n      \"isNested\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000423\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\", \"ManojKumar\" ],\n      \"apiName\" : \"category\",\n      \"isCustomField\" : false,\n      \"isReadOnly\" : false,\n      \"defaultValue\" : \"General\",\n      \"isNested\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000421\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"apiName\" : \"subject\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000363\",\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"apiName\" : \"description\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000365\",\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"Open_newDept\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\", \"julyDeptClosed\", \"julyDeptClosed1\" ],\n      \"apiName\" : \"status\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isNested\" : false,\n      \"type\" : \"Picklist\",\n      \"isReadOnly\" : false,\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Open_newDept\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"julyDeptClosed\", \"julyDeptClosed1\", \"Open\" ],\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000367\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Case Owner\",\n      \"apiName\" : \"assigneeId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000371\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"apiName\" : \"productId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000369\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"apiName\" : \"dueDate\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000405\",\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"apiName\" : \"priority\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000407\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"apiName\" : \"channel\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isNested\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000409\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Overdue\",\n      \"apiName\" : \"Is Overdue\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000411\",\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Escalated\",\n      \"apiName\" : \"Is Escalated\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000413\",\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"apiName\" : \"classification\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isNested\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000415\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"apiName\" : \"resolution\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000417\",\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sample TextArea\",\n      \"apiName\" : \"cf_sample_textarea\",\n      \"isCustomField\" : true,\n      \"toolTipType\" : \"placeHolder\",\n      \"isEncryptedField\" : false,\n      \"toolTip\" : \"Sample Field\",\n      \"id\" : \"4000000000447\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"Default Ticket Layout\"\n}"
  },
  {
    "Api name": "Replace PickList Value in all Existing Records",
    "Api URL": "/api/v1/layouts/{layout_id}/replaceValues",
    "Api Method": "POST",
    "Desc": "This API replaces the old value with the new value for the PickList field type in all existing records only.Note: When a value that does not exist in the PickList values is provided as new value, then this API will create the new value without deleting the old one.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000007177/replaceValues\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"newValue\" : \"Sub Defects1235\",\n  \"oldValue\" : \"Sub Defects\",\n  \"fieldId\" : \"4000000000423\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldId",
        "data_type": "long required",
        "description": "field Id"
      },
      {
        "name": "oldValue",
        "data_type": "string required, max chars : 100",
        "description": "oldValue"
      },
      {
        "name": "newValue",
        "data_type": "string required, max chars : 100",
        "description": "newValue"
      }
    ],
    "Response Example": "-d'{\n  \"newValue\" : \"Sub Defects1235\",\n  \"oldValue\" : \"Sub Defects\",\n  \"fieldId\" : \"4000000000423\"\n}'"
  },
  {
    "Api name": "Update Layout Field",
    "Api URL": "/api/v1/layouts/{layout_id}/fields/{field_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of a field in the layout.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/layouts/4000000007177/fields/21000000023005\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n  \"defaultValue\" : \"Education :: University :: Private\",\n  \"isNested\" : true,\n  \"sortBy\" : \"userDefined\",\n  \"isMandatory\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "expression",
        "data_type": "string optional, max chars : 1500",
        "description": "Formula Expression"
      },
      {
        "name": "isMandatory",
        "data_type": "boolean optional",
        "description": "Key that returns if a field is mandatory in a layout or not"
      },
      {
        "name": "defaultValue",
        "data_type": "string optional, max chars : 120",
        "description": "Default value set for a field. Applicable for Checkbox fields and PickList fields"
      },
      {
        "name": "allowedValues",
        "data_type": "list optional",
        "description": "Values allowed in a field. Applicable for PickList fields"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Key that sorts values in a PickList field either alphabetically or by a user-defined order"
      },
      {
        "name": "isNested",
        "data_type": "boolean optional",
        "description": "Key that returns if the picklist is nested or not"
      }
    ],
    "Response Example": "-d'{\n  \"allowedValues\" : [ \"Education :: University :: Private\", \"Education :: University :: Public\", \"Education :: School :: Private\", \"Education :: School :: Public\" ],\n  \"defaultValue\" : \"Education :: University :: Private\",\n  \"isNested\" : true,\n  \"sortBy\" : \"userDefined\",\n  \"isMandatory\" : true\n}'"
  },
  {
    "Api name": "Remove Field in Layout",
    "Api URL": "/api/v1/layouts/{layout_id}/fields/([0-9]+)/unassociate",
    "Api Method": "POST",
    "Desc": "This API is to remove fields from a layout.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000007177/fields/4000000000353/unassociate\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Clone Fields to other Layout",
    "Api URL": "/api/v1/layouts/{layout_id}/fields/([0-9]+)/cloneFieldsInLayout",
    "Api Method": "POST",
    "Desc": "This API is to clone a field to other layouts.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/layouts/4000000007177/fields/4000000000353/cloneFieldsInLayout\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"layoutIds\" : [ \"4000000007187\", \"4000000007197\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutIds",
        "data_type": "list optional",
        "description": "List of layout ids to which the field should be cloned."
      }
    ],
    "Response Example": "-d'{\n  \"layoutIds\" : [ \"4000000007187\", \"4000000007197\" ]\n}'"
  },
  {
    "Api name": "Get PickList Value in Layout",
    "Api URL": "/api/v1/layouts/([0-9]+)/fields/([0-9]+)/value",
    "Api Method": "GET",
    "Desc": "This api behaves as below(i)When Query paramfileType=CSVis passed  the picklist values gets downloaded in csv file with*fieldlabel*as its name(ii) When header param is not passedempty 200response",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000013556/fields/4000000028001/value\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fileType",
        "data_type": "string optional, max chars : 100",
        "description": "Export Format in which format should be shown.This value can be CSV"
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "LayoutRules",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Layout rules enable you to configure a page layout to respond to a user's input as a record is created or edited. Depending on how you set it up, the rule can set mandatory fields, show or hide fields,  and show or hide sections.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the rule"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "A short description of the rule"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "Name of the primary field to be used for creating the rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Activation status of the rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions show Attributes",
        "data_type": "list",
        "description": "Conditions in the layout rule"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the branch condition"
      },
      {
        "name": "pattern",
        "data_type": "string",
        "description": "Pattern that defines how the primary field should be displayed"
      },
      {
        "name": "conditions show Attributes",
        "data_type": "list",
        "description": "Conditions for the primary field"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "The field to be added"
      },
      {
        "name": "value show Attributes",
        "data_type": "list",
        "description": "The value of the field"
      },
      {
        "name": "displayValue show Attributes",
        "data_type": "list",
        "description": "The display value of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "The condition involved"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Display Label for the field to be added"
      },
      {
        "name": "actions show Attributes",
        "data_type": "list",
        "description": "Branch conditions in the layout rule"
      },
      {
        "name": "showFields show Attributes",
        "data_type": "list",
        "description": "List of fields you want to show"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "Field Name of the field"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Field Label of the field"
      },
      {
        "name": "showSections show Attributes",
        "data_type": "list",
        "description": "List of sections you want to show"
      },
      {
        "name": "setMandatoryFields show Attributes",
        "data_type": "list",
        "description": "List of fields you want to set as mandatory"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "Field Name of the field"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Field Label of the field"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Layout Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single rule from your help desk layout.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000020001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the rules. Values allowed are: creator and modifier."
      }
    ],
    "Response Example": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"description\" : \"Rule 1 for layout\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000007723\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"name\" : \"Rule 1\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000020001\",\n  \"status\" : \"active\"\n}"
  },
  {
    "Api name": "Get Layout Rules for department or layout",
    "Api URL": "/api/v1/layoutRules",
    "Api Method": "GET",
    "Desc": "This API lists all the rules configured for a department/layout.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layoutRules?layoutId=4000000007723&module=tickets&activeRules=true&from=0&limit=10&searchString=Rule\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Get the rules of the department"
      },
      {
        "name": "layoutId",
        "data_type": "long optional",
        "description": "Get the rules of the layout"
      },
      {
        "name": "module",
        "data_type": "String optional",
        "description": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events"
      },
      {
        "name": "activeLayouts",
        "data_type": "Boolean optional",
        "description": "Get the rules for active layouts"
      },
      {
        "name": "activeRules",
        "data_type": "Boolean optional",
        "description": "Get the rules that are active in the layout"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "Boolean optional",
        "description": "Get the rules that can be executed in help centre"
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number, starting from which the rules must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-50",
        "description": "Number of rules to be fetched. Default is 50"
      },
      {
        "name": "searchString",
        "data_type": "String optional",
        "description": "Get the rules that have this search term"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the rules. Values allowed are: creator and modifier."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 1\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9993292892\" ]\n      } ],\n      \"actions\" : {\n        \"showSections\" : [ \"Additional Information\" ],\n        \"showFields\" : [ \"subject\" ],\n        \"setMandatoryFields\" : [ \"priority\" ]\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"email\",\n    \"description\" : \"Rule 1 for layout\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000007723\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"name\" : \"Rule 1\",\n    \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000020001\",\n    \"status\" : \"active\"\n  }, {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 2\",\n      \"pattern\" : \"(1or2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9993292892\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      } ],\n      \"actions\" : {\n        \"showSections\" : [ \"Additional Information\" ],\n        \"showFields\" : [ \"subject\" ],\n        \"setMandatoryFields\" : [ \"priority\" ]\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"phone\",\n    \"description\" : \"Rule 2 for layout\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000007723\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"name\" : \"Rule 2\",\n    \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000021001\",\n    \"status\" : \"active\"\n  } ]\n}"
  },
  {
    "Api name": "Create Layout Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/layoutRules",
    "Api Method": "POST",
    "Desc": "This API creates a rule for a field in a layout.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/layoutRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : true,\n  \"name\" : \"Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the rules. Values allowed are: creator and modifier."
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 255",
        "description": "Name of the rule"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 255",
        "description": "A short description of the rule"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 255",
        "description": "Name of the primary field to be used for creating the rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string optional, max chars : 250",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Activation status of the rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean optional",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions",
        "data_type": "list required",
        "description": "Conditions in the layout rule"
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : true,\n  \"name\" : \"Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'"
  },
  {
    "Api name": "Update Layout Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing layout rule in a particular layout.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000021001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)or3\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Ramkumar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Honda\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  }, {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"1 and (2 or 3)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Sundar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Maruthi\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"Description\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Rule 11\",\n  \"description\" : \"Rule 1 for layout\",\n  \"layoutId\" : \"4000000007723\",\n  \"status\" : \"active\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the rules. Values allowed are: creator and modifier."
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string optional, max chars : 255",
        "description": "Name of the rule"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 255",
        "description": "A short description of the rule"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 255",
        "description": "Name of the primary field to be used for creating the rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string optional, max chars : 250",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Activation status of the rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean optional",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Conditions in the layout rule"
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)or3\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Ramkumar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Honda\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  }, {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"1 and (2 or 3)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Sundar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Maruthi\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"Description\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Rule 11\",\n  \"description\" : \"Rule 1 for layout\",\n  \"layoutId\" : \"4000000007723\",\n  \"status\" : \"active\"\n}'"
  },
  {
    "Api name": "Delete Layout Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a layout rule created for a field from a layout.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000021001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List Criteria Fields For Layout Rules",
    "Api URL": "/api/v1/layouts/{layout_id}/layoutRules/criteriaFields",
    "Api Method": "GET",
    "Desc": "This API lists the fields that can be used in criteria of a specified module in layout rules. Available pre-defined values may contain ${EMPTY}, ${NOTEMPTY}, ${OPEN}, ${CLOSED}, ${CURRENTTIME}. Available types are Text, Date, DateTime, Text, Boolean and Arithmetic.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000013564/layoutRules/criteriaFields?category=primary\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "category",
        "data_type": "String required",
        "description": "Category for getting the field criteria for primary or secondary fields"
      }
    ],
    "Response Example": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"accountId\",\n      \"fieldLabel\" : \"Account Name\",\n      \"i18NLabel\" : \"Account Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"contactId\",\n      \"fieldLabel\" : \"Contact Name\",\n      \"i18NLabel\" : \"Contact Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"phone\",\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"status\",\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"productId\",\n      \"fieldLabel\" : \"Product Name\",\n      \"i18NLabel\" : \"Product Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"dueDate\",\n      \"fieldLabel\" : \"Due Date\",\n      \"i18NLabel\" : \"Due Date\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"priority\",\n      \"fieldLabel\" : \"Priority\",\n      \"i18NLabel\" : \"Priority\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"channel\",\n      \"fieldLabel\" : \"Mode\",\n      \"i18NLabel\" : \"Mode\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"classification\",\n      \"fieldLabel\" : \"Classification\",\n      \"i18NLabel\" : \"Classification\",\n      \"type\" : \"text\"\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "ValidationRules",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Validation rules verify that the data an agent enters in a record meets the standards you specify before the agent can save the record.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "Name of the primary field to be used for creating the validation rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Activation status of the validation rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions show Attributes",
        "data_type": "list",
        "description": "Conditions in the validation rule"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "the name of the branch condition"
      },
      {
        "name": "pattern",
        "data_type": "string",
        "description": "condition pattern for the primary field"
      },
      {
        "name": "conditions show Attributes",
        "data_type": "list",
        "description": "condition for the primary field"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "The field to be added"
      },
      {
        "name": "value show Attributes",
        "data_type": "list",
        "description": "The value of the field"
      },
      {
        "name": "displayValue show Attributes",
        "data_type": "list",
        "description": "The display value of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "The condition involved"
      },
      {
        "name": "displayLabel",
        "data_type": "string",
        "description": "Display Label for the field to be added"
      },
      {
        "name": "actions show Attributes",
        "data_type": "list",
        "description": "branch conditions in the layout rule"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Layout Validation Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a validation rule configured for your layout.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000018001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to rules. Values allowed are: creator , modifier"
      }
    ],
    "Response Example": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"raj@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994259718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000018001\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000013564\",\n  \"status\" : \"active\"\n}"
  },
  {
    "Api name": "Get Layout Validation Rules for department or layout",
    "Api URL": "/api/v1/validationRules",
    "Api Method": "GET",
    "Desc": "This API fetches all the validation rules configured for your department/layout.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/validationRules?layoutId=4000000007723&module=tickets&activeRules=true&from=0&limit=10&searchString=Rule\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Get the rules of the department"
      },
      {
        "name": "layoutId",
        "data_type": "long optional",
        "description": "Get the rules of the layout"
      },
      {
        "name": "module",
        "data_type": "String optional",
        "description": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events"
      },
      {
        "name": "activeLayouts",
        "data_type": "Boolean optional",
        "description": "Get the rules for active layouts"
      },
      {
        "name": "activeRules",
        "data_type": "Boolean optional",
        "description": "Get the rules that are active in the layout"
      },
      {
        "name": "from",
        "data_type": "integer optional, default : 0, range : >=0",
        "description": "Index number, starting from which the rules must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-50",
        "description": "Number of rules to be fetched. Default is 50"
      },
      {
        "name": "searchString",
        "data_type": "String optional",
        "description": "Get the rules that have this search term"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "Boolean optional",
        "description": "Get the rules that can be executed in help centre"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the rules. Values allowed are: creator and modifier."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 2\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9994259718\" ]\n      } ],\n      \"actions\" : {\n        \"alert\" : \"Sample Alert\"\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"email\",\n    \"executeInHelpCentre\" : true,\n    \"createdBy\" : \"4000000015963\",\n    \"createdTime\" : \"2018-09-13T01:16:46.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000017001\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000013564\"\n  }, {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 1\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9994259718\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      } ],\n      \"actions\" : {\n        \"alert\" : \"Sample Alert\"\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"phone\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"createdTime\" : \"2018-09-13T01:49:03.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000018001\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000013564\",\n    \"status\" : \"active\"\n  } ]\n}"
  },
  {
    "Api name": "Create Layout Validation Rule",
    "Api URL": "/api/v1/layouts/layout_id/validationRules",
    "Api Method": "POST",
    "Desc": "This API creates a validation rule for a field in a layout.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/validationRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"executeInHelpCentre\" : true,\n  \"fieldName\" : \"email\",\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to rules. Values allowed are: creator , modifier"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string required, max chars : 255",
        "description": "Name of the primary field to be used for creating the validation rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string optional, max chars : 250",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Activation status of the validation rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean optional",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions",
        "data_type": "list required",
        "description": "Conditions in the validation rule"
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"executeInHelpCentre\" : true,\n  \"fieldName\" : \"email\",\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'"
  },
  {
    "Api name": "Update Layout Validation Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of an existing validation rule in a particular layout.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000021001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  }, {\n    \"name\" : \"condition 3\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"99922299922\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert1\"\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to rules. Values allowed are: creator , modifier"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldName",
        "data_type": "string optional, max chars : 255",
        "description": "Name of the primary field to be used for creating the validation rule"
      },
      {
        "name": "displayLabel",
        "data_type": "string optional, max chars : 250",
        "description": "Display Label of the primary field to be used for creating the rule"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Activation status of the validation rule: ACTIVE or DEACTIVE"
      },
      {
        "name": "executeInHelpCentre",
        "data_type": "boolean optional",
        "description": "To execute the rule in help centre or not: true or false"
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Conditions in the validation rule"
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  }, {\n    \"name\" : \"condition 3\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"99922299922\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert1\"\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}'"
  },
  {
    "Api name": "Delete Validation Rule",
    "Api URL": "/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a validation rule created for a field from a layout.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000021001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List Criteria Fields For Layout Validation Rules",
    "Api URL": "/api/v1/layouts/{layout_id}/validationRules/criteriaFields",
    "Api Method": "GET",
    "Desc": "This API lists the fields that can be used in criteria of a specified module in validation rules. Available pre-defined values may contain ${EMPTY}, ${NOTEMPTY}, ${OPEN}, ${CLOSED}, ${CURRENTTIME}. Available types are Text, Date, DateTime, Text, Boolean and Arithmetic.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/layouts/4000000013564/validationRules/criteriaFields?category=primary\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "category",
        "data_type": "String required",
        "description": "Category for getting the field criteria for primary or secondary fields"
      }
    ],
    "Response Example": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"email\",\n      \"fieldLabel\" : \"Email\",\n      \"i18NLabel\" : \"Email\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"phone\",\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"subject\",\n      \"fieldLabel\" : \"Subject\",\n      \"i18NLabel\" : \"Subject\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"status\",\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"classification\",\n      \"fieldLabel\" : \"Classification\",\n      \"i18NLabel\" : \"Classification\",\n      \"type\" : \"text\"\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "DependencyMappings",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Dependency mapping is a function that is applicable only to PickList fields. Through this function, you can define a parent-child relationship between two fields. For example, let's say there are two fields - Country and State - in your Tickets module. The State field will display values, depending on the value you select in the Country field. If you choose India in the Country field, only the states of India will be displayed in the State field and the states of other countries will be hidden. If you choose a different country, only the states of that country will be displayed.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutId",
        "data_type": "long",
        "description": "ID of the layout in which the dependency is mapped"
      },
      {
        "name": "parentId",
        "data_type": "long",
        "description": "ID of the parent field"
      },
      {
        "name": "childId",
        "data_type": "long",
        "description": "ID of the child field"
      },
      {
        "name": "mappings show Attributes",
        "data_type": "list",
        "description": "JSON object that shows the mapping configured"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List dependency mappings in a layout",
    "Api URL": "/api/v1/dependencyMappings",
    "Api Method": "GET",
    "Desc": "This API lists the dependency mappings configured in a layout.",
    "OAuth Scope": "Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/dependencyMappings?layoutId=4000000007177\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutId",
        "data_type": "long optional",
        "description": "ID of the layout in which the dependency is mapped"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"parent\" : {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"id\" : \"4000000000421\"\n    },\n    \"mappings\" : {\n      \"General\" : [ \"Sub General\" ],\n      \"Defects\" : [ \"Sub Defects\" ]\n    },\n    \"id\" : \"4000000007315\",\n    \"childId\" : \"4000000000423\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000421\",\n    \"child\" : {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"id\" : \"4000000000423\"\n    }\n  }, {\n    \"parent\" : {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"id\" : \"4000000000421\"\n    },\n    \"mappings\" : {\n      \"General\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"Defects\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ]\n    },\n    \"id\" : \"4000000031003\",\n    \"childId\" : \"4000000000367\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000421\",\n    \"child\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"id\" : \"4000000000367\"\n    }\n  }, {\n    \"parent\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"id\" : \"4000000000367\"\n    },\n    \"mappings\" : {\n      \"newDeptClosed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open_july\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Escalated\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open_newDept\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"On Hold\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Closed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Closed1\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"julyDeptClosed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ]\n    },\n    \"id\" : \"4000000032003\",\n    \"childId\" : \"4000000000409\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000367\",\n    \"child\" : {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"id\" : \"4000000000409\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Get possible dependency mappings in a layout",
    "Api URL": "/api/v1/availableDependencyMappings",
    "Api Method": "GET",
    "Desc": "This API fetches the parent and child fields using which you can configure dependency mappings in a layout.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/availableDependencyMappings?layoutId=4000000007179\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutId",
        "data_type": "long required",
        "description": "layout Id"
      }
    ],
    "Response Example": "{\n  \"children\" : [ {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"-None-\", \"Call\", \"Meeting\", \"Demo\" ],\n    \"id\" : \"4000000000145\"\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ \"Not Started\", \"Deferred\", \"In Progress\", \"Waiting on someone else\", \"Completed_july1\", \"Completed_newDept\" ],\n    \"id\" : \"4000000000147\"\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Highest\", \"Low\", \"Lowest\", \"Normal\" ],\n    \"id\" : \"4000000000149\"\n  } ],\n  \"parents\" : [ {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"-None-\", \"Call\", \"Meeting\", \"Demo\" ],\n    \"id\" : \"4000000000145\"\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ \"Not Started\", \"Deferred\", \"In Progress\", \"Waiting on someone else\", \"Completed_july1\", \"Completed_newDept\" ],\n    \"id\" : \"4000000000147\"\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Highest\", \"Low\", \"Lowest\", \"Normal\" ],\n    \"id\" : \"4000000000149\"\n  } ]\n}"
  },
  {
    "Api name": "Create dependency mapping",
    "Api URL": "/api/v1/dependencyMappings",
    "Api Method": "POST",
    "Desc": "This API creates a dependency mapping between two fields.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/dependencyMappings\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"High\" ],\n    \"Defects\" : [ \"Low\" ]\n  },\n  \"childId\" : \"4000000000407\",\n  \"layoutId\" : \"4000000007177\",\n  \"parentId\" : \"4000000000421\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "layoutId",
        "data_type": "long required",
        "description": "ID of the layout in which the dependency is mapped"
      },
      {
        "name": "parentId",
        "data_type": "long required",
        "description": "ID of the parent field"
      },
      {
        "name": "childId",
        "data_type": "long required",
        "description": "ID of the child field"
      },
      {
        "name": "mappings",
        "data_type": "list required",
        "description": "JSON object that shows the mapping configured"
      }
    ],
    "Response Example": "-d'{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"High\" ],\n    \"Defects\" : [ \"Low\" ]\n  },\n  \"childId\" : \"4000000000407\",\n  \"layoutId\" : \"4000000007177\",\n  \"parentId\" : \"4000000000421\"\n}'"
  },
  {
    "Api name": "Update dependency mapping",
    "Api URL": "/api/v1/dependencyMappings/{dependencymapping_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing dependency mapping.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/dependencyMappings/4000000047001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"Low\" ],\n    \"Defects\" : [ \"Low\", \"Medium\" ]\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "mappings",
        "data_type": "list optional",
        "description": "a Json object which consist of elements which are inturn a json array"
      }
    ],
    "Response Example": "-d'{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"Low\" ],\n    \"Defects\" : [ \"Low\", \"Medium\" ]\n  }\n}'"
  },
  {
    "Api name": "Delete dependency mapping",
    "Api URL": "/api/v1/dependencyMappings/{dependencymapping_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a dependency mapping from a layout.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/dependencyMappings/4000000047001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "MailReplyAddress",
    "Api URL": "",
    "Api Method": "",
    "Desc": "MailReplyAddress refers to the email ID from which replies are sent to customers.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get details of a MailReplyAddress",
    "Api URL": "/api/v1/mailReplyAddress/{mailReplyAddress_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a MailReplyAddress.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/mailReplyAddress/4000000028003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n  \"address\" : \"techsupport@zylker.com\",\n  \"isVerified\" : true,\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"Tech\",\n  \"departmentId\" : \"4000000007043\",\n  \"isActive\" : true,\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"userName\" : \"techsupport@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"createdBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n    \"firstName\" : \"Sam\",\n    \"lastName\" : \"Steve\",\n    \"id\" : \"4000000028043\",\n    \"email\" : \"steve@zylker.com\"\n  },\n  \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n    \"firstName\" : \"Sam\",\n    \"lastName\" : \"Steve\",\n    \"id\" : \"4000000028043\",\n    \"email\" : \"steve@zylker.com\"\n  },\n  \"id\" : \"4000000028003\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}"
  },
  {
    "Api name": "List MailReplyAddresses",
    "Api URL": "/api/v1/mailReplyAddress",
    "Api Method": "GET",
    "Desc": "This API lists the mailReplyAddresses configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/mailReplyAddress?departmentId=4000000007043\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the Department from which the addresses need to be queried."
      },
      {
        "name": "isActive",
        "data_type": "boolean optional",
        "description": "Key that returns if the mailReplyAddress is active or not"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the mail addresses must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of mail addresses to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"support@zylker.com\",\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : true,\n    \"displayName\" : \"Support\",\n    \"departmentId\" : \"4000000007043\",\n    \"isActive\" : true,\n    \"smtpDetails\" : {\n      \"port\" : \"465\",\n      \"host\" : \"smtp.zoho.com\",\n      \"userName\" : \"support@zylker.com\",\n      \"connectionType\" : \"SSL\"\n    },\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000025003\",\n    \"serviceProviderType\" : \"CustomSMTP\"\n  }, {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"market@zylker.com\",\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : false,\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"displayName\" : \"Marketing\",\n    \"departmentId\" : \"4000000007043\",\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000026001\",\n    \"isActive\" : false,\n    \"serviceProviderType\" : \"ZohoSMTP\"\n  }, {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"techsupport@zylker.com\",\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : true,\n    \"displayName\" : \"Tech\",\n    \"departmentId\" : \"4000000007043\",\n    \"isActive\" : true,\n    \"smtpDetails\" : {\n      \"port\" : \"465\",\n      \"host\" : \"smtp.zoho.com\",\n      \"userName\" : \"techsupport@zylker.com\",\n      \"connectionType\" : \"SSL\"\n    },\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000028003\",\n    \"serviceProviderType\" : \"CustomSMTP\"\n  } ]\n}"
  },
  {
    "Api name": "Add MailReplyAddress",
    "Api URL": "/api/v1/mailReplyAddress",
    "Api Method": "POST",
    "Desc": "This API adds a MailReplyAddress to your help desk.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/mailReplyAddress\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"address\" : \"support@zylker.com\",\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijkrffr\",\n    \"userName\" : \"support@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"My address\",\n  \"departmentId\" : \"4000000007043\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department in which the MailReplyAddress must be configured"
      },
      {
        "name": "address",
        "data_type": "string required, max chars : 100",
        "description": "Email ID to add"
      },
      {
        "name": "displayName",
        "data_type": "string required, max chars : 100",
        "description": "Display name for the MailReplyAddress"
      },
      {
        "name": "isSmtpEnabled deprecated",
        "data_type": "boolean required",
        "description": "Key that enables or disables SMTP authentication for the MailReplyAddress"
      },
      {
        "name": "smtpDetails",
        "data_type": "JSONObject optional",
        "description": "Details related to the SMTP authentication for the MailReplyAddress"
      },
      {
        "name": "serviceProviderType",
        "data_type": "string optional, max chars : 50",
        "description": "MailService Provider name"
      }
    ],
    "Response Example": "-d'{\n  \"address\" : \"support@zylker.com\",\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijkrffr\",\n    \"userName\" : \"support@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"My address\",\n  \"departmentId\" : \"4000000007043\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}'"
  },
  {
    "Api name": "Update MailReplyAddress",
    "Api URL": "/api/v1/mailReplyAddress/{mailReplyAddress_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing MailReplyAddress.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/mailReplyAddress/4000000039003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijk$&rffr**\",\n    \"userName\" : \"techsupport@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"TechSupport\",\n  \"departmentId\" : \"4000000007043\",\n  \"isActive\" : true,\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department(s) in which the MailReplyAddress is configured"
      },
      {
        "name": "displayName",
        "data_type": "string optional, max chars : 100",
        "description": "Display Name"
      },
      {
        "name": "isActive",
        "data_type": "boolean optional",
        "description": "Key that returns if the MailReplyAddress is active or not"
      },
      {
        "name": "isSmtpEnabled deprecated",
        "data_type": "boolean optional",
        "description": "Is SMTP Enabled"
      },
      {
        "name": "serviceProviderType",
        "data_type": "string optional, max chars : 50",
        "description": "MailService Provider name"
      },
      {
        "name": "smtpDetails",
        "data_type": "JSONObject optional",
        "description": "Details related to the SMTP authentication for the MailReplyAddress"
      }
    ],
    "Response Example": "-d'{\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijk$&rffr**\",\n    \"userName\" : \"techsupport@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"TechSupport\",\n  \"departmentId\" : \"4000000007043\",\n  \"isActive\" : true,\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}'"
  },
  {
    "Api name": "Delete MailReplyAddress",
    "Api URL": "/api/v1/mailReplyAddress/{mailReplyAddress_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a MailReplyAddress from your help desk.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/mailReplyAddress/4000000039003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Send Verification Mail",
    "Api URL": "/api/v1/mailReplyAddress/{mailReplyAddress_id}/sendVerification",
    "Api Method": "POST",
    "Desc": "This API sends a verification link to the MailReplyAddress configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.CREATE, Desk.basic.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/mailReplyAddress/4000000039003/sendVerification\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "SupportEmailAddress",
    "Api URL": "",
    "Api Method": "",
    "Desc": "SupportEmailAddress refers to the email ID to which customer correspondences are forwarded.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get details of a SupportEmailAddress",
    "Api URL": "/api/v1/supportEmailAddress/{supportEmailAddress_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a SupportEmailAddress.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/supportEmailAddress/4000000026003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n  \"address\" : \"support@zylker.com\",\n  \"createdBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n    \"firstName\" : \"\",\n    \"lastName\" : \"Steve\",\n    \"id\" : \"4000000028043\",\n    \"email\" : \"steve@zylker.com\"\n  },\n  \"departmentId\" : \"4000000007043\",\n  \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n    \"firstName\" : \"\",\n    \"lastName\" : \"Steve\",\n    \"id\" : \"4000000028043\",\n    \"email\" : \"steve@zylker.com\"\n  },\n  \"id\" : \"4000000026003\",\n  \"friendlyName\" : \"Tech\",\n  \"isMailFetching\" : true\n}"
  },
  {
    "Api name": "List SupportEmailAddresses",
    "Api URL": "/api/v1/supportEmailAddress",
    "Api Method": "GET",
    "Desc": "This API lists the SupportEmailAddresses configured in your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/supportEmailAddress?departmentId=4000000007043\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department(s) from which the SupportEmailAddresses must be fetched."
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the mail addresses must be fetched"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of mail addresses to fetch"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"marketing@zylker.com\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"departmentId\" : \"4000000007043\",\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000025003\",\n    \"friendlyName\" : \"Marketing\",\n    \"isMailFetching\" : true\n  }, {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"sales@zylker.com\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"departmentId\" : \"4000000007043\",\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000026001\",\n    \"friendlyName\" : \"Sales\",\n    \"isMailFetching\" : false\n  }, {\n    \"modifiedTime\" : \"2023-01-06T11:55:26.000Z\",\n    \"address\" : \"support@zylker.com\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"departmentId\" : \"4000000007043\",\n    \"createdTime\" : \"2023-01-06T09:55:26.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000028043/photo?orgId=11171343\",\n      \"firstName\" : \"\",\n      \"lastName\" : \"Steve\",\n      \"id\" : \"4000000028043\",\n      \"email\" : \"steve@zylker.com\"\n    },\n    \"id\" : \"4000000026003\",\n    \"friendlyName\" : \"Support\",\n    \"isMailFetching\" : true\n  } ]\n}"
  },
  {
    "Api name": "Add SupportEmailAddress",
    "Api URL": "/api/v1/supportEmailAddress",
    "Api Method": "POST",
    "Desc": "This API adds a SupportEmailAddress to your help desk.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/supportEmailAddress\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"Support\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department in which the SupportEmailAddress must be configured"
      },
      {
        "name": "friendlyName",
        "data_type": "string required, max chars : 100",
        "description": "Display name for the SupportEmailAddress"
      },
      {
        "name": "address",
        "data_type": "string required, max chars : 100",
        "description": "Email ID to add"
      }
    ],
    "Response Example": "-d'{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"Support\"\n}'"
  },
  {
    "Api name": "Update SupportEmailAddress",
    "Api URL": "/api/v1/supportEmailAddress/{supportEmailAddress_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates details of an existing SupportEmailAddress.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/supportEmailAddress/4000000039003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"TechSupport\",\n  \"isMailFetching\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department in which the SupportEmailAddress is configured"
      },
      {
        "name": "friendlyName",
        "data_type": "string optional, max chars : 100",
        "description": "Display name for the SupportEmailAddress"
      },
      {
        "name": "isMailFetching",
        "data_type": "boolean optional",
        "description": "Key that returns if the SupportEmailAddress fetches emails or not"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"TechSupport\",\n  \"isMailFetching\" : true\n}'"
  },
  {
    "Api name": "Delete SupportEmailAddress",
    "Api URL": "/api/v1/supportEmailAddress/{supportEmailAddress_id}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a SupportEmailAddress from your help desk.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/supportEmailAddress/4000000039003\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "MailConfigurations",
    "Api URL": "",
    "Api Method": "",
    "Desc": "MailConfiguration refers to the secondary configurations related to the email addresses in your help desk portal.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List department-level MailConfigurations",
    "Api URL": "/api/v1/departments/{department_Id}/mailConfigurations",
    "Api Method": "GET",
    "Desc": "This API lists the MailConfigurations set for a specific department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/departments/4000000007043/mailConfigurations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
  },
  {
    "Api name": "List organization-level MailConfigurations",
    "Api URL": "/api/v1/mailConfigurations",
    "Api Method": "GET",
    "Desc": "This API lists the MailConfigurations set for the entire help desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/mailConfigurations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
  },
  {
    "Api name": "Update department-level MailConfigurations",
    "Api URL": "/api/v1/departments/{department_Id}/mailConfigurations",
    "Api Method": "PATCH",
    "Desc": "This API updates the MailConfigurations set for a specific department.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/departments/4000000007043/mailConfigurations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "autoCCToMailbox",
        "data_type": "boolean optional",
        "description": "Key that enables or disables auto CC of email replies to your"
      },
      {
        "name": "createContactWithReplyTo",
        "data_type": "boolean optional",
        "description": "Key that enables or disables creation of contacts from 'Reply To' email addresses"
      },
      {
        "name": "agentNameInTicketReply",
        "data_type": "boolean optional",
        "description": "Key that enables or disables display of the agent's name in replies to customers"
      },
      {
        "name": "createTicketForOriginalSender",
        "data_type": "boolean optional",
        "description": "Key that enables or disables creation of tickets on behalf of the sender while forwarding emails"
      },
      {
        "name": "privateThreadConfig",
        "data_type": "boolean optional",
        "description": "Key that enables or disables private thread handling"
      }
    ],
    "Response Example": "-d'{\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}'"
  },
  {
    "Api name": "Update organization-level MailConfigurations",
    "Api URL": "/api/v1/mailConfigurations",
    "Api Method": "PATCH",
    "Desc": "This API updates the MailConfigurations set for the entire help desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/mailConfigurations\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "autoCCToMailbox",
        "data_type": "boolean optional",
        "description": "Key that enables or disables auto CC of email replies to your"
      },
      {
        "name": "createContactWithReplyTo",
        "data_type": "boolean optional",
        "description": "Key that enables or disables creation of contacts from 'Reply To' email addresses"
      },
      {
        "name": "agentNameInTicketReply",
        "data_type": "boolean optional",
        "description": "Key that enables or disables display of the agent's name in replies to customers"
      },
      {
        "name": "createTicketForOriginalSender",
        "data_type": "boolean optional",
        "description": "Key that enables or disables creation of tickets on behalf of the sender while forwarding emails"
      },
      {
        "name": "privateThreadConfig",
        "data_type": "boolean optional",
        "description": "Key that enables or disables private thread handling"
      }
    ],
    "Response Example": "-d'{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}'"
  },
  {
    "Api name": "SupportEmailDomain",
    "Api URL": "",
    "Api Method": "",
    "Desc": "When you sign up for Zoho Desk, you are provided with one default support email address: support@mycompany.zohodesk.com. The \"mycompany\" part of the email address represents the portal name that you initially signed up with.Emails received at this address become tickets. This address is also used as the \"From\" address in replies to users.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Update SupportEmailAddress SubDomain",
    "Api URL": "/api/v1/supportEmailDomain",
    "Api Method": "PATCH",
    "Desc": "This API updates the subdomain (the \"mycompany\" part) of the support email address.1. Only the primary contact of the organization can update the subdomain of the support email address.2. The new support email address will be support@zylker.com.3. The updated support email address will be used for fetching emails, henceforth. So make sure that you update the new address in the forwarding configurations of your mailbox.4. The new support email address is applicable only for the default department.5. All existing email aliases along with the old support email address will be permanently deleted from your account.6. Emails forwarded to the old support address will not be fetched in.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/supportEmailDomain\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"supportEmailDomain\" : \"zylkernew\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "supportEmailDomain",
        "data_type": "string optional, max chars : 100",
        "description": "Name of the new email subdomain"
      }
    ],
    "Response Example": "-d'{\n  \"supportEmailDomain\" : \"zylkernew\"\n}'"
  },
  {
    "Api name": "Get SupportEmailAddress SubDomain",
    "Api URL": "/api/v1/supportEmailDomain",
    "Api Method": "GET",
    "Desc": "This API fetches the subdomain of the support email address.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/supportEmailDomain\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"updatedTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"updatedBy\" : \"4000000007089\",\n  \"supportEmailDomain\" : \"zylkernew.zohodesk.com\",\n  \"oldDomain\" : \"zylker.zohodesk.com\"\n}"
  },
  {
    "Api name": "Locales",
    "Api URL": "",
    "Api Method": "",
    "Desc": "These public APIs help access details of the countries,languages and time zones supported in Zoho Desk.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List all countries",
    "Api URL": "/api/v1/countries",
    "Api Method": "GET",
    "Desc": "This API lists the countries that can be set in the locale field in Zoho Desk. Keep in mind that thecountriesobject will be deprecated soon. Therefore, make sure to use thedataobject instead, wherever needed.",
    "OAuth Scope": "",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/countries\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"name\" : \"Puerto Rico\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"PR\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Palestinian Territories\",\n    \"currencySymbol\" : \"ILS\",\n    \"id\" : \"PS\",\n    \"currencyCode\" : \"ILS\"\n  }, {\n    \"name\" : \"Portugal\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"PT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Palau\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"PW\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Paraguay\",\n    \"currencySymbol\" : \"PYG\",\n    \"id\" : \"PY\",\n    \"currencyCode\" : \"PYG\"\n  }, {\n    \"name\" : \"Qatar\",\n    \"currencySymbol\" : \"QAR\",\n    \"id\" : \"QA\",\n    \"currencyCode\" : \"QAR\"\n  }, {\n    \"name\" : \"Andorra\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AD\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"United Arab Emirates\",\n    \"currencySymbol\" : \"AED\",\n    \"id\" : \"AE\",\n    \"currencyCode\" : \"AED\"\n  }, {\n    \"name\" : \"Afghanistan\",\n    \"currencySymbol\" : \"AFN\",\n    \"id\" : \"AF\",\n    \"currencyCode\" : \"AFN\"\n  }, {\n    \"name\" : \"Antigua & Barbuda\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"AG\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Anguilla\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"AI\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Albania\",\n    \"currencySymbol\" : \"ALL\",\n    \"id\" : \"AL\",\n    \"currencyCode\" : \"ALL\"\n  }, {\n    \"name\" : \"Armenia\",\n    \"currencySymbol\" : \"AMD\",\n    \"id\" : \"AM\",\n    \"currencyCode\" : \"AMD\"\n  }, {\n    \"name\" : \"Netherlands Antilles\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"AN\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Angola\",\n    \"currencySymbol\" : \"AOA\",\n    \"id\" : \"AO\",\n    \"currencyCode\" : \"AOA\"\n  }, {\n    \"name\" : \"Antarctica\",\n    \"currencySymbol\" : \"XXX\",\n    \"id\" : \"AQ\",\n    \"currencyCode\" : \"-\"\n  }, {\n    \"name\" : \"Argentina\",\n    \"currencySymbol\" : \"ARS\",\n    \"id\" : \"AR\",\n    \"currencyCode\" : \"ARS\"\n  }, {\n    \"name\" : \"American Samoa\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"AS\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Austria\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Réunion\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"RE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Australia\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"AU\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Aruba\",\n    \"currencySymbol\" : \"AWG\",\n    \"id\" : \"AW\",\n    \"currencyCode\" : \"AWG\"\n  }, {\n    \"name\" : \"Åland Islands\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AX\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Azerbaijan\",\n    \"currencySymbol\" : \"AZN\",\n    \"id\" : \"AZ\",\n    \"currencyCode\" : \"AZN\"\n  }, {\n    \"name\" : \"Romania\",\n    \"currencySymbol\" : \"RON\",\n    \"id\" : \"RO\",\n    \"currencyCode\" : \"RON\"\n  }, {\n    \"name\" : \"Bosnia & Herzegovina\",\n    \"currencySymbol\" : \"BAM\",\n    \"id\" : \"BA\",\n    \"currencyCode\" : \"BAM\"\n  }, {\n    \"name\" : \"Barbados\",\n    \"currencySymbol\" : \"BBD\",\n    \"id\" : \"BB\",\n    \"currencyCode\" : \"BBD\"\n  }, {\n    \"name\" : \"Serbia\",\n    \"currencySymbol\" : \"RSD\",\n    \"id\" : \"RS\",\n    \"currencyCode\" : \"RSD\"\n  }, {\n    \"name\" : \"Bangladesh\",\n    \"currencySymbol\" : \"BDT\",\n    \"id\" : \"BD\",\n    \"currencyCode\" : \"BDT\"\n  }, {\n    \"name\" : \"Belgium\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"BE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Russia\",\n    \"currencySymbol\" : \"RUB\",\n    \"id\" : \"RU\",\n    \"currencyCode\" : \"RUB\"\n  }, {\n    \"name\" : \"Burkina Faso\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"BF\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Bulgaria\",\n    \"currencySymbol\" : \"BGN\",\n    \"id\" : \"BG\",\n    \"currencyCode\" : \"BGN\"\n  }, {\n    \"name\" : \"Rwanda\",\n    \"currencySymbol\" : \"RWF\",\n    \"id\" : \"RW\",\n    \"currencyCode\" : \"RWF\"\n  }, {\n    \"name\" : \"Bahrain\",\n    \"currencySymbol\" : \"BHD\",\n    \"id\" : \"BH\",\n    \"currencyCode\" : \"BHD\"\n  }, {\n    \"name\" : \"Burundi\",\n    \"currencySymbol\" : \"BIF\",\n    \"id\" : \"BI\",\n    \"currencyCode\" : \"BIF\"\n  }, {\n    \"name\" : \"Benin\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"BJ\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"St. Barthélemy\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"BL\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Bermuda\",\n    \"currencySymbol\" : \"BMD\",\n    \"id\" : \"BM\",\n    \"currencyCode\" : \"BMD\"\n  }, {\n    \"name\" : \"Brunei\",\n    \"currencySymbol\" : \"BND\",\n    \"id\" : \"BN\",\n    \"currencyCode\" : \"BND\"\n  }, {\n    \"name\" : \"Bolivia\",\n    \"currencySymbol\" : \"BOB\",\n    \"id\" : \"BO\",\n    \"currencyCode\" : \"BOB\"\n  }, {\n    \"name\" : \"Saudi Arabia\",\n    \"currencySymbol\" : \"SAR\",\n    \"id\" : \"SA\",\n    \"currencyCode\" : \"SAR\"\n  }, {\n    \"name\" : \"Caribbean Netherlands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"BQ\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Solomon Islands\",\n    \"currencySymbol\" : \"SBD\",\n    \"id\" : \"SB\",\n    \"currencyCode\" : \"SBD\"\n  }, {\n    \"name\" : \"Brazil\",\n    \"currencySymbol\" : \"BRL\",\n    \"id\" : \"BR\",\n    \"currencyCode\" : \"BRL\"\n  }, {\n    \"name\" : \"Seychelles\",\n    \"currencySymbol\" : \"SCR\",\n    \"id\" : \"SC\",\n    \"currencyCode\" : \"SCR\"\n  }, {\n    \"name\" : \"Bahamas\",\n    \"currencySymbol\" : \"BSD\",\n    \"id\" : \"BS\",\n    \"currencyCode\" : \"BSD\"\n  }, {\n    \"name\" : \"Sudan\",\n    \"currencySymbol\" : \"SDG\",\n    \"id\" : \"SD\",\n    \"currencyCode\" : \"SDG\"\n  }, {\n    \"name\" : \"Bhutan\",\n    \"currencySymbol\" : \"BTN\",\n    \"id\" : \"BT\",\n    \"currencyCode\" : \"BTN\"\n  }, {\n    \"name\" : \"Sweden\",\n    \"currencySymbol\" : \"SEK\",\n    \"id\" : \"SE\",\n    \"currencyCode\" : \"SEK\"\n  }, {\n    \"name\" : \"Bouvet Island\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"BV\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Singapore\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"SG\",\n    \"currencyCode\" : \"SGD\"\n  }, {\n    \"name\" : \"Botswana\",\n    \"currencySymbol\" : \"BWP\",\n    \"id\" : \"BW\",\n    \"currencyCode\" : \"BWP\"\n  }, {\n    \"name\" : \"St. Helena\",\n    \"currencySymbol\" : \"SHP\",\n    \"id\" : \"SH\",\n    \"currencyCode\" : \"SHP\"\n  }, {\n    \"name\" : \"Slovenia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SI\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Belarus\",\n    \"currencySymbol\" : \"BYN\",\n    \"id\" : \"BY\",\n    \"currencyCode\" : \"BYN\"\n  }, {\n    \"name\" : \"Svalbard & Jan Mayen\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"SJ\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Belize\",\n    \"currencySymbol\" : \"BZD\",\n    \"id\" : \"BZ\",\n    \"currencyCode\" : \"BZD\"\n  }, {\n    \"name\" : \"Slovakia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SK\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Sierra Leone\",\n    \"currencySymbol\" : \"SLL\",\n    \"id\" : \"SL\",\n    \"currencyCode\" : \"SLL\"\n  }, {\n    \"name\" : \"San Marino\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SM\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Senegal\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"SN\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Somalia\",\n    \"currencySymbol\" : \"SOS\",\n    \"id\" : \"SO\",\n    \"currencyCode\" : \"SOS\"\n  }, {\n    \"name\" : \"Canada\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"CA\",\n    \"currencyCode\" : \"CAD\"\n  }, {\n    \"name\" : \"Suriname\",\n    \"currencySymbol\" : \"SRD\",\n    \"id\" : \"SR\",\n    \"currencyCode\" : \"SRD\"\n  }, {\n    \"name\" : \"Cocos (Keeling) Islands\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"CC\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"South Sudan\",\n    \"currencySymbol\" : \"SSP\",\n    \"id\" : \"SS\",\n    \"currencyCode\" : \"SSP\"\n  }, {\n    \"name\" : \"Congo - Kinshasa\",\n    \"currencySymbol\" : \"CDF\",\n    \"id\" : \"CD\",\n    \"currencyCode\" : \"CDF\"\n  }, {\n    \"name\" : \"São Tomé & Príncipe\",\n    \"currencySymbol\" : \"STN\",\n    \"id\" : \"ST\",\n    \"currencyCode\" : \"STN\"\n  }, {\n    \"name\" : \"Central African Republic\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CF\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"El Salvador\",\n    \"currencySymbol\" : \"SVC\",\n    \"id\" : \"SV\",\n    \"currencyCode\" : \"SVC\"\n  }, {\n    \"name\" : \"Congo - Brazzaville\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CG\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Switzerland\",\n    \"currencySymbol\" : \"CHF\",\n    \"id\" : \"CH\",\n    \"currencyCode\" : \"CHF\"\n  }, {\n    \"name\" : \"Sint Maarten\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"SX\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Côte d’Ivoire\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"CI\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Syria\",\n    \"currencySymbol\" : \"SYP\",\n    \"id\" : \"SY\",\n    \"currencyCode\" : \"SYP\"\n  }, {\n    \"name\" : \"Eswatini\",\n    \"currencySymbol\" : \"SZL\",\n    \"id\" : \"SZ\",\n    \"currencyCode\" : \"SZL\"\n  }, {\n    \"name\" : \"Cook Islands\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"CK\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Chile\",\n    \"currencySymbol\" : \"CLP\",\n    \"id\" : \"CL\",\n    \"currencyCode\" : \"CLP\"\n  }, {\n    \"name\" : \"Cameroon\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CM\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"China\",\n    \"currencySymbol\" : \"CNY\",\n    \"id\" : \"CN\",\n    \"currencyCode\" : \"CNY\"\n  }, {\n    \"name\" : \"Colombia\",\n    \"currencySymbol\" : \"COP\",\n    \"id\" : \"CO\",\n    \"currencyCode\" : \"COP\"\n  }, {\n    \"name\" : \"Costa Rica\",\n    \"currencySymbol\" : \"CRC\",\n    \"id\" : \"CR\",\n    \"currencyCode\" : \"CRC\"\n  }, {\n    \"name\" : \"Turks & Caicos Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"TC\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Chad\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"TD\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Cuba\",\n    \"currencySymbol\" : \"CUP\",\n    \"id\" : \"CU\",\n    \"currencyCode\" : \"CUP\"\n  }, {\n    \"name\" : \"French Southern Territories\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"TF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Cape Verde\",\n    \"currencySymbol\" : \"CVE\",\n    \"id\" : \"CV\",\n    \"currencyCode\" : \"CVE\"\n  }, {\n    \"name\" : \"Togo\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"TG\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Curaçao\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"CW\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Thailand\",\n    \"currencySymbol\" : \"THB\",\n    \"id\" : \"TH\",\n    \"currencyCode\" : \"THB\"\n  }, {\n    \"name\" : \"Christmas Island\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"CX\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Cyprus\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"CY\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Tajikistan\",\n    \"currencySymbol\" : \"TJS\",\n    \"id\" : \"TJ\",\n    \"currencyCode\" : \"TJS\"\n  }, {\n    \"name\" : \"Czechia\",\n    \"currencySymbol\" : \"CZK\",\n    \"id\" : \"CZ\",\n    \"currencyCode\" : \"CZK\"\n  }, {\n    \"name\" : \"Tokelau\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"TK\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Timor-Leste\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"TL\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Turkmenistan\",\n    \"currencySymbol\" : \"TMT\",\n    \"id\" : \"TM\",\n    \"currencyCode\" : \"TMT\"\n  }, {\n    \"name\" : \"Tunisia\",\n    \"currencySymbol\" : \"TND\",\n    \"id\" : \"TN\",\n    \"currencyCode\" : \"TND\"\n  }, {\n    \"name\" : \"Tonga\",\n    \"currencySymbol\" : \"TOP\",\n    \"id\" : \"TO\",\n    \"currencyCode\" : \"TOP\"\n  }, {\n    \"name\" : \"Turkey\",\n    \"currencySymbol\" : \"TRY\",\n    \"id\" : \"TR\",\n    \"currencyCode\" : \"TRY\"\n  }, {\n    \"name\" : \"Trinidad & Tobago\",\n    \"currencySymbol\" : \"TTD\",\n    \"id\" : \"TT\",\n    \"currencyCode\" : \"TTD\"\n  }, {\n    \"name\" : \"Germany\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"DE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Tuvalu\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"TV\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Taiwan\",\n    \"currencySymbol\" : \"TWD\",\n    \"id\" : \"TW\",\n    \"currencyCode\" : \"TWD\"\n  }, {\n    \"name\" : \"Djibouti\",\n    \"currencySymbol\" : \"DJF\",\n    \"id\" : \"DJ\",\n    \"currencyCode\" : \"DJF\"\n  }, {\n    \"name\" : \"Tanzania\",\n    \"currencySymbol\" : \"TZS\",\n    \"id\" : \"TZ\",\n    \"currencyCode\" : \"TZS\"\n  }, {\n    \"name\" : \"Denmark\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"DK\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"Dominica\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"DM\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Dominican Republic\",\n    \"currencySymbol\" : \"DOP\",\n    \"id\" : \"DO\",\n    \"currencyCode\" : \"DOP\"\n  }, {\n    \"name\" : \"Ukraine\",\n    \"currencySymbol\" : \"UAH\",\n    \"id\" : \"UA\",\n    \"currencyCode\" : \"UAH\"\n  }, {\n    \"name\" : \"Uganda\",\n    \"currencySymbol\" : \"UGX\",\n    \"id\" : \"UG\",\n    \"currencyCode\" : \"UGX\"\n  }, {\n    \"name\" : \"Algeria\",\n    \"currencySymbol\" : \"DZD\",\n    \"id\" : \"DZ\",\n    \"currencyCode\" : \"DZD\"\n  }, {\n    \"name\" : \"U.S. Outlying Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"UM\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Ecuador\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"EC\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"United States\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"US\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Estonia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"EE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Egypt\",\n    \"currencySymbol\" : \"EGP\",\n    \"id\" : \"EG\",\n    \"currencyCode\" : \"EGP\"\n  }, {\n    \"name\" : \"Western Sahara\",\n    \"currencySymbol\" : \"MAD\",\n    \"id\" : \"EH\",\n    \"currencyCode\" : \"MAD\"\n  }, {\n    \"name\" : \"Uruguay\",\n    \"currencySymbol\" : \"UYU\",\n    \"id\" : \"UY\",\n    \"currencyCode\" : \"UYU\"\n  }, {\n    \"name\" : \"Uzbekistan\",\n    \"currencySymbol\" : \"UZS\",\n    \"id\" : \"UZ\",\n    \"currencyCode\" : \"UZS\"\n  }, {\n    \"name\" : \"Vatican City\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"VA\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Eritrea\",\n    \"currencySymbol\" : \"ERN\",\n    \"id\" : \"ER\",\n    \"currencyCode\" : \"ERN\"\n  }, {\n    \"name\" : \"St. Vincent & Grenadines\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"VC\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Spain\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"ES\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Ethiopia\",\n    \"currencySymbol\" : \"ETB\",\n    \"id\" : \"ET\",\n    \"currencyCode\" : \"ETB\"\n  }, {\n    \"name\" : \"Venezuela\",\n    \"currencySymbol\" : \"VES\",\n    \"id\" : \"VE\",\n    \"currencyCode\" : \"VES\"\n  }, {\n    \"name\" : \"British Virgin Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"VG\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"U.S. Virgin Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"VI\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Vietnam\",\n    \"currencySymbol\" : \"VND\",\n    \"id\" : \"VN\",\n    \"currencyCode\" : \"VND\"\n  }, {\n    \"name\" : \"Vanuatu\",\n    \"currencySymbol\" : \"VUV\",\n    \"id\" : \"VU\",\n    \"currencyCode\" : \"VUV\"\n  }, {\n    \"name\" : \"Finland\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"FI\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Fiji\",\n    \"currencySymbol\" : \"FJD\",\n    \"id\" : \"FJ\",\n    \"currencyCode\" : \"FJD\"\n  }, {\n    \"name\" : \"Falkland Islands\",\n    \"currencySymbol\" : \"FKP\",\n    \"id\" : \"FK\",\n    \"currencyCode\" : \"FKP\"\n  }, {\n    \"name\" : \"Micronesia\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"FM\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Faroe Islands\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"FO\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"France\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"FR\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Wallis & Futuna\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"WF\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Gabon\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"GA\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"United Kingdom\",\n    \"currencySymbol\" : \"£\",\n    \"id\" : \"GB\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Samoa\",\n    \"currencySymbol\" : \"WST\",\n    \"id\" : \"WS\",\n    \"currencyCode\" : \"WST\"\n  }, {\n    \"name\" : \"Grenada\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"GD\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Georgia\",\n    \"currencySymbol\" : \"GEL\",\n    \"id\" : \"GE\",\n    \"currencyCode\" : \"GEL\"\n  }, {\n    \"name\" : \"French Guiana\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Guernsey\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"GG\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Ghana\",\n    \"currencySymbol\" : \"GHS\",\n    \"id\" : \"GH\",\n    \"currencyCode\" : \"GHS\"\n  }, {\n    \"name\" : \"Gibraltar\",\n    \"currencySymbol\" : \"GIP\",\n    \"id\" : \"GI\",\n    \"currencyCode\" : \"GIP\"\n  }, {\n    \"name\" : \"Greenland\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"GL\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"Gambia\",\n    \"currencySymbol\" : \"GMD\",\n    \"id\" : \"GM\",\n    \"currencyCode\" : \"GMD\"\n  }, {\n    \"name\" : \"Guinea\",\n    \"currencySymbol\" : \"GNF\",\n    \"id\" : \"GN\",\n    \"currencyCode\" : \"GNF\"\n  }, {\n    \"name\" : \"Guadeloupe\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GP\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Equatorial Guinea\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"GQ\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Greece\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GR\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"South Georgia & South Sandwich Islands\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"GS\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Guatemala\",\n    \"currencySymbol\" : \"GTQ\",\n    \"id\" : \"GT\",\n    \"currencyCode\" : \"GTQ\"\n  }, {\n    \"name\" : \"Guam\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"GU\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Guinea-Bissau\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"GW\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Guyana\",\n    \"currencySymbol\" : \"GYD\",\n    \"id\" : \"GY\",\n    \"currencyCode\" : \"GYD\"\n  }, {\n    \"name\" : \"Kosovo\",\n    \"currencySymbol\" : \"XXX\",\n    \"id\" : \"XK\",\n    \"currencyCode\" : \"-\"\n  }, {\n    \"name\" : \"Hong Kong SAR China\",\n    \"currencySymbol\" : \"HKD\",\n    \"id\" : \"HK\",\n    \"currencyCode\" : \"HKD\"\n  }, {\n    \"name\" : \"Heard & McDonald Islands\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"HM\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Honduras\",\n    \"currencySymbol\" : \"HNL\",\n    \"id\" : \"HN\",\n    \"currencyCode\" : \"HNL\"\n  }, {\n    \"name\" : \"Croatia\",\n    \"currencySymbol\" : \"HRK\",\n    \"id\" : \"HR\",\n    \"currencyCode\" : \"HRK\"\n  }, {\n    \"name\" : \"Haiti\",\n    \"currencySymbol\" : \"HTG\",\n    \"id\" : \"HT\",\n    \"currencyCode\" : \"HTG\"\n  }, {\n    \"name\" : \"Yemen\",\n    \"currencySymbol\" : \"YER\",\n    \"id\" : \"YE\",\n    \"currencyCode\" : \"YER\"\n  }, {\n    \"name\" : \"Hungary\",\n    \"currencySymbol\" : \"HUF\",\n    \"id\" : \"HU\",\n    \"currencyCode\" : \"HUF\"\n  }, {\n    \"name\" : \"Indonesia\",\n    \"currencySymbol\" : \"IDR\",\n    \"id\" : \"ID\",\n    \"currencyCode\" : \"IDR\"\n  }, {\n    \"name\" : \"Mayotte\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"YT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Ireland\",\n    \"currencySymbol\" : \"€\",\n    \"id\" : \"IE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Israel\",\n    \"currencySymbol\" : \"ILS\",\n    \"id\" : \"IL\",\n    \"currencyCode\" : \"ILS\"\n  }, {\n    \"name\" : \"Isle of Man\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"IM\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"India\",\n    \"currencySymbol\" : \"Rs.\",\n    \"id\" : \"IN\",\n    \"currencyCode\" : \"INR\"\n  }, {\n    \"name\" : \"British Indian Ocean Territory\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"IO\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"South Africa\",\n    \"currencySymbol\" : \"R\",\n    \"id\" : \"ZA\",\n    \"currencyCode\" : \"ZAR\"\n  }, {\n    \"name\" : \"Iraq\",\n    \"currencySymbol\" : \"IQD\",\n    \"id\" : \"IQ\",\n    \"currencyCode\" : \"IQD\"\n  }, {\n    \"name\" : \"Iran\",\n    \"currencySymbol\" : \"IRR\",\n    \"id\" : \"IR\",\n    \"currencyCode\" : \"IRR\"\n  }, {\n    \"name\" : \"Iceland\",\n    \"currencySymbol\" : \"ISK\",\n    \"id\" : \"IS\",\n    \"currencyCode\" : \"ISK\"\n  }, {\n    \"name\" : \"Italy\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"IT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Zambia\",\n    \"currencySymbol\" : \"ZMW\",\n    \"id\" : \"ZM\",\n    \"currencyCode\" : \"ZMW\"\n  }, {\n    \"name\" : \"Jersey\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"JE\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Zimbabwe\",\n    \"currencySymbol\" : \"ZWL\",\n    \"id\" : \"ZW\",\n    \"currencyCode\" : \"ZWL\"\n  }, {\n    \"name\" : \"Jamaica\",\n    \"currencySymbol\" : \"JMD\",\n    \"id\" : \"JM\",\n    \"currencyCode\" : \"JMD\"\n  }, {\n    \"name\" : \"Jordan\",\n    \"currencySymbol\" : \"JOD\",\n    \"id\" : \"JO\",\n    \"currencyCode\" : \"JOD\"\n  }, {\n    \"name\" : \"Japan\",\n    \"currencySymbol\" : \"JPY\",\n    \"id\" : \"JP\",\n    \"currencyCode\" : \"JPY\"\n  }, {\n    \"name\" : \"Kenya\",\n    \"currencySymbol\" : \"KES\",\n    \"id\" : \"KE\",\n    \"currencyCode\" : \"KES\"\n  }, {\n    \"name\" : \"Kyrgyzstan\",\n    \"currencySymbol\" : \"KGS\",\n    \"id\" : \"KG\",\n    \"currencyCode\" : \"KGS\"\n  }, {\n    \"name\" : \"Cambodia\",\n    \"currencySymbol\" : \"KHR\",\n    \"id\" : \"KH\",\n    \"currencyCode\" : \"KHR\"\n  }, {\n    \"name\" : \"Kiribati\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"KI\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Comoros\",\n    \"currencySymbol\" : \"KMF\",\n    \"id\" : \"KM\",\n    \"currencyCode\" : \"KMF\"\n  }, {\n    \"name\" : \"St. Kitts & Nevis\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"KN\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"North Korea\",\n    \"currencySymbol\" : \"KPW\",\n    \"id\" : \"KP\",\n    \"currencyCode\" : \"KPW\"\n  }, {\n    \"name\" : \"South Korea\",\n    \"currencySymbol\" : \"KRW\",\n    \"id\" : \"KR\",\n    \"currencyCode\" : \"KRW\"\n  }, {\n    \"name\" : \"Kuwait\",\n    \"currencySymbol\" : \"KWD\",\n    \"id\" : \"KW\",\n    \"currencyCode\" : \"KWD\"\n  }, {\n    \"name\" : \"Cayman Islands\",\n    \"currencySymbol\" : \"KYD\",\n    \"id\" : \"KY\",\n    \"currencyCode\" : \"KYD\"\n  }, {\n    \"name\" : \"Kazakhstan\",\n    \"currencySymbol\" : \"KZT\",\n    \"id\" : \"KZ\",\n    \"currencyCode\" : \"KZT\"\n  }, {\n    \"name\" : \"Laos\",\n    \"currencySymbol\" : \"LAK\",\n    \"id\" : \"LA\",\n    \"currencyCode\" : \"LAK\"\n  }, {\n    \"name\" : \"Lebanon\",\n    \"currencySymbol\" : \"LBP\",\n    \"id\" : \"LB\",\n    \"currencyCode\" : \"LBP\"\n  }, {\n    \"name\" : \"St. Lucia\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"LC\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Liechtenstein\",\n    \"currencySymbol\" : \"CHF\",\n    \"id\" : \"LI\",\n    \"currencyCode\" : \"CHF\"\n  }, {\n    \"name\" : \"Sri Lanka\",\n    \"currencySymbol\" : \"LKR\",\n    \"id\" : \"LK\",\n    \"currencyCode\" : \"LKR\"\n  }, {\n    \"name\" : \"Liberia\",\n    \"currencySymbol\" : \"LRD\",\n    \"id\" : \"LR\",\n    \"currencyCode\" : \"LRD\"\n  }, {\n    \"name\" : \"Lesotho\",\n    \"currencySymbol\" : \"LSL\",\n    \"id\" : \"LS\",\n    \"currencyCode\" : \"LSL\"\n  }, {\n    \"name\" : \"Lithuania\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Luxembourg\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LU\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Latvia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LV\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Libya\",\n    \"currencySymbol\" : \"LYD\",\n    \"id\" : \"LY\",\n    \"currencyCode\" : \"LYD\"\n  }, {\n    \"name\" : \"Morocco\",\n    \"currencySymbol\" : \"MAD\",\n    \"id\" : \"MA\",\n    \"currencyCode\" : \"MAD\"\n  }, {\n    \"name\" : \"Monaco\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MC\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Moldova\",\n    \"currencySymbol\" : \"MDL\",\n    \"id\" : \"MD\",\n    \"currencyCode\" : \"MDL\"\n  }, {\n    \"name\" : \"Montenegro\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"ME\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"St. Martin\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Madagascar\",\n    \"currencySymbol\" : \"MGA\",\n    \"id\" : \"MG\",\n    \"currencyCode\" : \"MGA\"\n  }, {\n    \"name\" : \"Marshall Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"MH\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"North Macedonia\",\n    \"currencySymbol\" : \"MKD\",\n    \"id\" : \"MK\",\n    \"currencyCode\" : \"MKD\"\n  }, {\n    \"name\" : \"Mali\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"ML\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Myanmar (Burma)\",\n    \"currencySymbol\" : \"MMK\",\n    \"id\" : \"MM\",\n    \"currencyCode\" : \"MMK\"\n  }, {\n    \"name\" : \"Mongolia\",\n    \"currencySymbol\" : \"MNT\",\n    \"id\" : \"MN\",\n    \"currencyCode\" : \"MNT\"\n  }, {\n    \"name\" : \"Macao SAR China\",\n    \"currencySymbol\" : \"MOP\",\n    \"id\" : \"MO\",\n    \"currencyCode\" : \"MOP\"\n  }, {\n    \"name\" : \"Northern Mariana Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"MP\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Martinique\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MQ\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Mauritania\",\n    \"currencySymbol\" : \"MRU\",\n    \"id\" : \"MR\",\n    \"currencyCode\" : \"MRU\"\n  }, {\n    \"name\" : \"Montserrat\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"MS\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Malta\",\n    \"currencySymbol\" : \"€\",\n    \"id\" : \"MT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Mauritius\",\n    \"currencySymbol\" : \"MUR\",\n    \"id\" : \"MU\",\n    \"currencyCode\" : \"MUR\"\n  }, {\n    \"name\" : \"Maldives\",\n    \"currencySymbol\" : \"MVR\",\n    \"id\" : \"MV\",\n    \"currencyCode\" : \"MVR\"\n  }, {\n    \"name\" : \"Malawi\",\n    \"currencySymbol\" : \"MWK\",\n    \"id\" : \"MW\",\n    \"currencyCode\" : \"MWK\"\n  }, {\n    \"name\" : \"Mexico\",\n    \"currencySymbol\" : \"MXN\",\n    \"id\" : \"MX\",\n    \"currencyCode\" : \"MXN\"\n  }, {\n    \"name\" : \"Malaysia\",\n    \"currencySymbol\" : \"MYR\",\n    \"id\" : \"MY\",\n    \"currencyCode\" : \"MYR\"\n  }, {\n    \"name\" : \"Mozambique\",\n    \"currencySymbol\" : \"MZN\",\n    \"id\" : \"MZ\",\n    \"currencyCode\" : \"MZN\"\n  }, {\n    \"name\" : \"Namibia\",\n    \"currencySymbol\" : \"NAD\",\n    \"id\" : \"NA\",\n    \"currencyCode\" : \"NAD\"\n  }, {\n    \"name\" : \"New Caledonia\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"NC\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Niger\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"NE\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Norfolk Island\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"NF\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Nigeria\",\n    \"currencySymbol\" : \"NGN\",\n    \"id\" : \"NG\",\n    \"currencyCode\" : \"NGN\"\n  }, {\n    \"name\" : \"Nicaragua\",\n    \"currencySymbol\" : \"NIO\",\n    \"id\" : \"NI\",\n    \"currencyCode\" : \"NIO\"\n  }, {\n    \"name\" : \"Netherlands\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"NL\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Norway\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"NO\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Nepal\",\n    \"currencySymbol\" : \"NPR\",\n    \"id\" : \"NP\",\n    \"currencyCode\" : \"NPR\"\n  }, {\n    \"name\" : \"Nauru\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"NR\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Niue\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"NU\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"New Zealand\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"NZ\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Oman\",\n    \"currencySymbol\" : \"OMR\",\n    \"id\" : \"OM\",\n    \"currencyCode\" : \"OMR\"\n  }, {\n    \"name\" : \"Panama\",\n    \"currencySymbol\" : \"PAB\",\n    \"id\" : \"PA\",\n    \"currencyCode\" : \"PAB\"\n  }, {\n    \"name\" : \"Peru\",\n    \"currencySymbol\" : \"PEN\",\n    \"id\" : \"PE\",\n    \"currencyCode\" : \"PEN\"\n  }, {\n    \"name\" : \"French Polynesia\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"PF\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Papua New Guinea\",\n    \"currencySymbol\" : \"PGK\",\n    \"id\" : \"PG\",\n    \"currencyCode\" : \"PGK\"\n  }, {\n    \"name\" : \"Philippines\",\n    \"currencySymbol\" : \"Php\",\n    \"id\" : \"PH\",\n    \"currencyCode\" : \"PHP\"\n  }, {\n    \"name\" : \"Pakistan\",\n    \"currencySymbol\" : \"PKR\",\n    \"id\" : \"PK\",\n    \"currencyCode\" : \"PKR\"\n  }, {\n    \"name\" : \"Poland\",\n    \"currencySymbol\" : \"PLN\",\n    \"id\" : \"PL\",\n    \"currencyCode\" : \"PLN\"\n  }, {\n    \"name\" : \"St. Pierre & Miquelon\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"PM\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Pitcairn Islands\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"PN\",\n    \"currencyCode\" : \"NZD\"\n  } ],\n  \"countries\" : {\n    \"Papua New Guinea\" : \"en_PG\",\n    \"Cambodia\" : \"km_KH\",\n    \"Kazakhstan\" : \"ru_KZ\",\n    \"Paraguay\" : \"es_PY\",\n    \"Syria\" : \"ar_SY\",\n    \"Bahamas\" : \"en_BS\",\n    \"Solomon Islands\" : \"en_SB\",\n    \"Montserrat\" : \"en_MS\",\n    \"Mali\" : \"fr_ML\",\n    \"Marshall Islands\" : \"en_MH\",\n    \"Guadeloupe\" : \"fr_GP\",\n    \"Panama\" : \"es_PA\",\n    \"Laos\" : \"lo_LA\",\n    \"Vatican\" : \"it_VA\",\n    \"Argentina\" : \"es_AR\",\n    \"Falkland Islands\" : \"en_FK\",\n    \"Virgin Islands\" : \"en_VI\",\n    \"Seychelles\" : \"en_SC\",\n    \"Belize\" : \"en_BZ\",\n    \"Zambia\" : \"en_ZM\",\n    \"Bahrain\" : \"ar_BH\",\n    \"Congo\" : \"fr_CG\",\n    \"Namibia\" : \"en_NA\",\n    \"Comoros\" : \"fr_KM\",\n    \"Faroe Islands\" : \"fo_FO\",\n    \"Finland\" : \"fi_FI\",\n    \"Netherlands Antilles\" : \"nl_AN\",\n    \"Georgia\" : \"ka_GE\",\n    \"Yemen\" : \"ar_YE\",\n    \"Eritrea\" : \"en_ER\",\n    \"Puerto Rico\" : \"es_PR\",\n    \"Aruba\" : \"nl_AW\",\n    \"Madagascar\" : \"en_MG\",\n    \"Libya\" : \"ar_LY\",\n    \"Sweden\" : \"sv_SE\",\n    \"Malawi\" : \"en_MW\",\n    \"Andorra\" : \"ca_AD\",\n    \"Liechtenstein\" : \"de_LI\",\n    \"Algerian\" : \"ar_DZ\",\n    \"Poland\" : \"pl_PL\",\n    \"Bulgaria\" : \"bg_BG\",\n    \"Jordan\" : \"ar_JO\",\n    \"Tunisia\" : \"ar_TN\",\n    \"Tuvalu\" : \"en_TV\",\n    \"United Arab Emirates\" : \"ar_AE\",\n    \"Kenya\" : \"sw_KE\",\n    \"French Polynesia\" : \"fr_PF\",\n    \"Brunei\" : \"ms_BN\",\n    \"Djibouti\" : \"ar_DJ\",\n    \"Lebanon\" : \"ar_LB\",\n    \"Azerbaijan\" : \"az_AZ\",\n    \"Cuba\" : \"es_CU\",\n    \"Czech Republic\" : \"cs_CZ\",\n    \"Mauritania\" : \"ar_MR\",\n    \"Saint Lucia\" : \"en_LC\",\n    \"Mayotte\" : \"fr_YT\",\n    \"Israel\" : \"iw_IL\",\n    \"San Marino\" : \"it_SM\",\n    \"Australia\" : \"en_AU\",\n    \"Tajikistan\" : \"fa_TJ\",\n    \"Myanmar\" : \"my_MM\",\n    \"Cameroon\" : \"fr_CM\",\n    \"Gibraltar\" : \"en_GI\",\n    \"Cyprus\" : \"el_CY\",\n    \"Northern Mariana Islands\" : \"en_MP\",\n    \"Malaysia\" : \"ms_MY\",\n    \"BelgiumFrench\" : \"fr_BE\",\n    \"dIvoire\" : \"fr_CI\",\n    \"Iceland\" : \"is_IS\",\n    \"Oman\" : \"ar_OM\",\n    \"Armenia\" : \"hy_AM\",\n    \"Gabon\" : \"fr_GA\",\n    \"CanadaFrench\" : \"fr_CA\",\n    \"Brazil\" : \"pt_BR\",\n    \"Slovenia\" : \"sl_SI\",\n    \"LuxembourgFrench\" : \"fr_LU\",\n    \"Antigua and Barbuda\" : \"en_AG\",\n    \"Colombia\" : \"es_CO\",\n    \"Ecuador\" : \"es_EC\",\n    \"Moldova\" : \"ro_MD\",\n    \"Vanuatu\" : \"bi_VU\",\n    \"United States Minor Outlying Islands\" : \"en_UM\",\n    \"Cocos Islands\" : \"en_CC\",\n    \"Honduras\" : \"es_HN\",\n    \"Italy\" : \"it_IT\",\n    \"Antarctica\" : \"en_AQ\",\n    \"Nauru\" : \"en_NR\",\n    \"SwitzerlandFrench\" : \"fr_CH\",\n    \"Haiti\" : \"fr_HT\",\n    \"Afghanistan\" : \"ps_AF\",\n    \"Burundi\" : \"fr_BI\",\n    \"CanadaEnglish\" : \"en_CA\",\n    \"Singapore\" : \"en_SG\",\n    \"French Guiana\" : \"fr_GF\",\n    \"GuineaBissau\" : \"pt_GW\",\n    \"American Samoa\" : \"en_AS\",\n    \"Christmas Island\" : \"en_CX\",\n    \"Russia\" : \"ru_RU\",\n    \"Netherlands\" : \"nl_NL\",\n    \"China\" : \"zh_CN\",\n    \"Martinique\" : \"fr_MQ\",\n    \"The Democratic Republic Of Congo\" : \"fr_CD\",\n    \"Kyrgyzstan\" : \"uz_KG\",\n    \"Wallis And Futuna\" : \"fr_WF\",\n    \"Reunion\" : \"fr_RE\",\n    \"Saint Pierre And Miquelon\" : \"fr_PM\",\n    \"Bhutan\" : \"en_BT\",\n    \"Romania\" : \"ro_RO\",\n    \"Togo\" : \"fr_TG\",\n    \"Philippines\" : \"en_PH\",\n    \"Uzbekistan\" : \"uz_UZ\",\n    \"Pitcairn\" : \"en_PN\",\n    \"British Virgin Islands\" : \"en_VG\",\n    \"Zimbabwe\" : \"en_ZW\",\n    \"British Indian Ocean Territory\" : \"en_IO\",\n    \"Dominica\" : \"en_DM\",\n    \"Indonesia\" : \"id_ID\",\n    \"Benin\" : \"fr_BJ\",\n    \"Angola\" : \"pt_AO\",\n    \"Sudan\" : \"ar_SD\",\n    \"Portugal\" : \"pt_PT\",\n    \"New Caledonia\" : \"fr_NC\",\n    \"Grenada\" : \"en_GD\",\n    \"North Korea\" : \"ko_KP\",\n    \"Cayman Islands\" : \"en_KY\",\n    \"Greece\" : \"el_GR\",\n    \"Latvia\" : \"lv_LV\",\n    \"Mongolia\" : \"mn_MN\",\n    \"Iran\" : \"fa_IR\",\n    \"Morocco\" : \"ar_MA\",\n    \"Guatemala\" : \"es_GT\",\n    \"Guyana\" : \"en_GY\",\n    \"Iraq\" : \"ar_IQ\",\n    \"Chile\" : \"es_CL\",\n    \"Nepal\" : \"ne_NP\",\n    \"SpainCatalan\" : \"ca_ES\",\n    \"Tanzania\" : \"sw_TZ\",\n    \"Ukraine\" : \"uk_UA\",\n    \"Ghana\" : \"en_GH\",\n    \"Anguilla\" : \"en_AI\",\n    \"Saint Vincent And The Grenadines\" : \"en_VC\",\n    \"SwitzerlandItalian\" : \"it_CH\",\n    \"India\" : \"en_IN\",\n    \"Maldives\" : \"dv_MV\",\n    \"Turkey\" : \"tr_TR\",\n    \"Taiwan\" : \"zh_TW\",\n    \"South Africa\" : \"en_ZA\",\n    \"Trinidad and Tobago\" : \"en_TT\",\n    \"Bermuda\" : \"en_BM\",\n    \"Central African Republic\" : \"fr_CF\",\n    \"Jamaica\" : \"en_JM\",\n    \"Peru\" : \"es_PE\",\n    \"Turkmenistan\" : \"tk_TM\",\n    \"Germany\" : \"de_DE\",\n    \"Fiji\" : \"fj_FJ\",\n    \"Tokelau\" : \"en_TK\",\n    \"Hong Kong\" : \"zh_HK\",\n    \"Guinea\" : \"fr_GN\",\n    \"United States\" : \"en_US\",\n    \"Chad\" : \"ar_TD\",\n    \"Somalia\" : \"so_SO\",\n    \"Thailand\" : \"th_TH\",\n    \"Equatorial Guinea\" : \"es_GQ\",\n    \"Kiribati\" : \"en_KI\",\n    \"Costa Rica\" : \"es_CR\",\n    \"Vietnam\" : \"vi_VN\",\n    \"Kuwait\" : \"ar_KW\",\n    \"Nigeria\" : \"en_NG\",\n    \"Croatia\" : \"hr_HR\",\n    \"Sao Tome And Principe\" : \"pt_ST\",\n    \"Cook Islands\" : \"en_CK\",\n    \"Sri Lanka\" : \"si_LK\",\n    \"Uruguay\" : \"es_UY\",\n    \"United Kingdom\" : \"en_GB\",\n    \"Samoa\" : \"en_WS\",\n    \"Palestine\" : \"ar_PS\",\n    \"Liberia\" : \"en_LR\",\n    \"Venezuela\" : \"es_VE\",\n    \"Burkina Faso\" : \"fr_BF\",\n    \"Swaziland\" : \"en_SZ\",\n    \"Palau\" : \"en_PW\",\n    \"Turks And Caicos Islands\" : \"en_TC\",\n    \"Estonia\" : \"et_EE\",\n    \"Niue\" : \"en_NU\",\n    \"Heard Island And McDonald Islands\" : \"en_HM\",\n    \"Svalbard And Jan Mayen\" : \"no_SJ\",\n    \"BelgiumDutch\" : \"nl_BE\",\n    \"SpainSpanish\" : \"es_ES\",\n    \"Austria\" : \"de_AT\",\n    \"South Korea\" : \"ko_KR\",\n    \"Mozambique\" : \"pt_MZ\",\n    \"El Salvador\" : \"es_SV\",\n    \"Monaco\" : \"fr_MC\",\n    \"Guam\" : \"en_GU\",\n    \"Lesotho\" : \"en_LS\",\n    \"Tonga\" : \"to_TO\",\n    \"Western Sahara\" : \"ar_EH\",\n    \"Hungary\" : \"hu_HU\",\n    \"land Islands\" : \"sv_AX\",\n    \"Japan\" : \"ja_JP\",\n    \"Belarus\" : \"be_BY\",\n    \"SwitzerlandGerman\" : \"de_CH\",\n    \"Mauritius\" : \"en_MU\",\n    \"Bouvet Island\" : \"no_BV\",\n    \"Norfolk Island\" : \"en_NF\",\n    \"New Zealand\" : \"en_NZ\",\n    \"Senegal\" : \"fr_SN\",\n    \"TimorLeste\" : \"pt_TL\",\n    \"Macedonia\" : \"mk_MK\",\n    \"Ethiopia\" : \"am_ET\",\n    \"Egypt\" : \"ar_EG\",\n    \"Sierra Leone\" : \"en_SL\",\n    \"Bolivia\" : \"es_BO\",\n    \"LuxembourgGerman\" : \"de_LU\",\n    \"Malta\" : \"mt_MT\",\n    \"Saudi Arabia\" : \"ar_SA\",\n    \"Cape Verde\" : \"pt_CV\",\n    \"South Georgia And The South Sandwich Islands\" : \"en_GS\",\n    \"Pakistan\" : \"en_PK\",\n    \"Kosovo\" : \"en_XK\",\n    \"Gambia\" : \"en_GM\",\n    \"Ireland\" : \"en_IE\",\n    \"Qatar\" : \"ar_QA\",\n    \"Serbia and Montenegro\" : \"sr_CS\",\n    \"Slovakia\" : \"sk_SK\",\n    \"France\" : \"fr_FR\",\n    \"Lithuania\" : \"lt_LT\",\n    \"Bosnia and Herzegovina\" : \"bs_BA\",\n    \"Albanian\" : \"sq_AL\",\n    \"Niger\" : \"fr_NE\",\n    \"Rwanda\" : \"rw_RW\",\n    \"Saint Kitts And Nevis\" : \"en_KN\",\n    \"French Southern Territories\" : \"fr_TF\",\n    \"Bangladesh\" : \"bn_BD\",\n    \"Barbados\" : \"en_BB\",\n    \"Nicaragua\" : \"es_NI\",\n    \"Norway\" : \"no_NO\",\n    \"Botswana\" : \"en_BW\",\n    \"Macao\" : \"zh_MO\",\n    \"Denmark\" : \"da_DK\",\n    \"Dominican Republic\" : \"es_DO\",\n    \"Mexico\" : \"es_MX\",\n    \"Uganda\" : \"en_UG\",\n    \"Micronesia\" : \"en_FM\",\n    \"Suriname\" : \"nl_SR\",\n    \"Greenland\" : \"kl_GL\",\n    \"Saint Helena\" : \"en_SH\"\n  }\n}"
  },
  {
    "Api name": "List all languages",
    "Api URL": "/api/v1/languages",
    "Api Method": "GET",
    "Desc": "This API lists the languages that are available for listing in Zoho Desk.",
    "OAuth Scope": "",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/languages\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"languages\" : {\n    \"Italian\" : \"it_IT\",\n    \"French\" : \"fr_FR\",\n    \"Russian\" : \"ru_RU\",\n    \"English (United States)\" : \"en_US\",\n    \"Chinese\" : \"zh_CN\",\n    \"Danish\" : \"da_DK\",\n    \"Spanish\" : \"es_ES\",\n    \"German\" : \"de_DE\",\n    \"Japanese\" : \"ja_JP\",\n    \"Dutch\" : \"nl_NL\",\n    \"Turkish\" : \"tr_TR\",\n    \"Portuguese (Brazil)\" : \"pt_BR\"\n  }\n}"
  },
  {
    "Api name": "List all time zones",
    "Api URL": "/api/v1/timeZones",
    "Api Method": "GET",
    "Desc": "This API lists the time zones that are available for listing in Zoho Desk.",
    "OAuth Scope": "",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/timeZones\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Abidjan )\",\n    \"id\" : \"Africa/Abidjan\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Ghana Mean Time( Africa/Accra )\",\n    \"id\" : \"Africa/Accra\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Addis_Ababa )\",\n    \"id\" : \"Africa/Addis_Ababa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Time( Africa/Algiers )\",\n    \"id\" : \"Africa/Algiers\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Asmara )\",\n    \"id\" : \"Africa/Asmara\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Asmera )\",\n    \"id\" : \"Africa/Asmera\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Bamako )\",\n    \"id\" : \"Africa/Bamako\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Bangui )\",\n    \"id\" : \"Africa/Bangui\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Banjul )\",\n    \"id\" : \"Africa/Banjul\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Greenwich Mean Time( Africa/Bissau )\",\n    \"id\" : \"Africa/Bissau\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Blantyre )\",\n    \"id\" : \"Africa/Blantyre\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Brazzaville )\",\n    \"id\" : \"Africa/Brazzaville\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Bujumbura )\",\n    \"id\" : \"Africa/Bujumbura\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Africa/Cairo )\",\n    \"id\" : \"Africa/Cairo\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Africa/Casablanca )\",\n    \"id\" : \"Africa/Casablanca\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Summer Time( Africa/Ceuta )\",\n    \"id\" : \"Africa/Ceuta\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Conakry )\",\n    \"id\" : \"Africa/Conakry\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Dakar )\",\n    \"id\" : \"Africa/Dakar\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Dar_es_Salaam )\",\n    \"id\" : \"Africa/Dar_es_Salaam\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Djibouti )\",\n    \"id\" : \"Africa/Djibouti\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Douala )\",\n    \"id\" : \"Africa/Douala\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Western European Summer Time( Africa/El_Aaiun )\",\n    \"id\" : \"Africa/El_Aaiun\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Freetown )\",\n    \"id\" : \"Africa/Freetown\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Gaborone )\",\n    \"id\" : \"Africa/Gaborone\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Harare )\",\n    \"id\" : \"Africa/Harare\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Johannesburg )\",\n    \"id\" : \"Africa/Johannesburg\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern African Time( Africa/Juba )\",\n    \"id\" : \"Africa/Juba\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Kampala )\",\n    \"id\" : \"Africa/Kampala\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern African Time( Africa/Khartoum )\",\n    \"id\" : \"Africa/Khartoum\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Kigali )\",\n    \"id\" : \"Africa/Kigali\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Kinshasa )\",\n    \"id\" : \"Africa/Kinshasa\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Lagos )\",\n    \"id\" : \"Africa/Lagos\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Libreville )\",\n    \"id\" : \"Africa/Libreville\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Lome )\",\n    \"id\" : \"Africa/Lome\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Luanda )\",\n    \"id\" : \"Africa/Luanda\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Lubumbashi )\",\n    \"id\" : \"Africa/Lubumbashi\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Lusaka )\",\n    \"id\" : \"Africa/Lusaka\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Malabo )\",\n    \"id\" : \"Africa/Malabo\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Maputo )\",\n    \"id\" : \"Africa/Maputo\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Maseru )\",\n    \"id\" : \"Africa/Maseru\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Mbabane )\",\n    \"id\" : \"Africa/Mbabane\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Mogadishu )\",\n    \"id\" : \"Africa/Mogadishu\"\n  }, {\n    \"name\" : \"( GMT 0:44 ) Greenwich Mean Time( Africa/Monrovia )\",\n    \"id\" : \"Africa/Monrovia\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Nairobi )\",\n    \"id\" : \"Africa/Nairobi\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Ndjamena )\",\n    \"id\" : \"Africa/Ndjamena\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Niamey )\",\n    \"id\" : \"Africa/Niamey\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Nouakchott )\",\n    \"id\" : \"Africa/Nouakchott\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Ouagadougou )\",\n    \"id\" : \"Africa/Ouagadougou\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Porto-Novo )\",\n    \"id\" : \"Africa/Porto-Novo\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Sao_Tome )\",\n    \"id\" : \"Africa/Sao_Tome\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Timbuktu )\",\n    \"id\" : \"Africa/Timbuktu\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Africa/Tripoli )\",\n    \"id\" : \"Africa/Tripoli\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Time( Africa/Tunis )\",\n    \"id\" : \"Africa/Tunis\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Western African Summer Time( Africa/Windhoek )\",\n    \"id\" : \"Africa/Windhoek\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( America/Adak )\",\n    \"id\" : \"America/Adak\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Alaska Daylight Time( America/Anchorage )\",\n    \"id\" : \"America/Anchorage\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Anguilla )\",\n    \"id\" : \"America/Anguilla\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Antigua )\",\n    \"id\" : \"America/Antigua\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Araguaina )\",\n    \"id\" : \"America/Araguaina\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Buenos_Aires )\",\n    \"id\" : \"America/Argentina/Buenos_Aires\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Catamarca )\",\n    \"id\" : \"America/Argentina/Catamarca\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/ComodRivadavia )\",\n    \"id\" : \"America/Argentina/ComodRivadavia\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Cordoba )\",\n    \"id\" : \"America/Argentina/Cordoba\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Jujuy )\",\n    \"id\" : \"America/Argentina/Jujuy\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/La_Rioja )\",\n    \"id\" : \"America/Argentina/La_Rioja\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Mendoza )\",\n    \"id\" : \"America/Argentina/Mendoza\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Rio_Gallegos )\",\n    \"id\" : \"America/Argentina/Rio_Gallegos\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Salta )\",\n    \"id\" : \"America/Argentina/Salta\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/San_Juan )\",\n    \"id\" : \"America/Argentina/San_Juan\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/San_Luis )\",\n    \"id\" : \"America/Argentina/San_Luis\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Tucuman )\",\n    \"id\" : \"America/Argentina/Tucuman\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Ushuaia )\",\n    \"id\" : \"America/Argentina/Ushuaia\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Aruba )\",\n    \"id\" : \"America/Aruba\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Paraguay Summer Time( America/Asuncion )\",\n    \"id\" : \"America/Asuncion\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Atikokan )\",\n    \"id\" : \"America/Atikokan\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( America/Atka )\",\n    \"id\" : \"America/Atka\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Bahia )\",\n    \"id\" : \"America/Bahia\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Central Daylight Time( America/Bahia_Banderas )\",\n    \"id\" : \"America/Bahia_Banderas\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Barbados )\",\n    \"id\" : \"America/Barbados\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Belem )\",\n    \"id\" : \"America/Belem\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Belize )\",\n    \"id\" : \"America/Belize\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Blanc-Sablon )\",\n    \"id\" : \"America/Blanc-Sablon\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Boa_Vista )\",\n    \"id\" : \"America/Boa_Vista\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Colombia Time( America/Bogota )\",\n    \"id\" : \"America/Bogota\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Boise )\",\n    \"id\" : \"America/Boise\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Buenos_Aires )\",\n    \"id\" : \"America/Buenos_Aires\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Cambridge_Bay )\",\n    \"id\" : \"America/Cambridge_Bay\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Summer Time( America/Campo_Grande )\",\n    \"id\" : \"America/Campo_Grande\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Standard Time( America/Cancun )\",\n    \"id\" : \"America/Cancun\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Venezuela Time( America/Caracas )\",\n    \"id\" : \"America/Caracas\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Catamarca )\",\n    \"id\" : \"America/Catamarca\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) French Guiana Time( America/Cayenne )\",\n    \"id\" : \"America/Cayenne\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Cayman )\",\n    \"id\" : \"America/Cayman\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Chicago )\",\n    \"id\" : \"America/Chicago\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Mountain Daylight Time( America/Chihuahua )\",\n    \"id\" : \"America/Chihuahua\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Coral_Harbour )\",\n    \"id\" : \"America/Coral_Harbour\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Cordoba )\",\n    \"id\" : \"America/Cordoba\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Costa_Rica )\",\n    \"id\" : \"America/Costa_Rica\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Creston )\",\n    \"id\" : \"America/Creston\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Summer Time( America/Cuiaba )\",\n    \"id\" : \"America/Cuiaba\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Curacao )\",\n    \"id\" : \"America/Curacao\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Greenwich Mean Time( America/Danmarkshavn )\",\n    \"id\" : \"America/Danmarkshavn\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Pacific Daylight Time( America/Dawson )\",\n    \"id\" : \"America/Dawson\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Standard Time( America/Dawson_Creek )\",\n    \"id\" : \"America/Dawson_Creek\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Denver )\",\n    \"id\" : \"America/Denver\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Detroit )\",\n    \"id\" : \"America/Detroit\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Dominica )\",\n    \"id\" : \"America/Dominica\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Edmonton )\",\n    \"id\" : \"America/Edmonton\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Eirunepe )\",\n    \"id\" : \"America/Eirunepe\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/El_Salvador )\",\n    \"id\" : \"America/El_Salvador\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Ensenada )\",\n    \"id\" : \"America/Ensenada\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Fort_Nelson )\",\n    \"id\" : \"America/Fort_Nelson\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Fort_Wayne )\",\n    \"id\" : \"America/Fort_Wayne\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Fortaleza )\",\n    \"id\" : \"America/Fortaleza\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Glace_Bay )\",\n    \"id\" : \"America/Glace_Bay\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Western Greenland Summer Time( America/Godthab )\",\n    \"id\" : \"America/Godthab\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Goose_Bay )\",\n    \"id\" : \"America/Goose_Bay\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Atlantic Standard Time( America/Grand_Turk )\",\n    \"id\" : \"America/Grand_Turk\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Grenada )\",\n    \"id\" : \"America/Grenada\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Guadeloupe )\",\n    \"id\" : \"America/Guadeloupe\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Guatemala )\",\n    \"id\" : \"America/Guatemala\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Ecuador Time( America/Guayaquil )\",\n    \"id\" : \"America/Guayaquil\"\n  }, {\n    \"name\" : \"( GMT -3:45 ) Guyana Time( America/Guyana )\",\n    \"id\" : \"America/Guyana\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Halifax )\",\n    \"id\" : \"America/Halifax\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Cuba Daylight Time( America/Havana )\",\n    \"id\" : \"America/Havana\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Standard Time( America/Hermosillo )\",\n    \"id\" : \"America/Hermosillo\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Indianapolis )\",\n    \"id\" : \"America/Indiana/Indianapolis\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Indiana/Knox )\",\n    \"id\" : \"America/Indiana/Knox\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Marengo )\",\n    \"id\" : \"America/Indiana/Marengo\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Daylight Time( America/Indiana/Petersburg )\",\n    \"id\" : \"America/Indiana/Petersburg\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Central Daylight Time( America/Indiana/Tell_City )\",\n    \"id\" : \"America/Indiana/Tell_City\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Vevay )\",\n    \"id\" : \"America/Indiana/Vevay\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Vincennes )\",\n    \"id\" : \"America/Indiana/Vincennes\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Winamac )\",\n    \"id\" : \"America/Indiana/Winamac\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indianapolis )\",\n    \"id\" : \"America/Indianapolis\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( America/Inuvik )\",\n    \"id\" : \"America/Inuvik\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Iqaluit )\",\n    \"id\" : \"America/Iqaluit\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Jamaica )\",\n    \"id\" : \"America/Jamaica\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Jujuy )\",\n    \"id\" : \"America/Jujuy\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Alaska Daylight Time( America/Juneau )\",\n    \"id\" : \"America/Juneau\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Kentucky/Louisville )\",\n    \"id\" : \"America/Kentucky/Louisville\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Daylight Time( America/Kentucky/Monticello )\",\n    \"id\" : \"America/Kentucky/Monticello\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Knox_IN )\",\n    \"id\" : \"America/Knox_IN\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Kralendijk )\",\n    \"id\" : \"America/Kralendijk\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Bolivia Time( America/La_Paz )\",\n    \"id\" : \"America/La_Paz\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Peru Time( America/Lima )\",\n    \"id\" : \"America/Lima\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Los_Angeles )\",\n    \"id\" : \"America/Los_Angeles\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Louisville )\",\n    \"id\" : \"America/Louisville\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Lower_Princes )\",\n    \"id\" : \"America/Lower_Princes\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Maceio )\",\n    \"id\" : \"America/Maceio\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Managua )\",\n    \"id\" : \"America/Managua\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Manaus )\",\n    \"id\" : \"America/Manaus\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Marigot )\",\n    \"id\" : \"America/Marigot\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Martinique )\",\n    \"id\" : \"America/Martinique\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Matamoros )\",\n    \"id\" : \"America/Matamoros\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( America/Mazatlan )\",\n    \"id\" : \"America/Mazatlan\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Mendoza )\",\n    \"id\" : \"America/Mendoza\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Central Daylight Time( America/Menominee )\",\n    \"id\" : \"America/Menominee\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Merida )\",\n    \"id\" : \"America/Merida\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Standard Time( America/Metlakatla )\",\n    \"id\" : \"America/Metlakatla\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Mexico_City )\",\n    \"id\" : \"America/Mexico_City\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Pierre & Miquelon Daylight Time( America/Miquelon )\",\n    \"id\" : \"America/Miquelon\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Moncton )\",\n    \"id\" : \"America/Moncton\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Monterrey )\",\n    \"id\" : \"America/Monterrey\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Uruguay Time( America/Montevideo )\",\n    \"id\" : \"America/Montevideo\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Montreal )\",\n    \"id\" : \"America/Montreal\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Montserrat )\",\n    \"id\" : \"America/Montserrat\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Nassau )\",\n    \"id\" : \"America/Nassau\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/New_York )\",\n    \"id\" : \"America/New_York\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Nipigon )\",\n    \"id\" : \"America/Nipigon\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Alaska Daylight Time( America/Nome )\",\n    \"id\" : \"America/Nome\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Fernando de Noronha Time( America/Noronha )\",\n    \"id\" : \"America/Noronha\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/Beulah )\",\n    \"id\" : \"America/North_Dakota/Beulah\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/Center )\",\n    \"id\" : \"America/North_Dakota/Center\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/New_Salem )\",\n    \"id\" : \"America/North_Dakota/New_Salem\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Mountain Daylight Time( America/Ojinaga )\",\n    \"id\" : \"America/Ojinaga\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Panama )\",\n    \"id\" : \"America/Panama\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Eastern Daylight Time( America/Pangnirtung )\",\n    \"id\" : \"America/Pangnirtung\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Suriname Time( America/Paramaribo )\",\n    \"id\" : \"America/Paramaribo\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Phoenix )\",\n    \"id\" : \"America/Phoenix\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Port-au-Prince )\",\n    \"id\" : \"America/Port-au-Prince\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Port_of_Spain )\",\n    \"id\" : \"America/Port_of_Spain\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Porto_Acre )\",\n    \"id\" : \"America/Porto_Acre\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Porto_Velho )\",\n    \"id\" : \"America/Porto_Velho\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Puerto_Rico )\",\n    \"id\" : \"America/Puerto_Rico\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Rainy_River )\",\n    \"id\" : \"America/Rainy_River\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Rankin_Inlet )\",\n    \"id\" : \"America/Rankin_Inlet\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Recife )\",\n    \"id\" : \"America/Recife\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Regina )\",\n    \"id\" : \"America/Regina\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Resolute )\",\n    \"id\" : \"America/Resolute\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Rio_Branco )\",\n    \"id\" : \"America/Rio_Branco\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Rosario )\",\n    \"id\" : \"America/Rosario\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Santa_Isabel )\",\n    \"id\" : \"America/Santa_Isabel\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Brasilia Time( America/Santarem )\",\n    \"id\" : \"America/Santarem\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( America/Santiago )\",\n    \"id\" : \"America/Santiago\"\n  }, {\n    \"name\" : \"( GMT -4:30 ) Atlantic Standard Time( America/Santo_Domingo )\",\n    \"id\" : \"America/Santo_Domingo\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( America/Sao_Paulo )\",\n    \"id\" : \"America/Sao_Paulo\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Eastern Greenland Summer Time( America/Scoresbysund )\",\n    \"id\" : \"America/Scoresbysund\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Shiprock )\",\n    \"id\" : \"America/Shiprock\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Alaska Daylight Time( America/Sitka )\",\n    \"id\" : \"America/Sitka\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Barthelemy )\",\n    \"id\" : \"America/St_Barthelemy\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( America/St_Johns )\",\n    \"id\" : \"America/St_Johns\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Kitts )\",\n    \"id\" : \"America/St_Kitts\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Lucia )\",\n    \"id\" : \"America/St_Lucia\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Thomas )\",\n    \"id\" : \"America/St_Thomas\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Vincent )\",\n    \"id\" : \"America/St_Vincent\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Standard Time( America/Swift_Current )\",\n    \"id\" : \"America/Swift_Current\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Tegucigalpa )\",\n    \"id\" : \"America/Tegucigalpa\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Thule )\",\n    \"id\" : \"America/Thule\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Thunder_Bay )\",\n    \"id\" : \"America/Thunder_Bay\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Tijuana )\",\n    \"id\" : \"America/Tijuana\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Toronto )\",\n    \"id\" : \"America/Toronto\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Tortola )\",\n    \"id\" : \"America/Tortola\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Vancouver )\",\n    \"id\" : \"America/Vancouver\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Virgin )\",\n    \"id\" : \"America/Virgin\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Whitehorse )\",\n    \"id\" : \"America/Whitehorse\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Winnipeg )\",\n    \"id\" : \"America/Winnipeg\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( America/Yakutat )\",\n    \"id\" : \"America/Yakutat\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Yellowknife )\",\n    \"id\" : \"America/Yellowknife\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Antarctica/Casey )\",\n    \"id\" : \"Antarctica/Casey\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Davis Time( Antarctica/Davis )\",\n    \"id\" : \"Antarctica/Davis\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Dumont-d'Urville Time( Antarctica/DumontDUrville )\",\n    \"id\" : \"Antarctica/DumontDUrville\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Macquarie Island Standard Time( Antarctica/Macquarie )\",\n    \"id\" : \"Antarctica/Macquarie\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Mawson Time( Antarctica/Mawson )\",\n    \"id\" : \"Antarctica/Mawson\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Antarctica/McMurdo )\",\n    \"id\" : \"Antarctica/McMurdo\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( Antarctica/Palmer )\",\n    \"id\" : \"Antarctica/Palmer\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Rothera Time( Antarctica/Rothera )\",\n    \"id\" : \"Antarctica/Rothera\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Antarctica/South_Pole )\",\n    \"id\" : \"Antarctica/South_Pole\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Syowa Time( Antarctica/Syowa )\",\n    \"id\" : \"Antarctica/Syowa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Summer Time( Antarctica/Troll )\",\n    \"id\" : \"Antarctica/Troll\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Vostok Time( Antarctica/Vostok )\",\n    \"id\" : \"Antarctica/Vostok\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Arctic/Longyearbyen )\",\n    \"id\" : \"Arctic/Longyearbyen\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Aden )\",\n    \"id\" : \"Asia/Aden\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Alma-Ata Time( Asia/Almaty )\",\n    \"id\" : \"Asia/Almaty\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Amman )\",\n    \"id\" : \"Asia/Amman\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) Anadyr Time( Asia/Anadyr )\",\n    \"id\" : \"Asia/Anadyr\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Aqtau Time( Asia/Aqtau )\",\n    \"id\" : \"Asia/Aqtau\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Aqtobe Time( Asia/Aqtobe )\",\n    \"id\" : \"Asia/Aqtobe\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Turkmenistan Time( Asia/Ashgabat )\",\n    \"id\" : \"Asia/Ashgabat\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Turkmenistan Time( Asia/Ashkhabad )\",\n    \"id\" : \"Asia/Ashkhabad\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Baghdad )\",\n    \"id\" : \"Asia/Baghdad\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Arabia Standard Time( Asia/Bahrain )\",\n    \"id\" : \"Asia/Bahrain\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Azerbaijan Summer Time( Asia/Baku )\",\n    \"id\" : \"Asia/Baku\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Bangkok )\",\n    \"id\" : \"Asia/Bangkok\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Beirut )\",\n    \"id\" : \"Asia/Beirut\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Kirgizstan Time( Asia/Bishkek )\",\n    \"id\" : \"Asia/Bishkek\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Brunei Time( Asia/Brunei )\",\n    \"id\" : \"Asia/Brunei\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Calcutta )\",\n    \"id\" : \"Asia/Calcutta\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Irkutsk Time( Asia/Chita )\",\n    \"id\" : \"Asia/Chita\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Choibalsan Summer Time( Asia/Choibalsan )\",\n    \"id\" : \"Asia/Choibalsan\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) China Standard Time( Asia/Chongqing )\",\n    \"id\" : \"Asia/Chongqing\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) China Standard Time( Asia/Chungking )\",\n    \"id\" : \"Asia/Chungking\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Colombo )\",\n    \"id\" : \"Asia/Colombo\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( Asia/Dacca )\",\n    \"id\" : \"Asia/Dacca\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Damascus )\",\n    \"id\" : \"Asia/Damascus\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( Asia/Dhaka )\",\n    \"id\" : \"Asia/Dhaka\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Timor-Leste Time( Asia/Dili )\",\n    \"id\" : \"Asia/Dili\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Gulf Standard Time( Asia/Dubai )\",\n    \"id\" : \"Asia/Dubai\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Tajikistan Time( Asia/Dushanbe )\",\n    \"id\" : \"Asia/Dushanbe\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Gaza )\",\n    \"id\" : \"Asia/Gaza\"\n  }, {\n    \"name\" : \"( GMT 8:30 ) China Standard Time( Asia/Harbin )\",\n    \"id\" : \"Asia/Harbin\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Hebron )\",\n    \"id\" : \"Asia/Hebron\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Ho_Chi_Minh )\",\n    \"id\" : \"Asia/Ho_Chi_Minh\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Hong Kong Time( Asia/Hong_Kong )\",\n    \"id\" : \"Asia/Hong_Kong\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Hovd Summer Time( Asia/Hovd )\",\n    \"id\" : \"Asia/Hovd\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Irkutsk Time( Asia/Irkutsk )\",\n    \"id\" : \"Asia/Irkutsk\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Istanbul )\",\n    \"id\" : \"Asia/Istanbul\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) West Indonesia Time( Asia/Jakarta )\",\n    \"id\" : \"Asia/Jakarta\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) East Indonesia Time( Asia/Jayapura )\",\n    \"id\" : \"Asia/Jayapura\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Asia/Jerusalem )\",\n    \"id\" : \"Asia/Jerusalem\"\n  }, {\n    \"name\" : \"( GMT 4:30 ) Afghanistan Time( Asia/Kabul )\",\n    \"id\" : \"Asia/Kabul\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Petropavlovsk-Kamchatski Time( Asia/Kamchatka )\",\n    \"id\" : \"Asia/Kamchatka\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( Asia/Karachi )\",\n    \"id\" : \"Asia/Karachi\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Xinjiang Standard Time( Asia/Kashgar )\",\n    \"id\" : \"Asia/Kashgar\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Nepal Time( Asia/Kathmandu )\",\n    \"id\" : \"Asia/Kathmandu\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Nepal Time( Asia/Katmandu )\",\n    \"id\" : \"Asia/Katmandu\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Khandyga Time( Asia/Khandyga )\",\n    \"id\" : \"Asia/Khandyga\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Kolkata )\",\n    \"id\" : \"Asia/Kolkata\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Krasnoyarsk Time( Asia/Krasnoyarsk )\",\n    \"id\" : \"Asia/Krasnoyarsk\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Malaysia Time( Asia/Kuala_Lumpur )\",\n    \"id\" : \"Asia/Kuala_Lumpur\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Malaysia Time( Asia/Kuching )\",\n    \"id\" : \"Asia/Kuching\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Kuwait )\",\n    \"id\" : \"Asia/Kuwait\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Macao )\",\n    \"id\" : \"Asia/Macao\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Macau )\",\n    \"id\" : \"Asia/Macau\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Magadan Time( Asia/Magadan )\",\n    \"id\" : \"Asia/Magadan\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Central Indonesia Time( Asia/Makassar )\",\n    \"id\" : \"Asia/Makassar\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Philippines Time( Asia/Manila )\",\n    \"id\" : \"Asia/Manila\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Gulf Standard Time( Asia/Muscat )\",\n    \"id\" : \"Asia/Muscat\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Nicosia )\",\n    \"id\" : \"Asia/Nicosia\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Krasnoyarsk Time( Asia/Novokuznetsk )\",\n    \"id\" : \"Asia/Novokuznetsk\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Novosibirsk Time( Asia/Novosibirsk )\",\n    \"id\" : \"Asia/Novosibirsk\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Omsk Time( Asia/Omsk )\",\n    \"id\" : \"Asia/Omsk\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Oral Time( Asia/Oral )\",\n    \"id\" : \"Asia/Oral\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Phnom_Penh )\",\n    \"id\" : \"Asia/Phnom_Penh\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) West Indonesia Time( Asia/Pontianak )\",\n    \"id\" : \"Asia/Pontianak\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( Asia/Pyongyang )\",\n    \"id\" : \"Asia/Pyongyang\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Arabia Standard Time( Asia/Qatar )\",\n    \"id\" : \"Asia/Qatar\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Qyzylorda Time( Asia/Qyzylorda )\",\n    \"id\" : \"Asia/Qyzylorda\"\n  }, {\n    \"name\" : \"( GMT 6:30 ) Myanmar Time( Asia/Rangoon )\",\n    \"id\" : \"Asia/Rangoon\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Riyadh )\",\n    \"id\" : \"Asia/Riyadh\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Saigon )\",\n    \"id\" : \"Asia/Saigon\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Sakhalin Time( Asia/Sakhalin )\",\n    \"id\" : \"Asia/Sakhalin\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Uzbekistan Time( Asia/Samarkand )\",\n    \"id\" : \"Asia/Samarkand\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( Asia/Seoul )\",\n    \"id\" : \"Asia/Seoul\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Shanghai )\",\n    \"id\" : \"Asia/Shanghai\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Singapore Time( Asia/Singapore )\",\n    \"id\" : \"Asia/Singapore\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Srednekolymsk Time( Asia/Srednekolymsk )\",\n    \"id\" : \"Asia/Srednekolymsk\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Taipei )\",\n    \"id\" : \"Asia/Taipei\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Uzbekistan Time( Asia/Tashkent )\",\n    \"id\" : \"Asia/Tashkent\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Georgia Time( Asia/Tbilisi )\",\n    \"id\" : \"Asia/Tbilisi\"\n  }, {\n    \"name\" : \"( GMT 3:30 ) Iran Daylight Time( Asia/Tehran )\",\n    \"id\" : \"Asia/Tehran\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Asia/Tel_Aviv )\",\n    \"id\" : \"Asia/Tel_Aviv\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Bhutan Time( Asia/Thimbu )\",\n    \"id\" : \"Asia/Thimbu\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Bhutan Time( Asia/Thimphu )\",\n    \"id\" : \"Asia/Thimphu\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( Asia/Tokyo )\",\n    \"id\" : \"Asia/Tokyo\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Central Indonesia Time( Asia/Ujung_Pandang )\",\n    \"id\" : \"Asia/Ujung_Pandang\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Ulaanbaatar Summer Time( Asia/Ulaanbaatar )\",\n    \"id\" : \"Asia/Ulaanbaatar\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Ulaanbaatar Summer Time( Asia/Ulan_Bator )\",\n    \"id\" : \"Asia/Ulan_Bator\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Xinjiang Standard Time( Asia/Urumqi )\",\n    \"id\" : \"Asia/Urumqi\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Ust-Nera Time( Asia/Ust-Nera )\",\n    \"id\" : \"Asia/Ust-Nera\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Vientiane )\",\n    \"id\" : \"Asia/Vientiane\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Vladivostok Time( Asia/Vladivostok )\",\n    \"id\" : \"Asia/Vladivostok\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Yakutsk Time( Asia/Yakutsk )\",\n    \"id\" : \"Asia/Yakutsk\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Yekaterinburg Time( Asia/Yekaterinburg )\",\n    \"id\" : \"Asia/Yekaterinburg\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Armenia Time( Asia/Yerevan )\",\n    \"id\" : \"Asia/Yerevan\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Azores Summer Time( Atlantic/Azores )\",\n    \"id\" : \"Atlantic/Azores\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( Atlantic/Bermuda )\",\n    \"id\" : \"Atlantic/Bermuda\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Canary )\",\n    \"id\" : \"Atlantic/Canary\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Cape Verde Time( Atlantic/Cape_Verde )\",\n    \"id\" : \"Atlantic/Cape_Verde\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Faeroe )\",\n    \"id\" : \"Atlantic/Faeroe\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Faroe )\",\n    \"id\" : \"Atlantic/Faroe\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Atlantic/Jan_Mayen )\",\n    \"id\" : \"Atlantic/Jan_Mayen\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Madeira )\",\n    \"id\" : \"Atlantic/Madeira\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Atlantic/Reykjavik )\",\n    \"id\" : \"Atlantic/Reykjavik\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) South Georgia Standard Time( Atlantic/South_Georgia )\",\n    \"id\" : \"Atlantic/South_Georgia\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Atlantic/St_Helena )\",\n    \"id\" : \"Atlantic/St_Helena\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Falkland Is. Time( Atlantic/Stanley )\",\n    \"id\" : \"Atlantic/Stanley\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/ACT )\",\n    \"id\" : \"Australia/ACT\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia)( Australia/Adelaide )\",\n    \"id\" : \"Australia/Adelaide\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Brisbane )\",\n    \"id\" : \"Australia/Brisbane\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia/New South Wales)( Australia/Broken_Hill )\",\n    \"id\" : \"Australia/Broken_Hill\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Canberra )\",\n    \"id\" : \"Australia/Canberra\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Currie )\",\n    \"id\" : \"Australia/Currie\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( Australia/Darwin )\",\n    \"id\" : \"Australia/Darwin\"\n  }, {\n    \"name\" : \"( GMT 8:45 ) Australian Central Western Standard Time( Australia/Eucla )\",\n    \"id\" : \"Australia/Eucla\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Australian Eastern Daylight Time (Tasmania)( Australia/Hobart )\",\n    \"id\" : \"Australia/Hobart\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Lord Howe Daylight Time( Australia/LHI )\",\n    \"id\" : \"Australia/LHI\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Lindeman )\",\n    \"id\" : \"Australia/Lindeman\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Lord Howe Daylight Time( Australia/Lord_Howe )\",\n    \"id\" : \"Australia/Lord_Howe\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (Victoria)( Australia/Melbourne )\",\n    \"id\" : \"Australia/Melbourne\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/NSW )\",\n    \"id\" : \"Australia/NSW\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( Australia/North )\",\n    \"id\" : \"Australia/North\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Australia/Perth )\",\n    \"id\" : \"Australia/Perth\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Queensland )\",\n    \"id\" : \"Australia/Queensland\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia)( Australia/South )\",\n    \"id\" : \"Australia/South\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Sydney )\",\n    \"id\" : \"Australia/Sydney\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Australian Eastern Daylight Time (Tasmania)( Australia/Tasmania )\",\n    \"id\" : \"Australia/Tasmania\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (Victoria)( Australia/Victoria )\",\n    \"id\" : \"Australia/Victoria\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Australia/West )\",\n    \"id\" : \"Australia/West\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia/New South Wales)( Australia/Yancowinna )\",\n    \"id\" : \"Australia/Yancowinna\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( Brazil/Acre )\",\n    \"id\" : \"Brazil/Acre\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Fernando de Noronha Time( Brazil/DeNoronha )\",\n    \"id\" : \"Brazil/DeNoronha\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( Brazil/East )\",\n    \"id\" : \"Brazil/East\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( Brazil/West )\",\n    \"id\" : \"Brazil/West\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( CET )\",\n    \"id\" : \"CET\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( CST6CDT )\",\n    \"id\" : \"CST6CDT\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( Canada/Atlantic )\",\n    \"id\" : \"Canada/Atlantic\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( Canada/Central )\",\n    \"id\" : \"Canada/Central\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( Canada/East-Saskatchewan )\",\n    \"id\" : \"Canada/East-Saskatchewan\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( Canada/Eastern )\",\n    \"id\" : \"Canada/Eastern\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( Canada/Mountain )\",\n    \"id\" : \"Canada/Mountain\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( Canada/Newfoundland )\",\n    \"id\" : \"Canada/Newfoundland\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Canada/Pacific )\",\n    \"id\" : \"Canada/Pacific\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( Canada/Saskatchewan )\",\n    \"id\" : \"Canada/Saskatchewan\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Canada/Yukon )\",\n    \"id\" : \"Canada/Yukon\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( Chile/Continental )\",\n    \"id\" : \"Chile/Continental\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Easter Is. Time( Chile/EasterIsland )\",\n    \"id\" : \"Chile/EasterIsland\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Cuba Daylight Time( Cuba )\",\n    \"id\" : \"Cuba\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( EET )\",\n    \"id\" : \"EET\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( EST5EDT )\",\n    \"id\" : \"EST5EDT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Egypt )\",\n    \"id\" : \"Egypt\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Irish Summer Time( Eire )\",\n    \"id\" : \"Eire\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT )\",\n    \"id\" : \"Etc/GMT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT+0 )\",\n    \"id\" : \"Etc/GMT+0\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) GMT-01:00( Etc/GMT+1 )\",\n    \"id\" : \"Etc/GMT+1\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) GMT-10:00( Etc/GMT+10 )\",\n    \"id\" : \"Etc/GMT+10\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) GMT-11:00( Etc/GMT+11 )\",\n    \"id\" : \"Etc/GMT+11\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) GMT-12:00( Etc/GMT+12 )\",\n    \"id\" : \"Etc/GMT+12\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) GMT-02:00( Etc/GMT+2 )\",\n    \"id\" : \"Etc/GMT+2\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) GMT-03:00( Etc/GMT+3 )\",\n    \"id\" : \"Etc/GMT+3\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) GMT-04:00( Etc/GMT+4 )\",\n    \"id\" : \"Etc/GMT+4\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) GMT-05:00( Etc/GMT+5 )\",\n    \"id\" : \"Etc/GMT+5\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) GMT-06:00( Etc/GMT+6 )\",\n    \"id\" : \"Etc/GMT+6\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) GMT-07:00( Etc/GMT+7 )\",\n    \"id\" : \"Etc/GMT+7\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) GMT-08:00( Etc/GMT+8 )\",\n    \"id\" : \"Etc/GMT+8\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) GMT-09:00( Etc/GMT+9 )\",\n    \"id\" : \"Etc/GMT+9\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT-0 )\",\n    \"id\" : \"Etc/GMT-0\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) GMT+01:00( Etc/GMT-1 )\",\n    \"id\" : \"Etc/GMT-1\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) GMT+10:00( Etc/GMT-10 )\",\n    \"id\" : \"Etc/GMT-10\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) GMT+11:00( Etc/GMT-11 )\",\n    \"id\" : \"Etc/GMT-11\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) GMT+12:00( Etc/GMT-12 )\",\n    \"id\" : \"Etc/GMT-12\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) GMT+13:00( Etc/GMT-13 )\",\n    \"id\" : \"Etc/GMT-13\"\n  }, {\n    \"name\" : \"( GMT 14:00 ) GMT+14:00( Etc/GMT-14 )\",\n    \"id\" : \"Etc/GMT-14\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) GMT+02:00( Etc/GMT-2 )\",\n    \"id\" : \"Etc/GMT-2\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) GMT+03:00( Etc/GMT-3 )\",\n    \"id\" : \"Etc/GMT-3\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) GMT+04:00( Etc/GMT-4 )\",\n    \"id\" : \"Etc/GMT-4\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) GMT+05:00( Etc/GMT-5 )\",\n    \"id\" : \"Etc/GMT-5\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) GMT+06:00( Etc/GMT-6 )\",\n    \"id\" : \"Etc/GMT-6\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) GMT+07:00( Etc/GMT-7 )\",\n    \"id\" : \"Etc/GMT-7\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) GMT+08:00( Etc/GMT-8 )\",\n    \"id\" : \"Etc/GMT-8\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) GMT+09:00( Etc/GMT-9 )\",\n    \"id\" : \"Etc/GMT-9\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT0 )\",\n    \"id\" : \"Etc/GMT0\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/Greenwich )\",\n    \"id\" : \"Etc/Greenwich\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/UCT )\",\n    \"id\" : \"Etc/UCT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/UTC )\",\n    \"id\" : \"Etc/UTC\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/Universal )\",\n    \"id\" : \"Etc/Universal\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/Zulu )\",\n    \"id\" : \"Etc/Zulu\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Amsterdam )\",\n    \"id\" : \"Europe/Amsterdam\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Andorra )\",\n    \"id\" : \"Europe/Andorra\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Athens )\",\n    \"id\" : \"Europe/Athens\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Belfast )\",\n    \"id\" : \"Europe/Belfast\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Belgrade )\",\n    \"id\" : \"Europe/Belgrade\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Berlin )\",\n    \"id\" : \"Europe/Berlin\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Bratislava )\",\n    \"id\" : \"Europe/Bratislava\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Brussels )\",\n    \"id\" : \"Europe/Brussels\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Bucharest )\",\n    \"id\" : \"Europe/Bucharest\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Budapest )\",\n    \"id\" : \"Europe/Budapest\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Busingen )\",\n    \"id\" : \"Europe/Busingen\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Chisinau )\",\n    \"id\" : \"Europe/Chisinau\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Copenhagen )\",\n    \"id\" : \"Europe/Copenhagen\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Irish Summer Time( Europe/Dublin )\",\n    \"id\" : \"Europe/Dublin\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Gibraltar )\",\n    \"id\" : \"Europe/Gibraltar\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Guernsey )\",\n    \"id\" : \"Europe/Guernsey\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Helsinki )\",\n    \"id\" : \"Europe/Helsinki\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Isle_of_Man )\",\n    \"id\" : \"Europe/Isle_of_Man\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Istanbul )\",\n    \"id\" : \"Europe/Istanbul\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Jersey )\",\n    \"id\" : \"Europe/Jersey\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Time( Europe/Kaliningrad )\",\n    \"id\" : \"Europe/Kaliningrad\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Kiev )\",\n    \"id\" : \"Europe/Kiev\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western European Summer Time( Europe/Lisbon )\",\n    \"id\" : \"Europe/Lisbon\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Ljubljana )\",\n    \"id\" : \"Europe/Ljubljana\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/London )\",\n    \"id\" : \"Europe/London\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Luxembourg )\",\n    \"id\" : \"Europe/Luxembourg\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Madrid )\",\n    \"id\" : \"Europe/Madrid\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Malta )\",\n    \"id\" : \"Europe/Malta\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Mariehamn )\",\n    \"id\" : \"Europe/Mariehamn\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Minsk )\",\n    \"id\" : \"Europe/Minsk\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Monaco )\",\n    \"id\" : \"Europe/Monaco\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Moscow )\",\n    \"id\" : \"Europe/Moscow\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Nicosia )\",\n    \"id\" : \"Europe/Nicosia\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Oslo )\",\n    \"id\" : \"Europe/Oslo\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Paris )\",\n    \"id\" : \"Europe/Paris\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Podgorica )\",\n    \"id\" : \"Europe/Podgorica\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Prague )\",\n    \"id\" : \"Europe/Prague\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Riga )\",\n    \"id\" : \"Europe/Riga\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Rome )\",\n    \"id\" : \"Europe/Rome\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Samara Time( Europe/Samara )\",\n    \"id\" : \"Europe/Samara\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/San_Marino )\",\n    \"id\" : \"Europe/San_Marino\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Sarajevo )\",\n    \"id\" : \"Europe/Sarajevo\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Simferopol )\",\n    \"id\" : \"Europe/Simferopol\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Skopje )\",\n    \"id\" : \"Europe/Skopje\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Sofia )\",\n    \"id\" : \"Europe/Sofia\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Stockholm )\",\n    \"id\" : \"Europe/Stockholm\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Tallinn )\",\n    \"id\" : \"Europe/Tallinn\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Tirane )\",\n    \"id\" : \"Europe/Tirane\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Tiraspol )\",\n    \"id\" : \"Europe/Tiraspol\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Uzhgorod )\",\n    \"id\" : \"Europe/Uzhgorod\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vaduz )\",\n    \"id\" : \"Europe/Vaduz\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vatican )\",\n    \"id\" : \"Europe/Vatican\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vienna )\",\n    \"id\" : \"Europe/Vienna\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Vilnius )\",\n    \"id\" : \"Europe/Vilnius\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Moscow Standard Time( Europe/Volgograd )\",\n    \"id\" : \"Europe/Volgograd\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Warsaw )\",\n    \"id\" : \"Europe/Warsaw\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Zagreb )\",\n    \"id\" : \"Europe/Zagreb\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Zaporozhye )\",\n    \"id\" : \"Europe/Zaporozhye\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Zurich )\",\n    \"id\" : \"Europe/Zurich\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( GB )\",\n    \"id\" : \"GB\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( GB-Eire )\",\n    \"id\" : \"GB-Eire\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n    \"id\" : \"GMT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT0 )\",\n    \"id\" : \"GMT0\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Greenwich )\",\n    \"id\" : \"Greenwich\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Hong Kong Time( Hongkong )\",\n    \"id\" : \"Hongkong\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Iceland )\",\n    \"id\" : \"Iceland\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Antananarivo )\",\n    \"id\" : \"Indian/Antananarivo\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Indian Ocean Territory Time( Indian/Chagos )\",\n    \"id\" : \"Indian/Chagos\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Christmas Island Time( Indian/Christmas )\",\n    \"id\" : \"Indian/Christmas\"\n  }, {\n    \"name\" : \"( GMT 6:30 ) Cocos Islands Time( Indian/Cocos )\",\n    \"id\" : \"Indian/Cocos\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Comoro )\",\n    \"id\" : \"Indian/Comoro\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) French Southern & Antarctic Lands Time( Indian/Kerguelen )\",\n    \"id\" : \"Indian/Kerguelen\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Seychelles Time( Indian/Mahe )\",\n    \"id\" : \"Indian/Mahe\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Maldives Time( Indian/Maldives )\",\n    \"id\" : \"Indian/Maldives\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Mauritius Time( Indian/Mauritius )\",\n    \"id\" : \"Indian/Mauritius\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Mayotte )\",\n    \"id\" : \"Indian/Mayotte\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Reunion Time( Indian/Reunion )\",\n    \"id\" : \"Indian/Reunion\"\n  }, {\n    \"name\" : \"( GMT 3:30 ) Iran Daylight Time( Iran )\",\n    \"id\" : \"Iran\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Israel )\",\n    \"id\" : \"Israel\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( Jamaica )\",\n    \"id\" : \"Jamaica\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( Japan )\",\n    \"id\" : \"Japan\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Marshall Islands Time( Kwajalein )\",\n    \"id\" : \"Kwajalein\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Libya )\",\n    \"id\" : \"Libya\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Middle Europe Summer Time( MET )\",\n    \"id\" : \"MET\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( MST7MDT )\",\n    \"id\" : \"MST7MDT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Mexico/BajaNorte )\",\n    \"id\" : \"Mexico/BajaNorte\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( Mexico/BajaSur )\",\n    \"id\" : \"Mexico/BajaSur\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( Mexico/General )\",\n    \"id\" : \"Mexico/General\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( NZ )\",\n    \"id\" : \"NZ\"\n  }, {\n    \"name\" : \"( GMT 12:45 ) Chatham Daylight Time( NZ-CHAT )\",\n    \"id\" : \"NZ-CHAT\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( Navajo )\",\n    \"id\" : \"Navajo\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( PRC )\",\n    \"id\" : \"PRC\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( PST8PDT )\",\n    \"id\" : \"PST8PDT\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) West Samoa Daylight Time( Pacific/Apia )\",\n    \"id\" : \"Pacific/Apia\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Pacific/Auckland )\",\n    \"id\" : \"Pacific/Auckland\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Bougainville Standard Time( Pacific/Bougainville )\",\n    \"id\" : \"Pacific/Bougainville\"\n  }, {\n    \"name\" : \"( GMT 12:45 ) Chatham Daylight Time( Pacific/Chatham )\",\n    \"id\" : \"Pacific/Chatham\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Chuuk )\",\n    \"id\" : \"Pacific/Chuuk\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Easter Is. Time( Pacific/Easter )\",\n    \"id\" : \"Pacific/Easter\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Vanuatu Time( Pacific/Efate )\",\n    \"id\" : \"Pacific/Efate\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Phoenix Is. Time( Pacific/Enderbury )\",\n    \"id\" : \"Pacific/Enderbury\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Tokelau Time( Pacific/Fakaofo )\",\n    \"id\" : \"Pacific/Fakaofo\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Fiji Summer Time( Pacific/Fiji )\",\n    \"id\" : \"Pacific/Fiji\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Tuvalu Time( Pacific/Funafuti )\",\n    \"id\" : \"Pacific/Funafuti\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Galapagos Time( Pacific/Galapagos )\",\n    \"id\" : \"Pacific/Galapagos\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Gambier Time( Pacific/Gambier )\",\n    \"id\" : \"Pacific/Gambier\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Solomon Is. Time( Pacific/Guadalcanal )\",\n    \"id\" : \"Pacific/Guadalcanal\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chamorro Standard Time( Pacific/Guam )\",\n    \"id\" : \"Pacific/Guam\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( Pacific/Honolulu )\",\n    \"id\" : \"Pacific/Honolulu\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( Pacific/Johnston )\",\n    \"id\" : \"Pacific/Johnston\"\n  }, {\n    \"name\" : \"( GMT -10:40 ) Line Is. Time( Pacific/Kiritimati )\",\n    \"id\" : \"Pacific/Kiritimati\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Kosrae Time( Pacific/Kosrae )\",\n    \"id\" : \"Pacific/Kosrae\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Marshall Islands Time( Pacific/Kwajalein )\",\n    \"id\" : \"Pacific/Kwajalein\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Marshall Islands Time( Pacific/Majuro )\",\n    \"id\" : \"Pacific/Majuro\"\n  }, {\n    \"name\" : \"( GMT -9:30 ) Marquesas Time( Pacific/Marquesas )\",\n    \"id\" : \"Pacific/Marquesas\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Midway )\",\n    \"id\" : \"Pacific/Midway\"\n  }, {\n    \"name\" : \"( GMT 11:30 ) Nauru Time( Pacific/Nauru )\",\n    \"id\" : \"Pacific/Nauru\"\n  }, {\n    \"name\" : \"( GMT -11:30 ) Niue Time( Pacific/Niue )\",\n    \"id\" : \"Pacific/Niue\"\n  }, {\n    \"name\" : \"( GMT 11:30 ) Norfolk Time( Pacific/Norfolk )\",\n    \"id\" : \"Pacific/Norfolk\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) New Caledonia Time( Pacific/Noumea )\",\n    \"id\" : \"Pacific/Noumea\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Pago_Pago )\",\n    \"id\" : \"Pacific/Pago_Pago\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Palau Time( Pacific/Palau )\",\n    \"id\" : \"Pacific/Palau\"\n  }, {\n    \"name\" : \"( GMT -8:30 ) Pitcairn Standard Time( Pacific/Pitcairn )\",\n    \"id\" : \"Pacific/Pitcairn\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Pohnpei Time( Pacific/Pohnpei )\",\n    \"id\" : \"Pacific/Pohnpei\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Pohnpei Time( Pacific/Ponape )\",\n    \"id\" : \"Pacific/Ponape\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Papua New Guinea Time( Pacific/Port_Moresby )\",\n    \"id\" : \"Pacific/Port_Moresby\"\n  }, {\n    \"name\" : \"( GMT -10:30 ) Cook Is. Time( Pacific/Rarotonga )\",\n    \"id\" : \"Pacific/Rarotonga\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chamorro Standard Time( Pacific/Saipan )\",\n    \"id\" : \"Pacific/Saipan\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Samoa )\",\n    \"id\" : \"Pacific/Samoa\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Tahiti Time( Pacific/Tahiti )\",\n    \"id\" : \"Pacific/Tahiti\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Gilbert Is. Time( Pacific/Tarawa )\",\n    \"id\" : \"Pacific/Tarawa\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) Tonga Time( Pacific/Tongatapu )\",\n    \"id\" : \"Pacific/Tongatapu\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Truk )\",\n    \"id\" : \"Pacific/Truk\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Wake Time( Pacific/Wake )\",\n    \"id\" : \"Pacific/Wake\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Wallis & Futuna Time( Pacific/Wallis )\",\n    \"id\" : \"Pacific/Wallis\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Yap )\",\n    \"id\" : \"Pacific/Yap\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Poland )\",\n    \"id\" : \"Poland\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western European Summer Time( Portugal )\",\n    \"id\" : \"Portugal\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( ROK )\",\n    \"id\" : \"ROK\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Singapore Time( Singapore )\",\n    \"id\" : \"Singapore\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( SystemV/AST4 )\",\n    \"id\" : \"SystemV/AST4\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( SystemV/AST4ADT )\",\n    \"id\" : \"SystemV/AST4ADT\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( SystemV/CST6 )\",\n    \"id\" : \"SystemV/CST6\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( SystemV/CST6CDT )\",\n    \"id\" : \"SystemV/CST6CDT\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( SystemV/EST5 )\",\n    \"id\" : \"SystemV/EST5\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( SystemV/EST5EDT )\",\n    \"id\" : \"SystemV/EST5EDT\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( SystemV/HST10 )\",\n    \"id\" : \"SystemV/HST10\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( SystemV/MST7 )\",\n    \"id\" : \"SystemV/MST7\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( SystemV/MST7MDT )\",\n    \"id\" : \"SystemV/MST7MDT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Standard Time( SystemV/PST8 )\",\n    \"id\" : \"SystemV/PST8\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( SystemV/PST8PDT )\",\n    \"id\" : \"SystemV/PST8PDT\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Standard Time( SystemV/YST9 )\",\n    \"id\" : \"SystemV/YST9\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( SystemV/YST9YDT )\",\n    \"id\" : \"SystemV/YST9YDT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Turkey )\",\n    \"id\" : \"Turkey\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( UCT )\",\n    \"id\" : \"UCT\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Alaska Daylight Time( US/Alaska )\",\n    \"id\" : \"US/Alaska\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( US/Aleutian )\",\n    \"id\" : \"US/Aleutian\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( US/Arizona )\",\n    \"id\" : \"US/Arizona\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( US/Central )\",\n    \"id\" : \"US/Central\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/East-Indiana )\",\n    \"id\" : \"US/East-Indiana\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/Eastern )\",\n    \"id\" : \"US/Eastern\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( US/Hawaii )\",\n    \"id\" : \"US/Hawaii\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( US/Indiana-Starke )\",\n    \"id\" : \"US/Indiana-Starke\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/Michigan )\",\n    \"id\" : \"US/Michigan\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( US/Mountain )\",\n    \"id\" : \"US/Mountain\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( US/Pacific )\",\n    \"id\" : \"US/Pacific\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( US/Pacific-New )\",\n    \"id\" : \"US/Pacific-New\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( US/Samoa )\",\n    \"id\" : \"US/Samoa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( UTC )\",\n    \"id\" : \"UTC\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Universal )\",\n    \"id\" : \"Universal\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( W-SU )\",\n    \"id\" : \"W-SU\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( WET )\",\n    \"id\" : \"WET\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Zulu )\",\n    \"id\" : \"Zulu\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( EST )\",\n    \"id\" : \"EST\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( HST )\",\n    \"id\" : \"HST\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( MST )\",\n    \"id\" : \"MST\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( ACT )\",\n    \"id\" : \"ACT\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( AET )\",\n    \"id\" : \"AET\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( AGT )\",\n    \"id\" : \"AGT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( ART )\",\n    \"id\" : \"ART\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( AST )\",\n    \"id\" : \"AST\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( BET )\",\n    \"id\" : \"BET\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( BST )\",\n    \"id\" : \"BST\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( CAT )\",\n    \"id\" : \"CAT\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( CNT )\",\n    \"id\" : \"CNT\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( CST )\",\n    \"id\" : \"CST\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( CTT )\",\n    \"id\" : \"CTT\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( EAT )\",\n    \"id\" : \"EAT\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( ECT )\",\n    \"id\" : \"ECT\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( IET )\",\n    \"id\" : \"IET\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( IST )\",\n    \"id\" : \"IST\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( JST )\",\n    \"id\" : \"JST\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) West Samoa Daylight Time( MIT )\",\n    \"id\" : \"MIT\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Armenia Time( NET )\",\n    \"id\" : \"NET\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( NST )\",\n    \"id\" : \"NST\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( PNT )\",\n    \"id\" : \"PNT\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( PRT )\",\n    \"id\" : \"PRT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( PST )\",\n    \"id\" : \"PST\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Solomon Is. Time( SST )\",\n    \"id\" : \"SST\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( VST )\",\n    \"id\" : \"VST\"\n  } ]\n}"
  },
  {
    "Api name": "Agent Signatures",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Signature refers to the self-identifying/self-referencing details that agents include at the end of their responses to customers.Note:Agents do not requireany special permissionsto update their own signatures.Agents require the\"Update Agent\"permission to update the signatures of other agents.ATTRIBUTESAttribute NameData TypeDescriptionisActivebooleanDetermines whether the agent's signature is included in ticket replies.Note:If set to true, the agent's signature will be appended to all ticket replies; if set to false, it will be excluded.agentIddeprecatedlongID of the agent. This key isdeprecated, Please useidkey instead of thisidlongID of the agentdefaultSignaturestringDefault signature of the agentcustomizedSignaturesshow AttributeslistDepartment-specific, customized signatures of the agentdepartmentIdlongID of the department in which the signature existssignaturestringSignature of the agent in that department",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isActive",
        "data_type": "boolean",
        "description": "Determines whether the agent's signature is included in ticket replies. Note: If set to true, the agent's signature will be appended to all ticket replies; if set to false, it will be excluded."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get signatures of agent",
    "Api URL": "/api/v1/agents/{agent_id}/signatures",
    "Api Method": "GET",
    "Desc": "This API fetches the different signatures configured by an agent.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/4000000012902/signatures\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  }, {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>User Onboarding</b><br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000027042\n  } ],\n  \"agentId\" : 4000000012902,\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div></div><div><br /></div></div>\",\n  \"id\" : \"4000000012902\",\n  \"isActive\" : true\n}"
  },
  {
    "Api name": "Update signatures of agent",
    "Api URL": "/api/v1/agents/{agent_id}/signatures",
    "Api Method": "PATCH",
    "Desc": "This API updates the existing signatures of an agent.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/agents/4000000012902/signatures\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  } ],\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div></div><div><br /></div></div>\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isActive",
        "data_type": "boolean optional",
        "description": "Determines whether the agent's signature is included in ticket replies. Note: If set to true, the agent's signature will be appended to all ticket replies; if set to false, it will be excluded."
      },
      {
        "name": "defaultSignature",
        "data_type": "string optional, max chars : 65000",
        "description": "Default signature of the agent"
      },
      {
        "name": "customizedSignatures",
        "data_type": "list optional",
        "description": "Department-specific, customized signatures of the agent"
      }
    ],
    "Response Example": "-d'{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  } ],\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div></div><div><br /></div></div>\"\n}'"
  },
  {
    "Api name": "Update customized signatures of agent",
    "Api URL": "/api/v1/agents/{agent_id}/updateCustomizedSignature",
    "Api Method": "POST",
    "Desc": "This API updates the customized signatures of an agent.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/4000000012902/updateCustomizedSignature\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div>Sales &amp; Marketing<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n  \"departmentId\" : 4000000015063\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department in which the signature exists"
      },
      {
        "name": "signature",
        "data_type": "string required, max chars : 65000",
        "description": "Signature of the agent in that department"
      }
    ],
    "Response Example": "-d'{\n  \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div>Sales &amp; Marketing<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n  \"departmentId\" : 4000000015063\n}'"
  },
  {
    "Api name": "Businesshours",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Business hours are the working hours of your help desk. In Zoho Desk, you can configure multiple business hour sets, based on factors, such as the shift times of your agents, and time zones of the regions you cater to. Defining business hours is important because the due time for responding to and resolving tickets are calculated based on these hours. They play a critical role in time tracking and SLAs",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the business hours set"
      },
      {
        "name": "status",
        "data_type": "String",
        "description": "Activation status of the business hours set. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of the business hours set. Values allowed are 24X7 (available anytime throughout the week), SPECIFIC (available during specific hours on the days selected),and CUSTOM (available during different hours on different days"
      },
      {
        "name": "holidayListId",
        "data_type": "long",
        "description": "ID of the holiday list to associate with the business hours set"
      },
      {
        "name": "timeZoneId",
        "data_type": "string",
        "description": "ID of the time zone to associate with the business hours set"
      },
      {
        "name": "businessTimes show Attributes",
        "data_type": "list",
        "description": "Business hours for the week"
      },
      {
        "name": "day",
        "data_type": "string",
        "description": "Days of the week. Values allowed are SUNDAY , MONDAY , TUESDAY , WEDNESDAY , THURSDAY , FRIDAY and SATURDAY"
      },
      {
        "name": "startTime",
        "data_type": "String",
        "description": "Starting time of the business hours set, defined in the hh:mm format.Values can range from 00:00 to 23:59."
      },
      {
        "name": "endTime",
        "data_type": "String",
        "description": "Ending time of the business hours set, defined in the hh:mm format.Values can range from 00:00 to 23:59"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create business hours set",
    "Api URL": "/api/v1/businessHours",
    "Api Method": "POST",
    "Desc": "This API creates a business hours set in your help desk portal",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/businessHours\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"timeZoneId\" : \"PLT\",\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  } ],\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the business hours set"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Activation status of the business hours set. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Type of the business hours set. Values allowed are 24X7 (available anytime throughout the week), SPECIFIC (available during specific hours on the days selected),and CUSTOM (available during different hours on different days"
      },
      {
        "name": "holidayListId",
        "data_type": "long optional",
        "description": "ID of the holiday list to associate with the business hours set"
      },
      {
        "name": "timeZoneId",
        "data_type": "string optional, max chars : 100",
        "description": "ID of the time zone to associate with the business hours set"
      },
      {
        "name": "businessTimes",
        "data_type": "list optional",
        "description": "Business hours for the week"
      }
    ],
    "Response Example": "-d'{\n  \"timeZoneId\" : \"PLT\",\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  } ],\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "Get business hours set",
    "Api URL": "/api/v1/businessHours/{businessHourId}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a business hours set configured in your help desk portal",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/businessHours/4000000186010\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"createdBy\" : \"4000000016079\",\n  \"associatedHolidayList\" : null,\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SATURDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SUNDAY\"\n  } ],\n  \"timeZone\" : {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  },\n  \"createdTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000186010\",\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update business hours set",
    "Api URL": "/api/v1/businessHours/{businessHourId}",
    "Api Method": "PATCH",
    "Desc": "TThis API updates the details of a business hours set configured in your help desk portal",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/businessHours/6000000045001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"holidayListId\" : \"4000000105030\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the business hours set"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the business hours set. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of the business hours set. Values allowed are 24X7 (available anytime throughout the week), SPECIFIC (available during specific hours on the days selected),and CUSTOM (available during different hours on different days"
      },
      {
        "name": "holidayListId",
        "data_type": "long optional",
        "description": "ID of the holiday list to associate with the business hours set"
      },
      {
        "name": "timeZoneId",
        "data_type": "string optional, max chars : 100",
        "description": "ID of the time zone to associate with the business hours set"
      },
      {
        "name": "businessTimes",
        "data_type": "list optional",
        "description": "Business hours for the week"
      }
    ],
    "Response Example": "-d'{\n  \"holidayListId\" : \"4000000105030\"\n}'"
  },
  {
    "Api name": "Delete business hours set",
    "Api URL": "/api/v1/businessHours/{businessHourId}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a business hours set from your help desk portal",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/businessHours/6000000033001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "List business hour sets",
    "Api URL": "/api/v1/businessHours",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of business hour sets, based on the limit specified",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/businessHours\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the business hour sets must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of business hour sets to list"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the business hour sets. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "businessHourIds",
        "data_type": "list optional",
        "description": "The IDs of the BusinessHours to list separated by commas. You can pass upto 50 IDs."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-12-10T07:09:51.265Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"BusinssHour Pak Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n      \"id\" : \"PLT\"\n    },\n    \"createdTime\" : \"2018-12-10T07:09:51.265Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000185071\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T10:44:24.258Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"Specific BH\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101003\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T06:48:44.595Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000117001\",\n      \"holidayListName\" : \"Overlapping Holidays\"\n    },\n    \"name\" : \"24X7 BusinessHour\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000103001\",\n    \"type\" : \"24X7\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"Indian Shift 2\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T12:36:11.781Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000104068\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000105030\",\n      \"holidayListName\" : \"General HolidayList\"\n    },\n    \"name\" : \"UK 24X7 Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101005\",\n    \"type\" : \"24X7\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000105030\",\n      \"holidayListName\" : \"General HolidayList\"\n    },\n    \"name\" : \"UK Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101009\",\n    \"type\" : \"CUSTOM\",\n    \"status\" : \"INACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "List associated automation rules",
    "Api URL": "/api/v1/businessHours/{businessHourId}/relatedRules",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of automation rules that include a business hours set,based on the limit specified",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/businessHours/10000000317019/relatedRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the rules must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of rules to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ruleType\" : \"SUPERVISE\",\n    \"ruleName\" : \"TBA1\",\n    \"ruleId\" : \"6000000019012\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Priority-based SLAs\",\n    \"ruleId\" : \"6000000013508\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Bronze SLAs\",\n    \"ruleId\" : \"6000000013514\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Default Blueprint\",\n    \"ruleId\" : \"6000000016083\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"BH BP\",\n    \"ruleId\" : \"6000000018143\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Third Bp\",\n    \"ruleId\" : \"6000000023018\"\n  } ]\n}"
  },
  {
    "Api name": "Blueprints",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Blueprints define the entire business process model that ensures your data is streamlined and adhere to your team's work style",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the blueprint"
      },
      {
        "name": "description",
        "data_type": "String",
        "description": "Description of blueprint"
      },
      {
        "name": "active",
        "data_type": "Boolean",
        "description": "Active Status of blueprint"
      },
      {
        "name": "dynamicTransOwnerType",
        "data_type": "String",
        "description": "Dynamic Trans Owner type"
      },
      {
        "name": "module",
        "data_type": "String",
        "description": "Module of the Blueprint"
      },
      {
        "name": "departmentId",
        "data_type": "Long",
        "description": "Department of the Blueprint"
      },
      {
        "name": "layoutId",
        "data_type": "Long",
        "description": "Layout of Blueprint"
      },
      {
        "name": "type",
        "data_type": "String",
        "description": "Type of blueprint"
      },
      {
        "name": "actions show Attributes",
        "data_type": "list",
        "description": "Actions to exclude from strict mode - Value allowed is empty array as of now"
      },
      {
        "name": "fieldIds show Attributes",
        "data_type": "list",
        "description": "Field Ids to exclude from strict mode - Value allowed is empty array as of now"
      },
      {
        "name": "strictModeType",
        "data_type": "String",
        "description": "Strict Mode Type - The strict mode can be configured in three ways,full restricted,selective restricted and seletive exclusion"
      },
      {
        "name": "fieldId",
        "data_type": "Long",
        "description": "Field mapped for Blueprint"
      },
      {
        "name": "criteria show Attributes",
        "data_type": "list",
        "description": "The criteria details for the blueprint"
      },
      {
        "name": "fieldConditions show Attributes",
        "data_type": "list",
        "description": "The criteria for the Blueprints"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "The field to be added"
      },
      {
        "name": "value show Attributes",
        "data_type": "list",
        "description": "The value of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "The condition involved"
      },
      {
        "name": "fieldModule",
        "data_type": "string",
        "description": "Module of each condition"
      },
      {
        "name": "pattern",
        "data_type": "string",
        "description": "The pattern of criteria"
      },
      {
        "name": "chartData show Attributes",
        "data_type": "object",
        "description": "Blueprint Chart Data"
      },
      {
        "name": "canvasPosition show Attributes",
        "data_type": "JSONObject",
        "description": "Position of the Canvas"
      },
      {
        "name": "top",
        "data_type": "Integer",
        "description": "Top Position"
      },
      {
        "name": "left",
        "data_type": "Integer",
        "description": "Left Position"
      },
      {
        "name": "connectionDetails show Attributes",
        "data_type": "list",
        "description": "ConnectionPositions"
      },
      {
        "name": "fromUuid",
        "data_type": "String",
        "description": "From state Position details"
      },
      {
        "name": "toUuid",
        "data_type": "String",
        "description": "To state Position details"
      },
      {
        "name": "isCommTrans",
        "data_type": "boolean",
        "description": "Is Common Transition"
      },
      {
        "name": "usedStates show Attributes",
        "data_type": "list",
        "description": "common states"
      },
      {
        "name": "isAuto",
        "data_type": "boolean",
        "description": "Is Auto Transition"
      },
      {
        "name": "transName",
        "data_type": "String",
        "description": "Transition Name"
      },
      {
        "name": "stateDetails show Attributes",
        "data_type": "list",
        "description": "State Positions"
      },
      {
        "name": "position show Attributes",
        "data_type": "JSONObject",
        "description": "State position details"
      },
      {
        "name": "top",
        "data_type": "Integer",
        "description": "Top Position"
      },
      {
        "name": "left",
        "data_type": "Integer",
        "description": "Left Position"
      },
      {
        "name": "stateName",
        "data_type": "String",
        "description": "State Name"
      },
      {
        "name": "slaTime",
        "data_type": "String",
        "description": "SLA time for the state"
      },
      {
        "name": "stateId",
        "data_type": "long",
        "description": "State Id"
      },
      {
        "name": "lastModifiedStateName",
        "data_type": "String",
        "description": "Last Modified State Name"
      },
      {
        "name": "displayName",
        "data_type": "String",
        "description": "Display Name"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Blueprint Details",
    "Api URL": "/api/v1/blueprints/{blueprint_id}",
    "Api Method": "GET",
    "Desc": "To get a specific blueprint details",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/blueprints/4000000019017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"isDraft\" : false,\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"id\" : 4000000007723,\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"id\" : 4000000007723,\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"id\" : 4000000007723,\n    \"type\" : \"END\"\n  } ],\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"lastModifiedStateName\" : \"Closed\",\n      \"stateName\" : \"Closed\",\n      \"displayName\" : \"Closed\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Escalated\",\n      \"stateName\" : \"Escalated\",\n      \"displayName\" : \"Escalated\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Open\",\n      \"stateName\" : \"Open\",\n      \"displayName\" : \"Open\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"name\" : \"Private Threading Handling\",\n  \"id\" : \"4000000007723\",\n  \"connections\" : [ {\n    \"fromState\" : {\n      \"name\" : \"Open\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  }, {\n    \"fromState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Closed\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  } ],\n  \"fieldId\" : 4000000000377\n}"
  },
  {
    "Api name": "List all blueprints in a department",
    "Api URL": "/api/v1/blueprints",
    "Api Method": "GET",
    "Desc": "To get all blueprints in a specific department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/blueprints?departmentId=4000000007245\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Department for which the blueprints are listed"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "module of the blueprints to be listed"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "To get blueprints by status, allowed values are ACTIVE , INACTIVE and DRAFT"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-05-04 08:07:57.0\",\n    \"orderNumber\" : \"3\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"Issue fixed\",\n      \"id\" : \"1000000309105\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Open\",\n      \"id\" : 1000000309101\n    }, {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000309119\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Automate QA process\",\n    \"createdTime\" : \"2018-05-02 13:39:30.0\",\n    \"id\" : \"1000000309097\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000309101\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000309119\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"Issue fixed\",\n        \"id\" : \"1000000309105\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-04-24 05:53:28.0\",\n    \"orderNumber\" : \"4\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : true,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"before\",\n      \"id\" : \"1000000232199\"\n    }, {\n      \"name\" : \"after\",\n      \"id\" : \"1000000232197\"\n    }, {\n      \"name\" : \"during\",\n      \"id\" : \"1000000232201\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000232189\n    }, {\n      \"name\" : \"On Hold\",\n      \"id\" : 1000000232191\n    }, {\n      \"name\" : \"Open\",\n      \"id\" : 1000000232193\n    }, {\n      \"name\" : \"Escalated\",\n      \"id\" : 1000000232195\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"AUtomate HR process\",\n    \"createdTime\" : \"2018-04-10 15:43:54.0\",\n    \"id\" : \"1000000232187\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000232191\"\n      },\n      \"toState\" : {\n        \"name\" : \"Escalated\",\n        \"id\" : \"1000000232195\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"before\",\n        \"id\" : \"1000000232199\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000232193\"\n      },\n      \"toState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000232191\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"after\",\n        \"id\" : \"1000000232197\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"Escalated\",\n        \"id\" : \"1000000232195\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000232189\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"during\",\n        \"id\" : \"1000000232201\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-04-03 13:34:08.0\",\n    \"orderNumber\" : \"5\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"to onhold\",\n      \"id\" : \"1000000173011\"\n    }, {\n      \"name\" : \"To close\",\n      \"id\" : \"1000000173009\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000173003\n    }, {\n      \"name\" : \"Open\",\n      \"id\" : 1000000173005\n    }, {\n      \"name\" : \"On Hold\",\n      \"id\" : 1000000173007\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Shipping process\",\n    \"createdTime\" : \"2018-03-28 12:29:11.0\",\n    \"id\" : \"1000000173001\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000173005\"\n      },\n      \"toState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000173007\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"to onhold\",\n        \"id\" : \"1000000173011\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000173007\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000173003\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"To close\",\n        \"id\" : \"1000000173009\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-05-03 13:18:24.0\",\n    \"orderNumber\" : \"5\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"t1\",\n      \"id\" : \"1000000313281\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Approval 2\",\n      \"id\" : 1000000313277\n    }, {\n      \"name\" : \"Approval 2 approved\",\n      \"id\" : 1000000313279\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Ticket Support process\",\n    \"createdTime\" : \"2018-05-03 13:18:24.0\",\n    \"id\" : \"1000000313275\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Approval 2 approved\",\n        \"id\" : \"1000000313279\"\n      },\n      \"toState\" : {\n        \"name\" : \"Approval 2\",\n        \"id\" : \"1000000313277\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"t1\",\n        \"id\" : \"1000000313281\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  } ]\n}"
  },
  {
    "Api name": "Create Blueprint",
    "Api URL": "/api/v1/blueprints",
    "Api Method": "POST",
    "Desc": "To create a blueprint",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/blueprints\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"stateName\" : \"Closed\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Escalated\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Open\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"name\" : \"Private Threading Handling\",\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"connections\" : [ {\n    \"fromState\" : \"Open\",\n    \"toState\" : \"Escalated\",\n    \"transition\" : [ \"Common Handling\" ]\n  }, {\n    \"fromState\" : \"Escalated\",\n    \"toState\" : \"Closed\",\n    \"transition\" : [ \"Common Handling\" ]\n  } ],\n  \"fieldId\" : 4000000000377,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"type\" : \"END\"\n  } ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the blueprint"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of blueprint"
      },
      {
        "name": "active",
        "data_type": "Boolean optional",
        "description": "Active Status of blueprint"
      },
      {
        "name": "dynamicTransOwnerType",
        "data_type": "String optional",
        "description": "Dynamic Trans Owner type"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Module of the Blueprint"
      },
      {
        "name": "departmentId",
        "data_type": "Long required",
        "description": "Department of the Blueprint"
      },
      {
        "name": "layoutId",
        "data_type": "Long required",
        "description": "Layout of Blueprint"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Type of blueprint"
      },
      {
        "name": "fieldId",
        "data_type": "Long required",
        "description": "Field mapped for Blueprint"
      },
      {
        "name": "criteria",
        "data_type": "list optional",
        "description": "The criteria details for the blueprint"
      },
      {
        "name": "chartData show Attributes",
        "data_type": "object required",
        "description": "Blueprint Chart Data"
      },
      {
        "name": "states",
        "data_type": "list required",
        "description": "State Details"
      },
      {
        "name": "transitions",
        "data_type": "list required",
        "description": "Transition Details"
      },
      {
        "name": "connections",
        "data_type": "list required",
        "description": "Transition Connections"
      }
    ],
    "Response Example": "-d'{\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"stateName\" : \"Closed\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Escalated\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Open\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"name\" : \"Private Threading Handling\",\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"connections\" : [ {\n    \"fromState\" : \"Open\",\n    \"toState\" : \"Escalated\",\n    \"transition\" : [ \"Common Handling\" ]\n  }, {\n    \"fromState\" : \"Escalated\",\n    \"toState\" : \"Closed\",\n    \"transition\" : [ \"Common Handling\" ]\n  } ],\n  \"fieldId\" : 4000000000377,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"type\" : \"END\"\n  } ]\n}'"
  },
  {
    "Api name": "Update a blueprint",
    "Api URL": "/api/v1/blueprints/{blueprint_id}",
    "Api Method": "PATCH",
    "Desc": "To update an existing blueprint",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/blueprints/4000000019017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"type\" : \"NON_CONTINUOUS\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the blueprint"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "Description of blueprint"
      },
      {
        "name": "active",
        "data_type": "Boolean optional",
        "description": "Active Status of blueprint"
      },
      {
        "name": "dynamicTransOwnerType",
        "data_type": "String optional",
        "description": "Dynamic Trans Owner type"
      },
      {
        "name": "module",
        "data_type": "String optional",
        "description": "Module of the Blueprint"
      },
      {
        "name": "departmentId",
        "data_type": "Long optional",
        "description": "Department of the Blueprint"
      },
      {
        "name": "layoutId",
        "data_type": "Long optional",
        "description": "Layout of Blueprint"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of blueprint"
      },
      {
        "name": "fieldId",
        "data_type": "Long optional",
        "description": "Field mapped for Blueprint"
      },
      {
        "name": "criteria",
        "data_type": "list optional",
        "description": "The criteria details for the blueprint"
      },
      {
        "name": "chartData show Attributes",
        "data_type": "object optional",
        "description": "Blueprint Chart Data"
      },
      {
        "name": "states",
        "data_type": "list optional",
        "description": "State Details"
      },
      {
        "name": "transitions",
        "data_type": "list optional",
        "description": "Transition Details"
      },
      {
        "name": "connections",
        "data_type": "list optional",
        "description": "Transition Connections"
      }
    ],
    "Response Example": "-d'{\n  \"type\" : \"NON_CONTINUOUS\"\n}'"
  },
  {
    "Api name": "Delete Blueprint",
    "Api URL": "/api/v1/blueprints/{blueprint_id}",
    "Api Method": "DELETE",
    "Desc": "To delete a specific blueprint",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://support.zoho.com/api/v1/blueprints/4000000019017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Reorder blueprints",
    "Api URL": "/api/v1/blueprints/reorder",
    "Api Method": "POST",
    "Desc": "To reorder blueprints in a specific department",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/blueprints/reorder?departmentId=4000000007245\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'[ \"4000000019017\", \"4000000019019\", \"4000000019023\", \"4000000019021\" ]'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department for which blueprints have to be reordered"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "module for which blueprints have to be reordered"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Blueprint Ids"
      }
    ],
    "Response Example": "-d'[ \"4000000019017\", \"4000000019019\", \"4000000019023\", \"4000000019021\" ]'"
  },
  {
    "Api name": "Get Applied Blueprint details of ticket for an user",
    "Api URL": "/api/v1/tickets/{ticket_id}/blueprint",
    "Api Method": "GET",
    "Desc": "To get the applied blueprint details of a ticket",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/tickets/4000000159817/blueprint\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Meta information related to the transition owners. Values allowed are: transitionOwnerAgents , transitionOwnerTeams , transitionOwnerDept to include agents,teams,department under owners. You can pass multiple values by separating them with commas in the API request."
      }
    ],
    "Response Example": "{\n  \"name\" : \"Automate QA Process\",\n  \"id\" : 1000000087001,\n  \"state\" : {\n    \"dueDate\" : \"2018-02-27T20:49:00.000Z\",\n    \"id\" : \"1000000087003\",\n    \"type\" : \"START\"\n  },\n  \"transitions\" : [ {\n    \"fromState\" : \"Open\",\n    \"toState\" : \"Escalated\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"condition\" : \"is open\",\n        \"fieldName\" : \"Status\",\n        \"value\" : [ \"${OPEN}\" ]\n      } ],\n      \"pattern\" : \"(1)\"\n    },\n    \"name\" : \"Escalate to developers\",\n    \"owners\" : [ {\n      \"agentIds\" : [ \"1000000012635\" ],\n      \"teams\" : [ {\n        \"name\" : \"Sales Representatives\",\n        \"id\" : \"1000000012435\"\n      } ],\n      \"departmentId\" : \"1000000010712\",\n      \"department\" : {\n        \"name\" : \"Zylker\",\n        \"id\" : \"1000000010712\"\n      },\n      \"teamIds\" : [ \"1000000012435\" ],\n      \"agents\" : [ {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1000000012635/photo\",\n        \"firstName\" : \"Lucas\",\n        \"lastName\" : \"Carol\",\n        \"id\" : \"1000000012635\",\n        \"email\" : \"carol@zylker.com\"\n      } ]\n    } ],\n    \"id\" : \"1000000087011\",\n    \"canUserPerformTransition\" : true,\n    \"isCriteriaSatisfied\" : true,\n    \"draftDetails\" : {\n      \"totalNoOfDraftActions\" : \"12\",\n      \"totalNoOfActions\" : \"24\",\n      \"draftBy\" : {\n        \"name\" : \"Sandeep Ghemire\",\n        \"id\" : \"8000000000053\"\n      },\n      \"draftAt\" : \"2020-11-13 16:05:31.0\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Get During transition form",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/form",
    "Api Method": "GET",
    "Desc": "To get During transition form details for the given transition",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/form\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"formActions\" : [ {\n    \"actionType\" : \"FIELD_UPDATE\",\n    \"draftContent\" : {\n      \"FIELD_UPDATE\" : {\n        \"status\" : \"Open_july\"\n      }\n    },\n    \"fieldDetails\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"MESSAGE\",\n    \"content\" : \"Post your reply here\"\n  }, {\n    \"actionType\" : \"REPLY\",\n    \"draftContent\" : {\n      \"REPLY\" : {\n        \"cc\" : \"blueprintbranchdept@zylker.com,BlueprintBranchDept<blueprintbranchdept@zylker.com>\",\n        \"inReplyToThreadId\" : \"38512000003329195\",\n        \"bcc\" : \"\",\n        \"attachments\" : [ {\n          \"size\" : \"1822318\",\n          \"name\" : \"Screenshot 2020-12-09 at 5.44.34 PM.png\",\n          \"fileId\" : \"aaa0b3eec64915077fe3f38a1de2ad14f290eefb25930d93\"\n        } ],\n        \"channel\" : \"EMAIL\",\n        \"to\" : \"carol@zylker.com\",\n        \"isPrivate\" : false,\n        \"fromEmailAddress\" : \"BlueprintBranchDept<blueprintbranchdept@zylker.com>\",\n        \"contentType\" : \"\",\n        \"content\" : \"<div style='font-size:13.0px;font-family: Arial , Helvetica , Verdana , sans-serif;'><div>Hellei</div><div>---- On &nbsp;Tue, 8 Dec 2020 10:49:54 +0530<b>&nbsp;BlueprintBranchDept&lt;blueprintbranchdept@zylker.com&gt;&nbsp;</b> wrote ---- <br></div><div title=\\\"beforequote:::\\\"><br></div><div><blockquote style=\\\"border-left: 1px dotted #e5e5e5;margin-left:5px;padding-left: 5px;\\\"><div style=\\\"padding-top: 10px;\\\"><div><div style=\\\"font-size :  13px; font-family :  Arial,  Helvetica,  Verdana,  sans-serif; \\\"><div>Hello buddy&nbsp;<br></div><div title=\\\"beforequote:::\\\"><br></div><div><br></div></div></div><blockquote style=\\\"border-left :  1px dotted rgb(229, 229, 229); margin-left :  5px; padding-left :  5px; \\\"><div style=\\\"padding-top :  10px; \\\"><br></div></blockquote></div></blockquote></div><div><br></div></div>\"\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"COMMENT\",\n    \"draftContent\" : {\n      \"COMMENT\" : {\n        \"isPublicComment\" : false,\n        \"content\" : \"Comment is to test transition Draft\",\n        \"uploads\" : [ 1000000096035 ]\n      }\n    },\n    \"isMandatory\" : false\n  }, {\n    \"actionType\" : \"RESOLUTION\",\n    \"draftContent\" : {\n      \"RESOLUTION\" : {\n        \"toNotifyContactForResolution\" : true,\n        \"content\" : \"This ticket has to be solved\"\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"APPROVAL\",\n    \"draftContent\" : {\n      \"APPROVAL\" : {\n        \"subject\" : \"Hello Approvers\",\n        \"description\" : \"Hello Approvers  ,do approve it\",\n        \"approvers\" : [ {\n          \"approverId\" : 8000000000053,\n          \"approverName\" : \"Sandeep Ghemire\"\n        }, {\n          \"approverId\" : 8000000057263,\n          \"approverName\" : \"Subodh Ghemire\"\n        } ]\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"BUG\",\n    \"isMandatory\" : false\n  }, {\n    \"actionType\" : \"ATTACHMENTS\",\n    \"draftContent\" : {\n      \"ATTACHMENT\" : {\n        \"uploads\" : [ {\n          \"isPublic\" : false,\n          \"id\" : \"38512000003341108\"\n        } ]\n      }\n    },\n    \"isMandatory\" : true\n  } ],\n  \"transitionId\" : \"4000000152217\",\n  \"continuousTransitions\" : [ {\n    \"transitionId\" : \"4000000152219\",\n    \"transtionName\" : \"Close\"\n  }, {\n    \"transitionId\" : \"4000000152221\",\n    \"transtionName\" : \"Solve\"\n  } ],\n  \"isContinuousTransition\" : true,\n  \"draftDetails\" : {\n    \"draftBy\" : {\n      \"name\" : \"Sandeep Ghemire\",\n      \"id\" : \"8000000000053\"\n    },\n    \"draftAt\" : \"2020-11-13 16:05:31.0\"\n  }\n}"
  },
  {
    "Api name": "Revoke Blueprint at Entity Level",
    "Api URL": "/api/v1/tickets/{ticket_id}/revokeBlueprint",
    "Api Method": "POST",
    "Desc": "To revoke blueprint from an entity",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/tickets/4000000159817/revokeBlueprint\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"message\" : \"Blueprint has been revoked from this ticket\"\n}"
  },
  {
    "Api name": "Revoke Blueprint from Blueprint Level",
    "Api URL": "/api/v1/blueprints/([0-9]+)/revoke",
    "Api Method": "POST",
    "Desc": "To revoke all entities from a particular blueprint",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/blueprints/4000000159817/revoke\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"message\" : \"Blueprint revoke scheduled\"\n}"
  },
  {
    "Api name": "Validate transition field updates",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/validateFieldUpdates",
    "Api Method": "POST",
    "Desc": "To validate field updates for the given transition",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/validateFieldUpdates\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"customFields\" : {\n    \"customEmail\" : \"zdesk@zylker.com\"\n  },\n  \"channel\" : \"Facebook\",\n  \"priority\" : \"Medium\",\n  \"assigneeId\" : 1000000012635\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "customFields",
        "data_type": "object optional",
        "description": "null"
      },
      {
        "name": "cleartextpattern",
        "data_type": "string optional, max chars : 65535",
        "description": "null"
      }
    ],
    "Response Example": "-d'{\n  \"customFields\" : {\n    \"customEmail\" : \"zdesk@zylker.com\"\n  },\n  \"channel\" : \"Facebook\",\n  \"priority\" : \"Medium\",\n  \"assigneeId\" : 1000000012635\n}'"
  },
  {
    "Api name": "Perform transition",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/perform",
    "Api Method": "POST",
    "Desc": "To perform transition for an entity",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/perform\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"channel\" : \"Facebook\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi I m Nancy replying.. \",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test blueprint\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "APPROVAL",
        "data_type": "JSONObject optional",
        "description": "Approval details"
      },
      {
        "name": "RESOLUTION",
        "data_type": "JSONObject optional",
        "description": "Resolution details"
      },
      {
        "name": "ATTACHMENT",
        "data_type": "JSONObject optional",
        "description": "Attachment Details"
      },
      {
        "name": "REPLY",
        "data_type": "JSONObject optional",
        "description": "Reply Content details"
      },
      {
        "name": "COMMENT",
        "data_type": "JSONObject optional",
        "description": "Comment Details"
      },
      {
        "name": "SHARING",
        "data_type": "JSONObject optional",
        "description": "Sharing Details"
      },
      {
        "name": "FIELD_UPDATE",
        "data_type": "JSONObject optional",
        "description": "Fields To Update"
      }
    ],
    "Response Example": "-d'{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"channel\" : \"Facebook\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi I m Nancy replying.. \",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test blueprint\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}'"
  },
  {
    "Api name": "Delete the during actions transition draft",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/discardDraft",
    "Api Method": "POST",
    "Desc": "To delete the during actions transition draft",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/discardDraft\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Save the during actions transition draft",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/saveDraft",
    "Api Method": "POST",
    "Desc": "To save the during actions transition draft",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/saveDraft\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"customFields\" : {\n      \"cf_cffdate_time\" : \"2020-11-23T06:30:00.000Z\",\n      \"cf_cfphone\" : \"9999456789\",\n      \"cf_cfinteger\" : \"19\",\n      \"cf_cfemail\" : \"carol@zylker.com\",\n      \"cf_cfpicklist\" : \"Option 1\",\n      \"cf_cffdate\" : \"2020-11-25\",\n      \"cf_cfpercent\" : \"32\",\n      \"cf_cfmultiselect\" : \";Option 1\",\n      \"cf_cfcheckbox\" : true,\n      \"cf_cfsingle_line\" : \"Hi Sandeep here!\",\n      \"cf_cfcurrency\" : \"134\",\n      \"cf_cfmulti_line\" : \"adad\\nasdd\",\n      \"cf_cfdecimal\" : \"23.0\",\n      \"cf_cfurl\" : \"www.desk.zoho.com\"\n    },\n    \"channel\" : \"Email\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi Sandeep here!\",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test transition Draft\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "APPROVAL",
        "data_type": "JSONObject optional",
        "description": "Drafted Approval details"
      },
      {
        "name": "RESOLUTION",
        "data_type": "JSONObject optional",
        "description": "Drafted Resolution details"
      },
      {
        "name": "ATTACHMENT",
        "data_type": "JSONObject optional",
        "description": "Drafted Attachment Details"
      },
      {
        "name": "REPLY",
        "data_type": "JSONObject optional",
        "description": "Drafted Reply Content details"
      },
      {
        "name": "COMMENT",
        "data_type": "JSONObject optional",
        "description": "Drafted Comment Details"
      },
      {
        "name": "SHARING",
        "data_type": "JSONObject optional",
        "description": "Sharing Details"
      },
      {
        "name": "FIELD_UPDATE",
        "data_type": "JSONObject optional",
        "description": "Drafted Fields To Update"
      }
    ],
    "Response Example": "-d'{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"customFields\" : {\n      \"cf_cffdate_time\" : \"2020-11-23T06:30:00.000Z\",\n      \"cf_cfphone\" : \"9999456789\",\n      \"cf_cfinteger\" : \"19\",\n      \"cf_cfemail\" : \"carol@zylker.com\",\n      \"cf_cfpicklist\" : \"Option 1\",\n      \"cf_cffdate\" : \"2020-11-25\",\n      \"cf_cfpercent\" : \"32\",\n      \"cf_cfmultiselect\" : \";Option 1\",\n      \"cf_cfcheckbox\" : true,\n      \"cf_cfsingle_line\" : \"Hi Sandeep here!\",\n      \"cf_cfcurrency\" : \"134\",\n      \"cf_cfmulti_line\" : \"adad\\nasdd\",\n      \"cf_cfdecimal\" : \"23.0\",\n      \"cf_cfurl\" : \"www.desk.zoho.com\"\n    },\n    \"channel\" : \"Email\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi Sandeep here!\",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test transition Draft\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}'"
  },
  {
    "Api name": "Get attachment of a transition draft",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transitionId}/attachments/{attachmentId}/content",
    "Api Method": "GET",
    "Desc": "View a specific attachment added to a transition draft.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/attachments/4000000152208/content\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "inline",
        "data_type": "boolean optional",
        "description": "Whether the display is to be inline"
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Delete attachment of a transition draft",
    "Api URL": "/api/v1/tickets/{ticket_id}/transitions/{transition_id}/attachments/{attachment_id}",
    "Api Method": "DELETE",
    "Desc": "Delete a specific attachment added to a transition draft.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/attachments/4000000152207\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Dashboards",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Dashboards provide a visual representation of custom reports, allowing you to track key metrics at a glance. There are standard dashboards available by default, and users can also create their own dashboards by adding relevant components as needed.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get created tickets count",
    "Api URL": "/api/v1/dashboards/createdTickets",
    "Api Method": "GET",
    "Desc": "This API fetches the number of tickets created in a particular duration.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/createdTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
  },
  {
    "Api name": "Get on hold tickets count",
    "Api URL": "/api/v1/dashboards/onholdTickets",
    "Api Method": "GET",
    "Desc": "This API fetches the number of tickets that are in the on hold status.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/onholdTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
  },
  {
    "Api name": "Get closed tickets count",
    "Api URL": "/api/v1/dashboards/solvedTickets",
    "Api Method": "GET",
    "Desc": "This API fetches the number of tickets that are resolved.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/solvedTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=channel\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalTicketCount\" : \"1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"Feedback Widget\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Email\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Web\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"Phone\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Forums\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Chat\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Twitter\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Facebook\",\n    \"referenceValue\" : null\n  } ],\n  \"avg\" : \"0.12\",\n  \"groupedBy\" : \"channel\"\n}"
  },
  {
    "Api name": "Get unresolved tickets count",
    "Api URL": "/api/v1/dashboards/backlogTickets",
    "Api Method": "GET",
    "Desc": "This API fetches the number of tickets that have remained unresolved over a particular period.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/backlogTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=agent\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalTicketCount\" : \"102\",\n  \"ticketCount\" : [ {\n    \"count\" : \"54\",\n    \"value\" : \"Unassigned\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"48\",\n    \"value\" : \"Priyanka\",\n    \"referenceValue\" : \"4000000012629\"\n  } ],\n  \"avg\" : \"51.0\"\n}"
  },
  {
    "Api name": "List resolution times",
    "Api URL": "/api/v1/dashboards/ticketsResolutionTime",
    "Api Method": "GET",
    "Desc": "This API lists the durations taken to resolve tickets.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/ticketsResolutionTime?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=agent\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups stats according to a specific attribute: date, channel, agent, or hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalAvgAgentTime\" : \"41:50 hrs\",\n  \"timeData\" : [ {\n    \"avgSystemTime\" : \"41:50 hrs\",\n    \"ticketCount\" : \"1\",\n    \"avgAgentTime\" : \"41:50 hrs\",\n    \"value\" : \"Priyanka\",\n    \"referenceValue\" : \"4000000012629\"\n  } ],\n  \"totalTicketCount\" : \"1\",\n  \"totalAvgSystemTime\" : \"41:50 hrs\",\n  \"groupedBy\" : \"agent\"\n}"
  },
  {
    "Api name": "List response times",
    "Api URL": "/api/v1/dashboards/responseTime",
    "Api Method": "GET",
    "Desc": "This API lists the durations taken to respond to tickets.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/responseTime?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=CUSTOM_IN_DATE&startDate=01-04-2018&endDate=10-04-2018&groupBy=channel\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups stats according to a specific attribute: date, channel, agent, or hour"
      },
      {
        "name": "isFirstResponse",
        "data_type": "boolean required",
        "description": "Key that specifies if the response is the first response to the customer question"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalAvgAgentTime\" : \"41:50 hrs\",\n  \"timeData\" : [ {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Feedback Widget\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Email\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Web\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"41:50 hrs\",\n    \"avgAgentTime\" : \"41:50 hrs\",\n    \"responseCount\" : \"1\",\n    \"value\" : \"Phone\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Forums\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Chat\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Twitter\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Facebook\",\n    \"referenceValue\" : null\n  } ],\n  \"totalAvgSystemTime\" : \"41:50 hrs\",\n  \"groupedBy\" : \"channel\",\n  \"totalResponseCount\" : \"1\"\n}"
  },
  {
    "Api name": "Get total response count",
    "Api URL": "/api/v1/dashboards/responseCount",
    "Api Method": "GET",
    "Desc": "This API fetches the total number of responses sent/made by your agents.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/responseCount?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the thread count according to a particular attribute.This value can be date channel agent | hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"avg\" : \"0.0\",\n  \"groupedBy\" : \"date\",\n  \"totalResponseCount\" : \"0\",\n  \"responseCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-08\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-09\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-10\",\n    \"referenceValue\" : null\n  } ]\n}"
  },
  {
    "Api name": "Get reopened tickets count",
    "Api URL": "/api/v1/dashboards/reopenedTickets",
    "Api Method": "GET",
    "Desc": "This API fetches the number of tickets that were reopened in your help desk portal.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttp://support.zoho.com/api/v1/dashboards/reopenedTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "groupBy",
        "data_type": "string required, max chars : 100",
        "description": "Key that groups the thread count according to a particular attribute.This value can be date channel agent | hour"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID(s) of the department(s) from which the stats must be fetched"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "ID(s) of the agent(s) whose stats must be fetched"
      },
      {
        "name": "teamId",
        "data_type": "long optional",
        "description": "ID(s) of the team(s) from which the stats must be fetched"
      },
      {
        "name": "duration",
        "data_type": "String required",
        "description": "Predefined time range from which the stats must be fetched"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Starting date for defining custom time range"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "Ending date for defining custom time range"
      },
      {
        "name": "channel",
        "data_type": "string optional, max chars : 120",
        "description": "Channel through which the tickets were received"
      }
    ],
    "Response Example": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
  },
  {
    "Api name": "Domain Mapping",
    "Api URL": "",
    "Api Method": "",
    "Desc": "By default, the web address of your help center is a Zoho Desk sub-domain in the \"desk.zoho.com/portal/<mycompany>\" format. However, you can personalize this address, so that your customers can submit their tickets from a sub-domain, such as 'support.mycompany.com'. This feature is called domain/host mapping.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "domain",
        "data_type": "string",
        "description": "Address of the domain"
      },
      {
        "name": "isVerified",
        "data_type": "boolean",
        "description": "Key that denotes if the domain is verified"
      },
      {
        "name": "isApplied",
        "data_type": "boolean",
        "description": "Key that denotes if the domain is applied to the portal"
      },
      {
        "name": "zdSecurityCode",
        "data_type": "string",
        "description": "Zoho Desk domain security code to add in the domain service provider's CNAME"
      },
      {
        "name": "verifiedTime",
        "data_type": "timestamp",
        "description": "Time of verifying the domain"
      },
      {
        "name": "appliedTime",
        "data_type": "timestamp",
        "description": "Time of applying the domain to the portal"
      },
      {
        "name": "verifiedBy",
        "data_type": "long",
        "description": "ID of user who verified the domain"
      },
      {
        "name": "appliedBy",
        "data_type": "long",
        "description": "ID of user who applied the domain to the portal"
      },
      {
        "name": "sslStatus",
        "data_type": "string",
        "description": "SSL status of the domain"
      },
      {
        "name": "sslRequestStatus",
        "data_type": "string",
        "description": "SSL request status of the domain if SSL certificate is requested for the domain"
      },
      {
        "name": "sslRequestedBy",
        "data_type": "long",
        "description": "ID of user who requested for the SSL certificate for the domain"
      },
      {
        "name": "sslRequestedTime",
        "data_type": "timestamp",
        "description": "Time of requesting the SSL certificate for the domain"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Add domain",
    "Api URL": "/api/v1/domains",
    "Api Method": "POST",
    "Desc": "This API adds a domain to your help desk.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/domains\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"domain\" : \"support.zylker.com\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "domain",
        "data_type": "string required, max chars : 46",
        "description": "Address of the domain"
      }
    ],
    "Response Example": "-d'{\n  \"domain\" : \"support.zylker.com\"\n}'"
  },
  {
    "Api name": "Verify domain",
    "Api URL": "/api/v1/domains/verify",
    "Api Method": "POST",
    "Desc": "This API verifies a domain in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/domains/verify\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"method\" : \"CNAME\",\n  \"domain\" : \"support.zylker.com\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "domain",
        "data_type": "string required, max chars : 100",
        "description": "Domain to be verified."
      },
      {
        "name": "method",
        "data_type": "string required, max chars : 100",
        "description": "Domain verification method. CNAME or HTML ."
      }
    ],
    "Response Example": "-d'{\n  \"method\" : \"CNAME\",\n  \"domain\" : \"support.zylker.com\"\n}'"
  },
  {
    "Api name": "Apply domain",
    "Api URL": "/api/v1/domains/apply",
    "Api Method": "POST",
    "Desc": "This API maps a domain to the default portal in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/domains/apply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"domain\" : \"support.zylker.com\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "domain",
        "data_type": "string required, max chars : 46",
        "description": "Address of the domain"
      }
    ],
    "Response Example": "-d'{\n  \"domain\" : \"support.zylker.com\"\n}'"
  },
  {
    "Api name": "Reset current domain",
    "Api URL": "/api/v1/domains/reset",
    "Api Method": "POST",
    "Desc": "This API resets the current domain of the default portal in your help desk.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/domains/reset\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "List domains",
    "Api URL": "/api/v1/domains",
    "Api Method": "GET",
    "Desc": "This API lists the domains configured in your help desk.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/domains?isVerified=true&isApplied=false\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isVerified",
        "data_type": "boolean optional",
        "description": "Key that filters domains based on their verification status"
      },
      {
        "name": "isApplied",
        "data_type": "boolean optional",
        "description": "Key that filters domains based on their application status in the help desk"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"supportportal.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n  }, {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"customers.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.654Z\"\n  }, {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"partners.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n  } ]\n}"
  },
  {
    "Api name": "Community",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Community is an online forum that provides customers a self-service platform to connect with fellow customers, discuss topics, share ideas, ask questions about products, share suggestions and feedback, receive important notifications, and stay informed about the company's whereabouts.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Like topic",
    "Api URL": "/api/v1/communityTopics/{id}/like",
    "Api Method": "POST",
    "Desc": "This API enables users to like a topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/like?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unlike topic",
    "Api URL": "/api/v1/communityTopics/{id}/unlike",
    "Api Method": "POST",
    "Desc": "This API enables users to unlike a topic.",
    "OAuth Scope": "Desk.forums.UPDATE, Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/unlike?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Follow topic",
    "Api URL": "/api/v1/communityTopics/{id}/follow",
    "Api Method": "POST",
    "Desc": "This API enables users to follow a topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/follow?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unfollow topic",
    "Api URL": "/api/v1/communityTopics/{id}/unfollow",
    "Api Method": "POST",
    "Desc": "This API enables users to unfollow a topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/unfollow?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Lock topic",
    "Api URL": "/api/v1/communityTopics/{id}/lock",
    "Api Method": "POST",
    "Desc": "This API helps lock a forum topic, so that further user actions are restricted.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/lock?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unlock topic",
    "Api URL": "/api/v1/communityTopics/{id}/unlock",
    "Api Method": "POST",
    "Desc": "This API helps unlock a forum topic, so that further user actions can be performed.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/unlock?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Moderate topic",
    "Api URL": "/api/v1/communityTopics/{id}/moderate",
    "Api Method": "POST",
    "Desc": "This API allows to set the forum topics as moderate. The comments that are posted during moderation will not be displayed to users and await for the review.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/moderate?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unmoderate topic",
    "Api URL": "/api/v1/communityTopics/{id}/unmoderate",
    "Api Method": "POST",
    "Desc": "This API helps unmoderate a forum topic, which means user comments are published without reviewing.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/unmoderate?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Trash topic",
    "Api URL": "/api/v1/communityTopics/{id}/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API moves a forum topic to trash of your help desk portal.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/moveToTrash?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Move topic",
    "Api URL": "/api/v1/communityTopics/{id}/move",
    "Api Method": "POST",
    "Desc": "This API moves a forum topic from one community category to another.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/move?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"categoryId\" : \"1000000012755\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long required",
        "description": "ID of the community category"
      }
    ],
    "Response Example": "-d'{\n  \"categoryId\" : \"1000000012755\"\n}'"
  },
  {
    "Api name": "Associate tags to topic",
    "Api URL": "/api/v1/communityTopics/{id}/associateTags",
    "Api Method": "POST",
    "Desc": "This API associates quick access/reference tags to a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/associateTags?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "tags",
        "data_type": "list required",
        "description": "Tag phrases"
      }
    ],
    "Response Example": "-d'{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Dissociate tags from topic",
    "Api URL": "/api/v1/communityTopics/{id}/dissociateTags",
    "Api Method": "POST",
    "Desc": "This API removes quick access/reference tags from a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/dissociateTags?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "tags",
        "data_type": "list required",
        "description": "Tag phrases"
      }
    ],
    "Response Example": "-d'{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "List topic followers",
    "Api URL": "/api/v1/communityTopics/{id}/followers",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users who follow a forum topic, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/followers?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the users must be listed."
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-100",
        "description": "Number of users to list"
      },
      {
        "name": "userType",
        "data_type": "string optional, max chars : 100",
        "description": "Filters based on the type of the user who follows it. The allowed values are AGENT or END_USER ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "List topic participants",
    "Api URL": "/api/v1/communityTopics/{id}/participants",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users who participated in a forum topic, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/participants?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-100",
        "description": "Number of users to list"
      },
      {
        "name": "userType",
        "data_type": "string optional, max chars : 100",
        "description": "Filters based on the type of the user who participated in it. The allowed values are AGENT or END_USER ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "List topic voters",
    "Api URL": "/api/v1/communityTopics/{id}/voters",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users who voted in a forum topic, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/voters?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-100",
        "description": "Number of users to list"
      },
      {
        "name": "userType",
        "data_type": "string optional, max chars : 100",
        "description": "Filters based on the type of the user who voted for it. The allowed values are AGENT or END_USER ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "List forum topics",
    "Api URL": "/api/v1/communityTopics",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of forum topics, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be listed"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the topics must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-50",
        "description": "Number of topics to list"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topics to list must be sticky posts or not"
      },
      {
        "name": "unreplied",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topics to list must contain comments or not"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of topics to list. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "tagName",
        "data_type": "String optional",
        "description": "Tag by which topics must be filtered"
      },
      {
        "name": "label",
        "data_type": "String optional",
        "description": "Status label by which topics must be filtered. The value of this key varies according to the topic type. Values allowed are: NOSTATUS , NEEDMOREINFO , WORKINGONIT , ANSWERED , UNANSWERED , MAYBELATER , UNDERREVIEW , IMPLEMENTED , WILLNOTIMPLEMENT , NOTAPROBLEM , TEMPORARYFIX , ANALYZING , SOLVED , UNSOLVED , and MOSTVOTED ."
      },
      {
        "name": "sortBy",
        "data_type": "String required, default : modifiedTime",
        "description": "sort topics list by createdtime or modified time"
      },
      {
        "name": "isAscending",
        "data_type": "boolean required, default : false",
        "description": "sort topics list in ascending or decending order"
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Starting time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "Ending time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : null,\n      \"type\" : \"AGENT\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"subject\" : \"Topic 2\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"isVoted\" : true,\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : null,\n    \"isSticky\" : false,\n    \"commentCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-2\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:41:46.621Z\",\n    \"subject\" : \"Topic 1\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"isVoted\" : true,\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\"\n    },\n    \"isSticky\" : false,\n    \"commentCount\" : \"2\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
  },
  {
    "Api name": "Get topic",
    "Api URL": "/api/v1/communityTopics/{id}",
    "Api Method": "GET",
    "Desc": "This API fetches a forum topic from the user community.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the topics. Values allowed are: seo , featuredImage and participantsCount ."
      }
    ],
    "Response Example": "{\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"bestCommentId\" : null,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isTicketCreated\" : false,\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"isFollowing\" : false,\n  \"viewsCount\" : \"246\",\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"commentCount\" : \"2\",\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\",\n    \"size\" : \"2048\",\n    \"imageUrl\" : \"https://desk.zoho.com/portal/api/publicImages/42065000003493086?portalId=edbsnfb8166209e6d0025b777b9d90768028d52a6ee08bbb27b1e0f251800c89a48d9\",\n    \"name\" : \"social_image.jpg\"\n  },\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"followersCount\" : \"0\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\"\n}"
  },
  {
    "Api name": "Get topic by permalink",
    "Api URL": "/api/v1/communityTopicByPermalink",
    "Api Method": "GET",
    "Desc": "This API fetches a forum topic, based on the permalink in the API request.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopicByPermalink?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "permalink of the topic"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the topics. Values allowed are: seo , featuredImage and participantsCount ."
      }
    ],
    "Response Example": "{\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"bestCommentId\" : null,\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isTicketCreated\" : false,\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"END_USER\"\n  },\n  \"isFollowing\" : false,\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"commentCount\" : \"2\",\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\",\n    \"size\" : \"2048\",\n    \"imageUrl\" : \"https://desk.zoho.com/portal/api/publicImages/42065000003493086?portalId=edbsnfb8166209e6d0025b777b9d90768028d52a6ee08bbb27b1e0f251800c89a48d9\",\n    \"name\" : \"social_image.jpg\"\n  },\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"followersCount\" : \"0\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\"\n}"
  },
  {
    "Api name": "Add topic",
    "Api URL": "/api/v1/communityTopics",
    "Api Method": "POST",
    "Desc": "This API helps add a forum topic in the user community.",
    "OAuth Scope": "Desk.community.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "String required",
        "description": "Title of the topic"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "permalink of the topic to be created"
      },
      {
        "name": "content",
        "data_type": "String required",
        "description": "Body content of the topic"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Type of topic. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "categoryId",
        "data_type": "long required",
        "description": "ID of the community category in which the topic must be posted"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topic must be pinned to the topics list page or not"
      },
      {
        "name": "notifyMe",
        "data_type": "boolean optional",
        "description": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the topic"
      },
      {
        "name": "tags",
        "data_type": "JSONArray optional",
        "description": "Tag phrases"
      },
      {
        "name": "mailTo",
        "data_type": "JSONArray optional",
        "description": "Email IDs to which the topic must be sent after publishing"
      },
      {
        "name": "seo",
        "data_type": "JSONObject optional",
        "description": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords , useTitleAsPageTitle , description , title"
      },
      {
        "name": "featuredImage",
        "data_type": "JSONObject optional",
        "description": "Specifies the id of the uploaded image to display as a featured image."
      }
    ],
    "Response Example": "-d'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Update topic",
    "Api URL": "/api/v1/communityTopics/{id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update a published forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityTopics/{id}?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "String optional",
        "description": "Title of the topic"
      },
      {
        "name": "content",
        "data_type": "String optional",
        "description": "Body content of the topic"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topic must be pinned to the topics list page or not"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of topic. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the topic"
      },
      {
        "name": "label",
        "data_type": "String optional",
        "description": "Status label of the topic. The value of this key varies according to the topic type. Values allowed are: NOSTATUS , NEEDMOREINFO , WORKINGONIT , ANSWERED , UNANSWERED , MAYBELATER , UNDERREVIEW , IMPLEMENTED , WILLNOTIMPLEMENT , NOTAPROBLEM , TEMPORARYFIX , ANALYZING , SOLVED , UNSOLVED , and MOSTVOTED ."
      },
      {
        "name": "notifyMentions",
        "data_type": "boolean optional, default : false",
        "description": "whether to notify mentioned user while updateing content."
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category in which the topic must be posted"
      },
      {
        "name": "tags",
        "data_type": "JSONArray optional",
        "description": "Tag phrases"
      },
      {
        "name": "notifyMe",
        "data_type": "boolean optional",
        "description": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not"
      },
      {
        "name": "seo",
        "data_type": "JSONObject optional",
        "description": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords , useTitleAsPageTitle , description , title"
      },
      {
        "name": "featuredImage",
        "data_type": "JSONObject optional",
        "description": "Specifies the id of the uploaded image to display as a featured image."
      }
    ],
    "Response Example": "-d'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\"\n}'"
  },
  {
    "Api name": "Add comment",
    "Api URL": "/api/v1/communityTopics/{id}/comments",
    "Api Method": "POST",
    "Desc": "This API helps add a comment to a forum topic.",
    "OAuth Scope": "Desk.community.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment 1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string required, max chars : 50000",
        "description": "Content of the comment"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the comment"
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment 1\"\n}'"
  },
  {
    "Api name": "Add reply",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/replies",
    "Api Method": "POST",
    "Desc": "This API helps add a reply to a comment on a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/replies?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply 1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string required, max chars : 50000",
        "description": "Content of the reply"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the reply"
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply 1\"\n}'"
  },
  {
    "Api name": "Update comment",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update a published comment.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment updated 1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 50000",
        "description": "Content of the comment/reply"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "Ids of the attachments added for this topic"
      },
      {
        "name": "isBestComment",
        "data_type": "boolean optional",
        "description": "Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment."
      },
      {
        "name": "notifyMentions",
        "data_type": "boolean optional, default : false",
        "description": "whether to notify mentioned user while updateing content."
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment updated 1\"\n}'"
  },
  {
    "Api name": "Update reply",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/replies/{id}",
    "Api Method": "PATCH",
    "Desc": "This API helps update a published reply.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/replies?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply updated 1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "content",
        "data_type": "string optional, max chars : 50000",
        "description": "Content of the comment/reply"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "Ids of the attachments added for this topic"
      },
      {
        "name": "isBestComment",
        "data_type": "boolean optional",
        "description": "Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment."
      },
      {
        "name": "notifyMentions",
        "data_type": "boolean optional, default : false",
        "description": "whether to notify mentioned user while updateing content."
      }
    ],
    "Response Example": "-d'{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply updated 1\"\n}'"
  },
  {
    "Api name": "List topic comments",
    "Api URL": "/api/v1/communityTopics/{id}/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments on a topic, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the comments must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-25",
        "description": "The end limit to list the comments"
      },
      {
        "name": "latestCommentsFirst",
        "data_type": "boolean optional, default : false",
        "description": "Key that defines the listing order of the comments. Setting TRUE lists the latest comments first (descending order) and setting FALSE lists the oldest comments first (ascending order)."
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Starting time interval to list the comments that are created within the specified timezone. The value must be provided in GMT format. Example: \" 2018-10-06T09:29:15.219Z \""
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "Ending time interval to list the comments that are created within the specified timezone. The value must be provided in GMT format. Example: \" 2018-10-16T10:29:15.219Z \""
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-10-16T10:29:15.219Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ {\n      \"size\" : \"1166\",\n      \"name\" : \"download (1).png\",\n      \"id\" : \"4000000019033\",\n      \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019013/attachments/4000000019033/content?orgId=123456\"\n    } ],\n    \"replies\" : [ ],\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"id\" : \"4000000019013\",\n    \"content\" : \"<div>comment 1<br /></div>\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"modifiedTime\" : \"2018-10-16T10:28:59.495Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ ],\n    \"replies\" : [ {\n      \"modifiedTime\" : \"2018-10-16T10:22:46.893Z\",\n      \"creator\" : {\n        \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n        \"name\" : \"user 1\",\n        \"id\" : \"7000000015971\",\n        \"label\" : {\n          \"preferences\" : {\n            \"shape\" : \"RECTANGLE\",\n            \"bgColor\" : \"#23F123\",\n            \"textColor\" : \"#2CA123\"\n          },\n          \"name\" : \"Admin\",\n          \"id\" : \"6000000158001\",\n          \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n        }\n      },\n      \"attachments\" : [ ],\n      \"createdTime\" : \"2018-10-16T10:22:46.893Z\",\n      \"parentCommentId\" : \"4000000019029\",\n      \"id\" : \"4000000019031\",\n      \"content\" : \"test 3\",\n      \"status\" : \"PUBLISHED\"\n    } ],\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"id\" : \"4000000019029\",\n    \"content\" : \"<div>comment 3</div>\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
  },
  {
    "Api name": "Get topic comment",
    "Api URL": "/api/v1/communityTopics/{id}/comments/([0-9]+)",
    "Api Method": "GET",
    "Desc": "This API fetches a comment received on a topic.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2018-10-16T10:29:15.219Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    }\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download (1).png\",\n    \"id\" : \"4000000019033\",\n    \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019013/attachments/4000000019033/content?orgId=123456\"\n  } ],\n  \"replies\" : [ {\n    \"modifiedTime\" : \"2018-10-16T10:34:34.114Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ {\n      \"size\" : \"1166\",\n      \"name\" : \"download (1).png\",\n      \"id\" : \"4000000019037\",\n      \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019035/attachments/4000000019037/content?orgId=123456\"\n    } ],\n    \"createdTime\" : \"2018-10-16T10:34:20.858Z\",\n    \"parentCommentId\" : \"4000000019013\",\n    \"id\" : \"4000000019035\",\n    \"content\" : \"<div>test 3<br /></div>\",\n    \"status\" : \"PUBLISHED\"\n  } ],\n  \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n  \"id\" : \"4000000019013\",\n  \"content\" : \"<div>comment 1<br /></div>\",\n  \"status\" : \"PUBLISHED\"\n}"
  },
  {
    "Api name": "Trash comment",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API deletes a comment from a topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/moveToTrash?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Trash reply",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/replies/{id}/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API deletes a reply to a topic comment.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/replies/{id}/moveToTrash?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Add attachment",
    "Api URL": "/api/v1/communityAttachments",
    "Api Method": "POST",
    "Desc": "This API uploads files to the storage space allocated for the community module.",
    "OAuth Scope": "Desk.community.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityAttachments?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File to upload"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "source",
        "data_type": "string required, max chars : 100",
        "description": "Source of attaching Doc zohodocs gdrive dropbox box skydrive evernote office365 workdrive"
      },
      {
        "name": "id",
        "data_type": "string required, max chars : 300",
        "description": "Id of the attaching Doc"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 300",
        "description": "Name of the attaching Doc"
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "Public/Private of the attaching Doc"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 300",
        "description": "DocType of the attaching Doc file presentation pdf document spreadsheet"
      },
      {
        "name": "filePath",
        "data_type": "string optional, max chars : 300",
        "description": "File path of the attaching Doc (For Dropbox)"
      },
      {
        "name": "accountId",
        "data_type": "string optional, max chars : 300",
        "description": "Account Id of the Dropbox"
      }
    ],
    "Response Example": "{\n  \"size\" : \"1024\",\n  \"name\" : \"attachment.jpeg\",\n  \"id\" : \"1004\"\n}"
  },
  {
    "Api name": "Get unassociated attachment",
    "Api URL": "/api/v1/communityAttachments/{id}/content",
    "Api Method": "GET",
    "Desc": "Unassociated attachments are those attachments uploaded to a community topic or comment that is not yet published or saved as a draft. This API fetches an unassociated attachment from the user community.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityAttachments/{id}/content?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get topic attachment",
    "Api URL": "/api/v1/communityTopics/{id}/attachments/{id}/content",
    "Api Method": "GET",
    "Desc": "This API fetches a file attachment from a topic.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/attachments/{id}/content?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get comment attachment",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/attachments/{id}/content",
    "Api Method": "GET",
    "Desc": "This API fetches a file attachment from a topic comment.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/attachments/{id}/content?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Get reply attachment",
    "Api URL": "/api/v1/communityTopics/{id}/replies/{id}/attachments/{id}/content",
    "Api Method": "GET",
    "Desc": "This API fetches a file attachment from a reply to a topic comment.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/replies/{id}/attachments/{id}/content?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Report topic as spam",
    "Api URL": "/api/v1/communityTopics/{id}/markSpam",
    "Api Method": "POST",
    "Desc": "This API marks a forum topic as spam.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/markSpam?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "reason",
        "data_type": "String required",
        "description": "Reason for marking the topic as spam"
      }
    ],
    "Response Example": "-d'{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}'"
  },
  {
    "Api name": "Report multiple topics as spam",
    "Api URL": "/api/v1/community/markAllTopicsAsSpam",
    "Api Method": "POST",
    "Desc": "This API marks multiple forum topics as spam.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/community/markAllTopicsAsSpam?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reason\" : \"Reason for marking a topic as spam\",\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "IDs of the topics that must be marked as spam"
      },
      {
        "name": "reason",
        "data_type": "String required",
        "description": "Reason for marking the topic as spam"
      }
    ],
    "Response Example": "-d'{\n  \"reason\" : \"Reason for marking a topic as spam\",\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Report topic comment as spam",
    "Api URL": "/api/v1/communityTopics/{id}/comments/{id}/markSpam",
    "Api Method": "POST",
    "Desc": "This API marks a comment on a forum topic as spam.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments/{id}/markSpam?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "reason",
        "data_type": "String required",
        "description": "Reason for marking the topic as spam"
      }
    ],
    "Response Example": "-d'{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}'"
  },
  {
    "Api name": "Report multiple comments as spam",
    "Api URL": "/api/v1/community/markAllCommentsAsSpam",
    "Api Method": "POST",
    "Desc": "This API marks multiple comments on a forum topic as spam.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/community/markAllCommentsAsSpam?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"reason\" : \"Reason for marking a topic's comment as spam\",\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "commentIds",
        "data_type": "JSONArray required",
        "description": "IDs of the comments that must be marked as spam"
      },
      {
        "name": "reason",
        "data_type": "String required",
        "description": "Reason for marking the comment as spam"
      }
    ],
    "Response Example": "-d'{\n  \"reason\" : \"Reason for marking a topic's comment as spam\",\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Lock category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/lock",
    "Api Method": "POST",
    "Desc": "This API locks a community category or forum and restricts posting access to users.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/lock?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Enable category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/enable",
    "Api Method": "POST",
    "Desc": "This API enables a community category or forum and provides posting access to users.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/enable?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Disable category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/disable",
    "Api Method": "POST",
    "Desc": "This API disables a community category or forum and restricts posting access to users.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/disable?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Follow a category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/follow",
    "Api Method": "POST",
    "Desc": "This API helps users to follow a community category or forum.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/follow?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unfollow a category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/unfollow",
    "Api Method": "POST",
    "Desc": "This API helps end-users unfollow a community category or forum.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/unfollow?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Delete forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)",
    "Api Method": "DELETE",
    "Desc": "This API deletes a forum from a community category. Keep in mind that only empty forums can be deleted.",
    "OAuth Scope": "Desk.community.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Sort categories",
    "Api URL": "/api/v1/communityCategory/sort",
    "Api Method": "POST",
    "Desc": "This API sorts community categories in a particular order.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/sort?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryIds",
        "data_type": "JSONArray required",
        "description": "IDs of the community categories that must be sorted"
      }
    ],
    "Response Example": "-d'{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}'"
  },
  {
    "Api name": "Sort forums",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/sort",
    "Api Method": "POST",
    "Desc": "This API sorts forums in a particular order.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/sort?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryIds",
        "data_type": "JSONArray required",
        "description": "IDs of the forums that must be sorted"
      }
    ],
    "Response Example": "-d'{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}'"
  },
  {
    "Api name": "Get category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a community category or forum.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the category or forum. Values allowed are: postCount , followersCount , and commentCount ."
      }
    ],
    "Response Example": "{\n  \"isFollowing\" : \"true\",\n  \"visibility\" : \"ALL_USERS\",\n  \"departmentId\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : true,\n  \"childs\" : [ {\n    \"isFollowing\" : false,\n    \"visibility\" : \"ALL_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"forum 1\",\n    \"canAutoConvertTicket\" : null,\n    \"commentCount\" : \"491\",\n    \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n    \"photoUrl\" : null,\n    \"view\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"post\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : null,\n    \"name\" : \"forum\",\n    \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n    \"postCount\" : \"246\",\n    \"parentCategoryId\" : \"4000000003037\",\n    \"id\" : \"4000000012009\",\n    \"position\" : \"1\",\n    \"followersCount\" : \"38\",\n    \"permalink\" : \"forum-43\",\n    \"respond\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ],\n  \"commentCount\" : \"491\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : null,\n  \"view\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"post\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"NONE\",\n  \"name\" : \"new dep\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"postCount\" : \"246\",\n  \"parentCategoryId\" : \"null\",\n  \"id\" : \"20628000000020011\",\n  \"position\" : \"1\",\n  \"followersCount\" : \"38\",\n  \"permalink\" : \"new-dep\",\n  \"respond\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"status\" : \"ENABLED\",\n  \"moderators\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "Get category or forum by permalink",
    "Api URL": "/api/v1/communityCategoryByPermalink",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a community category or forum, based on the permalink in the API request.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityCategoryByPermalink?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "Permalink of the category or forum to fetch"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the category or forum. Values allowed are: postCount , followersCount , and commentCount ."
      }
    ],
    "Response Example": "{\n  \"isFollowing\" : \"true\",\n  \"visibility\" : \"ALL_USERS\",\n  \"departmentId\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : true,\n  \"childs\" : [ {\n    \"isFollowing\" : false,\n    \"visibility\" : \"ALL_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"forum 1\",\n    \"canAutoConvertTicket\" : null,\n    \"commentCount\" : \"491\",\n    \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n    \"photoUrl\" : null,\n    \"view\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"post\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : null,\n    \"name\" : \"forum\",\n    \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n    \"postCount\" : \"246\",\n    \"parentCategoryId\" : \"4000000003037\",\n    \"id\" : \"4000000012009\",\n    \"position\" : \"1\",\n    \"followersCount\" : \"38\",\n    \"permalink\" : \"forum-43\",\n    \"respond\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ],\n  \"commentCount\" : \"491\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : null,\n  \"view\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"post\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"NONE\",\n  \"name\" : \"new dep\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"postCount\" : \"246\",\n  \"parentCategoryId\" : \"null\",\n  \"id\" : \"20628000000020011\",\n  \"position\" : \"1\",\n  \"followersCount\" : \"38\",\n  \"permalink\" : \"new-dep\",\n  \"respond\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"status\" : \"ENABLED\",\n  \"moderators\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "Add forum",
    "Api URL": "/api/v1/communityCategory",
    "Api Method": "POST",
    "Desc": "This API adds a forum in a community category.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityCategory?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"visibility\" : \"GROUPS\",\n  \"description\" : \"forum 1\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"forum\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"parentCategoryId\" : \"4000000003037\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the forum"
      },
      {
        "name": "parentCategoryId",
        "data_type": "long optional",
        "description": "ID of the community category under which the forum must be added"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A brief description of the community category or forum"
      },
      {
        "name": "visibility",
        "data_type": "String optional",
        "description": "Visibility setting of the community category or forum. Values allowed are: ALL , LOGGED_IN_USERS , GROUPS and MODERATORS ."
      },
      {
        "name": "post",
        "data_type": "JSONObject optional",
        "description": "Post permission setting of the community category or forum."
      },
      {
        "name": "respond",
        "data_type": "JSONObject optional",
        "description": "Respond permission setting of the community category or forum."
      },
      {
        "name": "moderators",
        "data_type": "JSONArray optional",
        "description": "Agents who moderate the community category or forum"
      },
      {
        "name": "groupIds",
        "data_type": "JSONArray optional",
        "description": "Group Ids to associate"
      },
      {
        "name": "moderation",
        "data_type": "String optional",
        "description": "Moderation setting for the community category or forum. Values allowed are: NONE (no moderation), ALL_POSTS (all posts of category will be moderated) and FIRST_POST (only the first forum post of users will be moderated)."
      },
      {
        "name": "canAutoConvertTicket",
        "data_type": "boolean optional",
        "description": "Key that defines whether topics posted in the forum must be automatically converted into tickets or not"
      },
      {
        "name": "associatedDepartmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of the deparments to be associated with category"
      },
      {
        "name": "deparmentIdForTicketCreation",
        "data_type": "long optional",
        "description": "ID of the deparment in which the ticket must be created"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the uploaded community category logo"
      }
    ],
    "Response Example": "-d'{\n  \"visibility\" : \"GROUPS\",\n  \"description\" : \"forum 1\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"forum\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"parentCategoryId\" : \"4000000003037\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ]\n}'"
  },
  {
    "Api name": "List categories",
    "Api URL": "/api/v1/communityCategory",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of community categories.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityCategory?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the categories. Values allowed are: postCount, followersCount, and commentCount."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department for which the categories to be filtered."
      }
    ],
    "Response Example": "{\n  \"categories\" : [ {\n    \"isFollowing\" : true,\n    \"visibility\" : \"LOGGED_IN_USERS\",\n    \"departmentId\" : \"2000000012968\",\n    \"description\" : \"category\",\n    \"canAutoConvertTicket\" : false,\n    \"photoUrl\" : null,\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : \"NONE\",\n    \"name\" : \"category\",\n    \"parentCategoryId\" : null,\n    \"id\" : \"4000000000017\",\n    \"position\" : \"1\",\n    \"permalink\" : \"category\",\n    \"child\" : [ {\n      \"isFollowing\" : false,\n      \"visibility\" : null,\n      \"departmentId\" : null,\n      \"description\" : \"Forum 1\",\n      \"canAutoConvertTicket\" : null,\n      \"photoUrl\" : null,\n      \"permissions\" : [ \"POST\", \"RESPOND\" ],\n      \"moderation\" : null,\n      \"name\" : \"forum 1\",\n      \"parentCategoryId\" : \"4000000000017\",\n      \"id\" : \"4000000000033\",\n      \"position\" : \"1\",\n      \"permalink\" : \"forum-1\",\n      \"child\" : [ ],\n      \"moderators\" : [ ],\n      \"status\" : \"ENABLED\"\n    } ],\n    \"moderators\" : [ {\n      \"photoUrl\" : null,\n      \"name\" : \"User 1\",\n      \"id\" : \"2000000016079\",\n      \"type\" : \"AGENT\"\n    } ],\n    \"status\" : \"ENABLED\"\n  }, {\n    \"isFollowing\" : false,\n    \"visibility\" : \"LOGGED_IN_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"\",\n    \"canAutoConvertTicket\" : true,\n    \"photoUrl\" : null,\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : \"FIRST_POST\",\n    \"name\" : \"Dep 2\",\n    \"parentCategoryId\" : null,\n    \"id\" : \"4000000002005\",\n    \"position\" : \"2\",\n    \"permalink\" : \"dep-2\",\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ]\n}"
  },
  {
    "Api name": "Update category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of a category or forum.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"visibility\" : \"GROUPS\",\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"new dep updated\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ],\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the community category or forum"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "A brief description of the community category or forum"
      },
      {
        "name": "visibility",
        "data_type": "String optional",
        "description": "Visibility setting of the community category or forum. Values allowed are: ALL , LOGGED_IN_USERS , GROUPS , AGENTS and MODERATORS ."
      },
      {
        "name": "post",
        "data_type": "JSONObject optional",
        "description": "Post permission setting of the community category or forum."
      },
      {
        "name": "respond",
        "data_type": "JSONObject optional",
        "description": "Respond permission setting of the community category or forum."
      },
      {
        "name": "moderators",
        "data_type": "JSONArray optional",
        "description": "Agents who moderate the community category or forum"
      },
      {
        "name": "groupIds",
        "data_type": "JSONArray optional",
        "description": "Group Ids to associate"
      },
      {
        "name": "moderation",
        "data_type": "String optional",
        "description": "Moderation setting for the community category or forum. Values allowed are: NONE (no moderation), ALL_POSTS (all posts of category will be moderated) and FIRST_POST (only the first forum post of users will be moderated)."
      },
      {
        "name": "canAutoConvertTicket",
        "data_type": "boolean optional",
        "description": "Key that defines whether topics posted in the forum must be automatically converted into tickets or not"
      },
      {
        "name": "associatedDepartmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of the deparments to be associated with category"
      },
      {
        "name": "deparmentIdForTicketCreation",
        "data_type": "long optional",
        "description": "ID of the deparment in which the ticket must be created"
      },
      {
        "name": "logoId",
        "data_type": "long optional",
        "description": "ID of the uploaded community category logo"
      }
    ],
    "Response Example": "-d'{\n  \"visibility\" : \"GROUPS\",\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"new dep updated\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ],\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ]\n}'"
  },
  {
    "Api name": "Get category logo",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/logo/([0-9]+)",
    "Api Method": "GET",
    "Desc": "This API fetches the logo of a community category.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/logo/([0-9]+)?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List followers of category or forum",
    "Api URL": "/api/v1/communityCategory/([0-9]+)/followers",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users who follow a community category or forum, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityCategory/([0-9]+)/followers?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-100",
        "description": "Number of users to list"
      },
      {
        "name": "userType",
        "data_type": "string optional, max chars : 100",
        "description": "to filter agent and end user"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "Get topic types",
    "Api URL": "/api/v1/communityTopicTypes",
    "Api Method": "GET",
    "Desc": "This API fetches the topic types defined in the user community of your help desk portal.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopicTypes?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"defaultTopicType\" : \"QUESTION\",\n  \"enabledTopicTypes\" : [ \"DISCUSSION\", \"ANNOUNCEMENT\", \"QUESTION\" ],\n  \"disabledTopicTypes\" : [ \"IDEA\", \"PROBLEM\" ]\n}"
  },
  {
    "Api name": "Update topic type preferences",
    "Api URL": "/api/v1/communityTopicTypes",
    "Api Method": "PATCH",
    "Desc": "This API helps set the default topic type and enable/disable other topic types in the user community.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityTopicTypes?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"defaultTopicType\" : \"QUESTION\",\n  \"enabledTopicTypes\" : [ \"DISCUSSION\", \"ANNOUNCEMENT\", \"QUESTION\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "defaultTopicType",
        "data_type": "String optional",
        "description": "Topic type to set as the default option in the user community. Values allowed are: DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "enabledTopicTypes",
        "data_type": "JSONArray optional",
        "description": "Topic types to enable in the user community. Values allowed are: DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      }
    ],
    "Response Example": "-d'{\n  \"defaultTopicType\" : \"QUESTION\",\n  \"enabledTopicTypes\" : [ \"DISCUSSION\", \"ANNOUNCEMENT\", \"QUESTION\" ]\n}'"
  },
  {
    "Api name": "Disable topic type",
    "Api URL": "/api/v1/communityTopicTypes/disable",
    "Api Method": "POST",
    "Desc": "This API helps to disable topic types in the user community.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopicTypes/disable?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"changeExisitingTopicToType\" : \"PROBLEM\",\n  \"type\" : \"QUESTION\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "changeExisitingTopicToType",
        "data_type": "String required",
        "description": "Topic type that should be applied to existing topics mapped to the disabled type. Values allowed are: DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Topic type that must be disabled. Values allowed are: DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      }
    ],
    "Response Example": "-d'{\n  \"changeExisitingTopicToType\" : \"PROBLEM\",\n  \"type\" : \"QUESTION\"\n}'"
  },
  {
    "Api name": "Get community preferences",
    "Api URL": "/api/v1/communityPreferences",
    "Api Method": "GET",
    "Desc": "This API fetches the settings defined for the user community in your help desk portal.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityPreferences?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"landingPage\" : \"ALL_CATEGORY\"\n}"
  },
  {
    "Api name": "Set community preferences",
    "Api URL": "/api/v1/communityPreferences",
    "Api Method": "POST",
    "Desc": "This API helps define the settings for the user community in your help desk portal.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityPreferences?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"landingPage\" : \"ALL_CATEGORY\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "landingPage",
        "data_type": "String required",
        "description": "Key that determines the content to display on the home page of the user community. Values allowed are: ALLCATEGORIES (all community categories are displayed), and RECENTPOSTS (only the latest topics in the community are displayed)."
      }
    ],
    "Response Example": "-d'{\n  \"landingPage\" : \"ALL_CATEGORY\"\n}'"
  },
  {
    "Api name": "Update user status in community",
    "Api URL": "/api/v1/communityUsers/([0-9]+)",
    "Api Method": "PATCH",
    "Desc": "This API updates the moderation status of end-users in the user community.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015971?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isModerated\" : \"true\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "isModerated",
        "data_type": "boolean optional",
        "description": "Key that defines whether the user is moderated or not"
      }
    ],
    "Response Example": "-d'{\n  \"isModerated\" : \"true\"\n}'"
  },
  {
    "Api name": "Follow user",
    "Api URL": "/api/v1/communityUsers/([0-9]+)/follow",
    "Api Method": "POST",
    "Desc": "This API helps to follow users.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015971/follow?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Unfollow user",
    "Api URL": "/api/v1/communityUsers/([0-9]+)/unfollow",
    "Api Method": "POST",
    "Desc": "This API helps to unfollow users.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015971/unfollow?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Approve topics",
    "Api URL": "/api/v1/communityTopics/approve",
    "Api Method": "POST",
    "Desc": "This API helps to approve topics and publish them on the forum.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/approve?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "A list of Community topic IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Restore trashed topics",
    "Api URL": "/api/v1/communityTopics/restore",
    "Api Method": "POST",
    "Desc": "This API restores topics from trash.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/restore?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "A list of Community topic IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Trash unmoderated topics",
    "Api URL": "/api/v1/communityTopics/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API trashes forum topics that are yet to be moderated for publishing.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/moveToTrash?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "A list of Community topic IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Permanently delete topics",
    "Api URL": "/api/v1/communityTopics",
    "Api Method": "DELETE",
    "Desc": "This API permanently deletes forum topics from the trash.",
    "OAuth Scope": "Desk.community.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/communityTopics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "A list of Community topic IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Unmoderate topics",
    "Api URL": "/api/v1/communityTopics/unmoderate",
    "Api Method": "POST",
    "Desc": "This API unmoderate the moderated forum topics.The comments that are posted during moderation will be displayed to all users without under going any review.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/unmoderate?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "topicIds",
        "data_type": "JSONArray required",
        "description": "A list of Community topic IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Approve comments",
    "Api URL": "/api/v1/communityComments/approve",
    "Api Method": "POST",
    "Desc": "This API approves comments that are pending moderation.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityComments/approve?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "commentIds",
        "data_type": "JSONArray required",
        "description": "A list of Community comment IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Restore trashed comments",
    "Api URL": "/api/v1/communityComments/restore",
    "Api Method": "POST",
    "Desc": "This API restores comments that were trashed from forum topics.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityComments/restore?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "commentIds",
        "data_type": "JSONArray required",
        "description": "A list of Community comment IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Trash unmoderated comments",
    "Api URL": "/api/v1/communityComments/moveToTrash",
    "Api Method": "POST",
    "Desc": "This API trashes comments that are yet to be approved for publishing on a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityComments/moveToTrash?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "commentIds",
        "data_type": "JSONArray required",
        "description": "A list of Community comment IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "Permanently delete comments",
    "Api URL": "/api/v1/communityComments",
    "Api Method": "DELETE",
    "Desc": "This API permanently deletes comments from the trash of your help desk portal.",
    "OAuth Scope": "Desk.community.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/communityComments?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "commentIds",
        "data_type": "JSONArray required",
        "description": "A list of Community comment IDs. A maximum of 50 IDs is allowed."
      }
    ],
    "Response Example": "-d'{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "List moderated users",
    "Api URL": "/api/v1/communityModeratedUsers",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of moderated end-users, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityModeratedUsers?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-50",
        "description": "Number of users to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015974/photo?orgId=123456\",\n      \"name\" : \"user 4\",\n      \"id\" : \"7000000015974\",\n      \"type\" : \"AGENT\"\n    },\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
  },
  {
    "Api name": "Unmoderate users",
    "Api URL": "/api/v1/communityUsers/unmoderate",
    "Api Method": "POST",
    "Desc": "This API disables moderation for end-users in the user community.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityUsers/unmoderate?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "JSONArray required",
        "description": "IDs of the users for whom moderation must be disabled"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}'"
  },
  {
    "Api name": "List followers of user",
    "Api URL": "/api/v1/communityUsers/{id}/followers",
    "Api Method": "GET",
    "Desc": "This API lists followers of a user, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015971/followers?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the followers must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-25",
        "description": "Number of followers to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\",\n    \"status\" : \"DISABLED\"\n  } ]\n}"
  },
  {
    "Api name": "Get user details",
    "Api URL": "/api/v1/communityUsers/{id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of an user from the community.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015971?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the user. Value allowed is stats."
      }
    ],
    "Response Example": "{\n  \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n  \"stats\" : {\n    \"postCount\" : \"35\",\n    \"topicTypeWiseCount\" : {\n      \"ANNOUNCEMENT\" : \"3\",\n      \"IDEA\" : \"10\",\n      \"DISCUSSION\" : \"0\",\n      \"PROBLEM\" : \"2\",\n      \"QUESTION\" : \"20\"\n    },\n    \"followersCount\" : \"1\",\n    \"commentCount\" : \"24\"\n  },\n  \"name\" : \"user 1\",\n  \"isModerated\" : true,\n  \"id\" : \"7000000015971\",\n  \"type\" : \"AGENT\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "List topics by user",
    "Api URL": "/api/v1/communityUsers/([0-9]+)/topics",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of topics by a user, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityUsers/7000000015972/topics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be fetched"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the topics must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-25",
        "description": "Number of topics to list"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of topics. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Starting time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "Ending time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T10:42:12.716Z\",\n    \"subject\" : \"Topic 2\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015172/photo?orgId=123456\",\n      \"name\" : \"user 3\",\n      \"id\" : \"7000000015172\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"commentCount\" : \"1\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"subject\" : \"Topic 1\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : null,\n    \"commentCount\" : \"0\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
  },
  {
    "Api name": "List comments by user",
    "Api URL": "/api/v1/communityUsers/([0-9]+)/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments by a user, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/7000000015971/comments?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the comments must be fetched"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the comments must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-25",
        "description": "Number of comments to list"
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Starting time of the time range in which the comments should have been created. The value must be expressed according to the GMT time zone."
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "Ending time of the time range in which the comments should have been created. The value must be expressed according to the GMT time zone."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"Comment 1\",\n    \"topicPeramlink\" : \"zoho-desk-api\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"subject\" : \"Zoho Desk API\",\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"parentCommentId\" : \"4000000019012\",\n    \"id\" : \"4000000019013\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\",\n    \"topicType\" : \"PROBLEM\"\n  }, {\n    \"summary\" : \"Comment 2\",\n    \"topicPeramlink\" : \"zoho-desk-api-features\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"subject\" : \"Zoho Desk API Features\",\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"parentCommentId\" : null,\n    \"id\" : \"4000000019029\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\",\n    \"topicType\" : \"PROBLEM\"\n  } ]\n}"
  },
  {
    "Api name": "List topics pending moderation",
    "Api URL": "/api/v1/communityModeration/topics",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of forum topics that are pending moderation, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityModeration/topics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be fetched"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the topics must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-50",
        "description": "Number of topics to list"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Moderation status of the topics. Values allowed are: AWAITINGAPPROVAL , SPAM , and TRASHED ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : null,\n      \"type\" : \"AGENT\"\n    },\n    \"trashedBy\" : null,\n    \"subject\" : \"Topic 2\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  }, {\n    \"summary\" : \"Topic 1 dscription\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"trashedBy\" : null,\n    \"subject\" : \"Topic 1\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  } ]\n}"
  },
  {
    "Api name": "List comments pending moderation",
    "Api URL": "/api/v1/communityModeration/comments",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of comments that are pending moderation, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/{id}/comments?orgId=1233456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the comments must be fetched"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the comments must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-50",
        "description": "Number of comments to list"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Moderation status of the comments. Values allowed are: AWAITINGAPPROVAL , SPAM , and TRASHED ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"Comment 1\",\n    \"topicPeramlink\" : \"zoho-desk-api\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"trashedBy\" : null,\n    \"subject\" : \"Zoho Desk API\",\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"id\" : \"4000000019013\",\n    \"categoryId\" : \"4000000019012\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  }, {\n    \"summary\" : \"Comment 2\",\n    \"topicPeramlink\" : \"zoho-desk-api-features\",\n    \"modifiedTime\" : \"2018-10-16T10:28:59.495Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"trashedBy\" : null,\n    \"subject\" : \"Zoho Desk API Features\",\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"id\" : \"4000000019029\",\n    \"categoryId\" : \"4000000019012\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  } ]\n}"
  },
  {
    "Api name": "Draft topic",
    "Api URL": "/api/v1/communityTopics/saveDraft",
    "Api Method": "POST",
    "Desc": "This API saves a draft of a forum topic.",
    "OAuth Scope": "Desk.community.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/saveDraft?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "String required",
        "description": "Title of the topic"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "permalink of the topic to be created"
      },
      {
        "name": "content",
        "data_type": "String required",
        "description": "Body content of the topic"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Types of Topics. The allowed values are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "categoryId",
        "data_type": "long required",
        "description": "ID of the community category in which the topic must be posted"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topic must be pinned to the topics list page or not"
      },
      {
        "name": "notifyMe",
        "data_type": "boolean optional",
        "description": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the topic"
      },
      {
        "name": "tags",
        "data_type": "JSONArray optional",
        "description": "Tag phrases"
      },
      {
        "name": "seo",
        "data_type": "JSONObject optional",
        "description": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords , useTitleAsPageTitle , description , title"
      },
      {
        "name": "featuredImage",
        "data_type": "JSONObject optional",
        "description": "Specifies the id of the uploaded image to display as a featured image."
      }
    ],
    "Response Example": "-d'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Update Drafted Topic",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/updateDraft",
    "Api Method": "PUT",
    "Desc": "This API helps update the draft of a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/communityTopics/([0-9]+)/updateDraft?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "String required",
        "description": "Title of the topic"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "permalink of the topic to be created"
      },
      {
        "name": "content",
        "data_type": "String required",
        "description": "Body content of the topic"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Types of Topics. The allowed values are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "categoryId",
        "data_type": "long required",
        "description": "ID of the community category in which the topic must be posted"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topic must be pinned to the topics list page or not"
      },
      {
        "name": "notifyMe",
        "data_type": "boolean optional",
        "description": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the topic"
      },
      {
        "name": "tags",
        "data_type": "JSONArray optional",
        "description": "Tag phrases"
      },
      {
        "name": "seo",
        "data_type": "JSONObject optional",
        "description": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords , useTitleAsPageTitle , description , title"
      },
      {
        "name": "featuredImage",
        "data_type": "JSONObject optional",
        "description": "Specifies the id of the uploaded image to display as a featured image."
      }
    ],
    "Response Example": "-d'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Publish topic draft",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/publishDraft",
    "Api Method": "POST",
    "Desc": "This API publishes the draft of a forum topic.",
    "OAuth Scope": "Desk.community.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/communityTopics/([0-9]+)/publishDraft?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "subject",
        "data_type": "String required",
        "description": "Title of the topic"
      },
      {
        "name": "permalink",
        "data_type": "String optional",
        "description": "permalink of the topic to be created"
      },
      {
        "name": "content",
        "data_type": "String required",
        "description": "Body content of the topic"
      },
      {
        "name": "type",
        "data_type": "String required",
        "description": "Type of topic. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "categoryId",
        "data_type": "long required",
        "description": "ID of the community category in which the topic must be posted"
      },
      {
        "name": "isSticky",
        "data_type": "boolean optional",
        "description": "Key that defines whether the topic must be pinned to the topics list page or not"
      },
      {
        "name": "notifyMe",
        "data_type": "boolean optional",
        "description": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not"
      },
      {
        "name": "attachmentIds",
        "data_type": "JSONArray optional",
        "description": "IDs of files to attach to the topic"
      },
      {
        "name": "tags",
        "data_type": "JSONArray optional",
        "description": "Tag phrases"
      },
      {
        "name": "mailTo",
        "data_type": "JSONArray optional",
        "description": "Email IDs to which the topic must be sent after publishing"
      },
      {
        "name": "seo",
        "data_type": "JSONObject optional",
        "description": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords , useTitleAsPageTitle , description , title"
      },
      {
        "name": "featuredImage",
        "data_type": "JSONObject optional",
        "description": "Specifies the id of the uploaded image to display as a featured image."
      }
    ],
    "Response Example": "-d'{\n  \"featuredImage\" : {\n    \"imageId\" : \"1000000061105\"\n  },\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"seo\" : {\n    \"keywords\" : \"seo,search\",\n    \"useTitleAsPageTitle\" : \"true\",\n    \"description\" : \"seo description\",\n    \"title\" : \"seo title\"\n  },\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}'"
  },
  {
    "Api name": "Delete topic draft",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/deleteDraft",
    "Api Method": "DELETE",
    "Desc": "This API deletes a topic draft from the user community.",
    "OAuth Scope": "Desk.community.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/communityTopics/([0-9]+)/deleteDraft?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Get moderation stats",
    "Api URL": "/api/v1/communityModeration/counts",
    "Api Method": "GET",
    "Desc": "This API fetches statistics related to topic/comment moderation in the user community.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityModeration/counts?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category for which the statistics must be fetched"
      }
    ],
    "Response Example": "{\n  \"awaitingApproval\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  },\n  \"moderated\" : {\n    \"topic\" : \"25\"\n  },\n  \"spam\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  },\n  \"trash\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  }\n}"
  },
  {
    "Api name": "List moderated topics",
    "Api URL": "/api/v1/communityModeratedTopics",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of moderated topics, based on the limit defined.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityModeratedTopics?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be fetched"
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=1",
        "description": "Index number, starting from which the topics must be listed"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 25, range : 1-50",
        "description": "Number of topics to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"subject\" : \"Topic 2\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 dscription\",\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"END_USER\"\n    },\n    \"subject\" : \"Topic 1\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
  },
  {
    "Api name": "Check Permalink Availability",
    "Api URL": "/api/v1/communityTopics/permalink/availability",
    "Api Method": "GET",
    "Desc": "API to check whether the given permalink is available",
    "OAuth Scope": "Desk.community.GET",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/permalink/availability?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "permalink",
        "data_type": "String required",
        "description": "Permalink for which the availablilty need to be checked"
      }
    ],
    "Response Example": "{\n  \"available\" : \"true\"\n}"
  },
  {
    "Api name": "Get Topic Permalinks",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/permalinks",
    "Api Method": "GET",
    "Desc": "API to get all permalinks of a topic",
    "OAuth Scope": "Desk.community.GET",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/1234567890/permalinks?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"isPrimary\" : \"true\",\n    \"permalink\" : \"community-topic-permalink-primary\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-1\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-2\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-3\"\n  } ]\n}"
  },
  {
    "Api name": "Update Topic Permalinks",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/permalinks",
    "Api Method": "PATCH",
    "Desc": "API to update all permalinks of a topic",
    "OAuth Scope": "Desk.community.PATCH",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/communityTopics/1234567890/permalinks?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"primaryPermalink\" : \"community-topic-permalink-primary\",\n  \"secondaryPermalink\" : [ \"community-topic-permalink-secondary-1\", \"community-topic-permalink-secondary-2\", \"community-topic-permalink-secondary-3\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "primaryPermalink",
        "data_type": "String optional",
        "description": "holds the primary permalink of a topic"
      },
      {
        "name": "secondaryPermalink",
        "data_type": "JSONArray optional",
        "description": "holds the secondary permalink of a topic as array"
      }
    ],
    "Response Example": "-d'{\n  \"primaryPermalink\" : \"community-topic-permalink-primary\",\n  \"secondaryPermalink\" : [ \"community-topic-permalink-secondary-1\", \"community-topic-permalink-secondary-2\", \"community-topic-permalink-secondary-3\" ]\n}'"
  },
  {
    "Api name": "Topic voters trend",
    "Api URL": "/api/v1/communityTopics/([0-9]+)/voters/trend",
    "Api Method": "GET",
    "Desc": "To get trend of voters of a topic",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/4000000124009/voters/trend?orgId=123456\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "startTime",
        "data_type": "date optional",
        "description": "Starting time of the time range for which the statistics should be fetched. The value must be expressed according to the GMT time zone."
      },
      {
        "name": "endTime",
        "data_type": "date optional",
        "description": "Ending time of the time range for which the statistics should be fetched. The value must be expressed according to the GMT time zone."
      }
    ],
    "Response Example": "{\n  \"topicVoterTrend\" : [ {\n    \"date\" : \"May-2023\",\n    \"count\" : \"0\"\n  }, {\n    \"date\" : \"Jun-2023\",\n    \"count\" : \"0\"\n  }, {\n    \"date\" : \"Jul-2023\",\n    \"count\" : \"0\"\n  }, {\n    \"date\" : \"Aug-2023\",\n    \"count\" : \"0\"\n  }, {\n    \"date\" : \"Sep-2023\",\n    \"count\" : \"1\"\n  } ]\n}"
  },
  {
    "Api name": "List all Drafted Topics",
    "Api URL": "/api/v1/communityMyDraftedTopics",
    "Api Method": "GET",
    "Desc": "This API List all Drafted Topics of the current User",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/allCommunityCategory?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be fetched"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Types of Topics. The allowed values are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "from",
        "data_type": "int required, default : 1, range : >=0",
        "description": "Index from which list is retrieved and it starts from 1"
      },
      {
        "name": "limit",
        "data_type": "int required, default : 10, range : 1-100",
        "description": "limit for listing draftedTopics"
      },
      {
        "name": "sortBy",
        "data_type": "String required, default : modifiedTime",
        "description": "sort topics list by createdtime or modified time"
      },
      {
        "name": "isAscending",
        "data_type": "boolean required, default : false",
        "description": "sort topics list in ascending or decending order"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"alex carry\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"subject\" : \"How to change language in moblie?\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000168087\",\n    \"type\" : \"QUESTION\",\n    \"categoryId\" : \"7000000018007\"\n  }, {\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"john peter\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"subject\" : \"How to delete draft posts?\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000168087\",\n    \"type\" : \"QUESTION\",\n    \"categoryId\" : \"7000000018007\"\n  } ]\n}"
  },
  {
    "Api name": "Get Topics Views Count",
    "Api URL": "/api/v1/communityTopics/count",
    "Api Method": "GET",
    "Desc": "This API fetches the total count of the topics based on the selected view.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityTopics/count?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "ID of a view for which you need to get the count"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be listed"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of topics to list. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      },
      {
        "name": "tagName",
        "data_type": "String optional",
        "description": "Tag by which topics must be filtered"
      },
      {
        "name": "label",
        "data_type": "String optional",
        "description": "Status label by which topics must be filtered. The value of this key varies according to the topic type. Values allowed are: NOSTATUS , NEEDMOREINFO , WORKINGONIT , ANSWERED , UNANSWERED , MAYBELATER , UNDERREVIEW , IMPLEMENTED , WILLNOTIMPLEMENT , NOTAPROBLEM , TEMPORARYFIX , ANALYZING , SOLVED , UNSOLVED , and MOSTVOTED ."
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "Get Comments Views Count",
    "Api URL": "/api/v1/communityComments/count",
    "Api Method": "GET",
    "Desc": "This API fetches the total count of the comments based on the selected view.",
    "OAuth Scope": "Desk.community.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/communityComments/count?orgId=1234567\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "viewId",
        "data_type": "long required",
        "description": "ID of a view for which you need to get the count"
      },
      {
        "name": "categoryId",
        "data_type": "long optional",
        "description": "ID of the community category from which the topics must be listed"
      },
      {
        "name": "type",
        "data_type": "String optional",
        "description": "Type of topics to list. Values allowed are: ANNOUNCEMENT , DISCUSSION , IDEA , PROBLEM , and QUESTION ."
      }
    ],
    "Response Example": "{\n  \"count\" : \"10\"\n}"
  },
  {
    "Api name": "EmailTemplates",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Templates provide the data needed to construct the modules",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Add Template",
    "Api URL": "/api/v1/templates",
    "Api Method": "POST",
    "Desc": "Add a new Template",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/templates\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"templateName\" : \"new Template\",\n  \"subject\" : \"My Template Subject\",\n  \"recordType\" : \"tickets\",\n  \"departmentId\" : \"4000000007039\",\n  \"attachmentIds\" : [ 1892000000132047 ],\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">Dear ${Cases.Contact Name},<br> <br>Your ticket has been created with the ticket ID  ${Cases.Request Id} and subject  \\\"${Cases.Subject}\\\"<br> <br>Someone from our customer service team will review it and respond shortly.<br> <br>Regards,<br>${Organization.Organization Name} Support Team.<br><br>${Cases.CUSTOMER_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"fromId\" : \"support@@zylker.com\",\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "templateName",
        "data_type": "string required, max chars : 250",
        "description": "The name of the Template"
      },
      {
        "name": "subject",
        "data_type": "string required, max chars : 1000",
        "description": "The Subject of the template"
      },
      {
        "name": "recordType",
        "data_type": "string required, max chars : 100",
        "description": "The recordType of the template can be contacts , accounts , tickets , products , tasks"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "The department of the template"
      },
      {
        "name": "folderId",
        "data_type": "long required",
        "description": "The folder of the template"
      },
      {
        "name": "fromId",
        "data_type": "string required, max chars : 100",
        "description": "The from email of the template"
      },
      {
        "name": "replyTo",
        "data_type": "string optional, max chars : 100",
        "description": "The reply to mail id"
      },
      {
        "name": "body",
        "data_type": "string optional, max chars : 64000",
        "description": "the body of the template"
      },
      {
        "name": "contentType",
        "data_type": "string required, max chars : 100",
        "description": "content type of the template"
      },
      {
        "name": "attachmentIds",
        "data_type": "list optional",
        "description": "List of file attachments in the template"
      }
    ],
    "Response Example": "-d'{\n  \"templateName\" : \"new Template\",\n  \"subject\" : \"My Template Subject\",\n  \"recordType\" : \"tickets\",\n  \"departmentId\" : \"4000000007039\",\n  \"attachmentIds\" : [ 1892000000132047 ],\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">Dear ${Cases.Contact Name},<br> <br>Your ticket has been created with the ticket ID  ${Cases.Request Id} and subject  \\\"${Cases.Subject}\\\"<br> <br>Someone from our customer service team will review it and respond shortly.<br> <br>Regards,<br>${Organization.Organization Name} Support Team.<br><br>${Cases.CUSTOMER_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"fromId\" : \"support@@zylker.com\",\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n}'"
  },
  {
    "Api name": "View Template",
    "Api URL": "/api/v1/templates/{template_id}",
    "Api Method": "GET",
    "Desc": "View a particular Template",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/templates/1892000000639846\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"attachments\" : [ {\n    \"size\" : \"8842\",\n    \"name\" : \"rick.jpeg\",\n    \"id\" : \"1892000000132047\"\n  } ],\n  \"recordType\" : \"tickets\",\n  \"subject\" : \"##${Cases.Request Id}##] ${Cases.Recent Comment By} has edited a comment in the ticket\",\n  \"departmentId\" : \"1892000000639717\",\n  \"templateId\" : \"1892000000639846\",\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">${Cases.Recent Comment By} has edited a comment in the ticket, #${Cases.Request Id} ${Cases.Subject}.<br> <br>${Cases.Recent Comment}<br><br>${Cases.SUPPORT_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"fromId\" : null,\n  \"folderId\" : \"4000000007021\",\n  \"folder\" : {\n    \"folderName\" : \"Agent Notifications\",\n    \"folderId\" : \"1892000000639789\"\n  },\n  \"replyToAddr\" : null,\n  \"templateName\" : \"Notify agent when a comment is edited\",\n  \"category\" : \"CUSTOM_TEMPLATE\",\n  \"contentType\" : \"richtext\"\n}"
  },
  {
    "Api name": "Update Template",
    "Api URL": "/api/v1/templates/{template_id}",
    "Api Method": "PATCH",
    "Desc": "Update an existing Template",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://support.zoho.com/api/v1/templates/4000000040001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"templateName\" : \"new Template\",\n  \"subject\" : \"My New Template\",\n  \"recordType\" : \"tickets\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "templateName",
        "data_type": "string optional, max chars : 250",
        "description": "The name of the Template"
      },
      {
        "name": "subject",
        "data_type": "string optional, max chars : 1000",
        "description": "The Subject of the template"
      },
      {
        "name": "recordType",
        "data_type": "string optional, max chars : 100",
        "description": "The recordType of the template can be contacts , accounts , tickets , products , tasks"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "The department of the template"
      },
      {
        "name": "folderId",
        "data_type": "long optional",
        "description": "The folder of the template"
      },
      {
        "name": "fromId",
        "data_type": "string optional, max chars : 100",
        "description": "The from email of the template"
      },
      {
        "name": "replyTo",
        "data_type": "string optional, max chars : 100",
        "description": "The reply to mail id"
      },
      {
        "name": "body",
        "data_type": "string optional, max chars : 64000",
        "description": "the body of the template"
      },
      {
        "name": "contentType",
        "data_type": "string optional, max chars : 100",
        "description": "content type of the template"
      },
      {
        "name": "attachmentIds",
        "data_type": "list optional",
        "description": "List of file attachments in the template"
      }
    ],
    "Response Example": "-d'{\n  \"templateName\" : \"new Template\",\n  \"subject\" : \"My New Template\",\n  \"recordType\" : \"tickets\"\n}'"
  },
  {
    "Api name": "Delete Template",
    "Api URL": "/api/v1/templates/{template_id}",
    "Api Method": "DELETE",
    "Desc": "Delete a Template",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://support.zoho.com/api/v1/templates/4000000042009\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Listing Templates",
    "Api URL": "/api/v1/templates",
    "Api Method": "GET",
    "Desc": "List all Templates",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/templates?departmentId=4000000007043&module=tickets?searchStr=*com*&from=1&limit=5\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "the corresponding department to be fetched"
      },
      {
        "name": "module",
        "data_type": "string optional, max chars : 100",
        "description": "The name of the module"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 1, range : 1-1000",
        "description": "from index, DEFAULT 1"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 1000, range : 1-1000",
        "description": "number of templates to be retrieved Range 1-50, DEFAULT 50"
      },
      {
        "name": "searchStr",
        "data_type": "string optional, max chars : 100",
        "description": "String to search for templates by name. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for templates whose name start with the string, 2) *string* - Searches for templates whose name contain the string, 3) string - Searches for templates whose name is an exact match for the string"
      },
      {
        "name": "folderId",
        "data_type": "long optional",
        "description": "the corresponding folder to be fetched"
      }
    ],
    "Response Example": "[ {\n  \"folder\" : {\n    \"folderName\" : \"Agent Notifications\",\n    \"folderId\" : \"4000000007021\"\n  },\n  \"replyToAddr\" : null,\n  \"templateName\" : \"Notify contact when a comment is added\",\n  \"recordType\" : \"tickets\",\n  \"subject\" : \"[##${Cases.Request Id}##] ${Cases.Recent Comment By} has commented to your ticket\",\n  \"departmentId\" : \"4000000007043\",\n  \"templateId\" : \"4000000007111\",\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">Dear ${Cases.Contact Name},<br> <br>${Cases.Recent Comment By} has left the following comment on your ticket, #${Cases.Request Id} ${Cases.Subject}.<br> <br>${Cases.Recent Comment}<br> <br>Regards,<br>${Organization.Organization Name} Support Team.<br><br>${Cases.CUSTOMER_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"category\" : \"DEFAULT_TEMPLATE\",\n  \"fromId\" : null,\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n}, {\n  \"folder\" : {\n    \"folderName\" : \"Agent Notifications\",\n    \"folderId\" : \"4000000007021\"\n  },\n  \"replyToAddr\" : null,\n  \"templateName\" : \"Notify contact when a comment is edited\",\n  \"recordType\" : \"tickets\",\n  \"subject\" : \"[##${Cases.Request Id}##] ${Cases.Recent Comment By} has updated comment in your ticket\",\n  \"departmentId\" : \"4000000007043\",\n  \"templateId\" : \"4000000007113\",\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">Dear ${Cases.Contact Name},<br> <br>${Cases.Recent Comment By} has updated the following comment in your ticket, #${Cases.Request Id} ${Cases.Subject}.<br> <br>${Cases.Recent Comment}<br> <br>Regards,<br>${Organization.Organization Name} Support Team.<br><br>${Cases.CUSTOMER_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"category\" : \"DEFAULT_TEMPLATE\",\n  \"fromId\" : null,\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n}, {\n  \"folder\" : {\n    \"folderName\" : \"Agent Notifications\",\n    \"folderId\" : \"4000000007021\"\n  },\n  \"replyToAddr\" : null,\n  \"templateName\" : \"Notify contact when a comment is deleted\",\n  \"recordType\" : \"tickets\",\n  \"subject\" : \"[##${Cases.Request Id}##] ${Cases.Recent Comment By} has deleted comment in your ticket\",\n  \"departmentId\" : \"4000000007043\",\n  \"templateId\" : \"4000000007115\",\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">Dear ${Cases.Contact Name},<br> <br>${Cases.Recent Comment By} has deleted the following comment in your ticket, #${Cases.Request Id} ${Cases.Subject}.<br> <br>${Cases.Recent Comment}<br> <br>Regards,<br>${Organization.Organization Name} Support Team.<br><br>${Cases.CUSTOMER_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"category\" : \"DEFAULT_TEMPLATE\",\n  \"fromId\" : null,\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n}, {\n  \"folder\" : {\n    \"folderName\" : \"Agent Notifications\",\n    \"folderId\" : \"4000000007021\"\n  },\n  \"replyToAddr\" : null,\n  \"templateName\" : \"Notify agent when a comment is deleted\",\n  \"recordType\" : \"tickets\",\n  \"subject\" : \"[##${Cases.Request Id}##] ${Cases.Recent Comment By} has deleted a comment in the ticket\",\n  \"departmentId\" : \"4000000007043\",\n  \"templateId\" : \"4000000007135\",\n  \"body\" : \"<table align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0px; background: rgb(242, 242, 242);\\\" width=\\\"100%\\\"><tbody><tr><td style=\\\"padding: 30.0px 20.0px;\\\" valign=\\\"top\\\"><table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin: 0.0px auto;\\\" width=\\\"90%\\\"><tbody><tr><td valign=\\\"top\\\" style=\\\"border: 1.0px solid rgb(218, 218, 218); background-color: #ffffff; padding: 30px;\\\"><div style=\\\"font-family: lucida grande, lucida sans, lucida sans unicode, arial, helvetica, verdana, sans-serif; font-size: 14px; line-height: 24px; font-weight: normal; color: rgb(34, 34, 34);\\\">${Cases.Recent Comment By} has deleted the following comment in the ticket, #${Cases.Request Id} ${Cases.Subject}.<br> <br>${Cases.Recent Comment}<br><br><br>${Cases.SUPPORT_PORTAL_BUTTON}</div> </td> </tr> <tr> <td style=\\\"padding-top: 5.0px;\\\" valign=\\\"top\\\">  </td> </tr> </tbody> </table> </td> </tr> </tbody> </table>\",\n  \"category\" : \"DEFAULT_TEMPLATE\",\n  \"fromId\" : null,\n  \"contentType\" : \"richtext\",\n  \"folderId\" : \"4000000007021\"\n} ]"
  },
  {
    "Api name": "Rendering a Template",
    "Api URL": "/api/v1/templates/{template_id}/render",
    "Api Method": "POST",
    "Desc": "Render an exisiting Template into reply",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/templates/4000000042009/render?entityId=4000000032012\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"source\" : \"TICKET_REPLY\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "entityId",
        "data_type": "long required",
        "description": "The id of the entity can be contact,ticket or account"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "source",
        "data_type": "String optional",
        "description": "Source from which template content has to be rendered. Values can be TICKET_REPLY , NOTIFICATIONS , AUTOMATION_ALERTS , SLA"
      }
    ],
    "Response Example": "-d'{\n  \"source\" : \"TICKET_REPLY\"\n}'"
  },
  {
    "Api name": "Fetching placeholders",
    "Api URL": "/api/v1/templates/placeHolders",
    "Api Method": "GET",
    "Desc": "List the placeholders supported in emailTemplates",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/templates/placeHolders?departmentId=4000000042009&module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "To get placeholders for this module.Allowed values are tickets , tasks , contacts , accounts , products , solutions , calls , events"
      },
      {
        "name": "departmentId",
        "data_type": "Long required",
        "description": "To get placeholders for this departmentId"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"supportedPlaceHolders\" : [ {\n      \"i18nFieldLabel\" : \"Priority\",\n      \"fieldLabel\" : \"Priority\",\n      \"placeHolder\" : \"${Cases.Priority}\"\n    }, {\n      \"i18nFieldLabel\" : \"Ticket Owner\",\n      \"fieldLabel\" : \"Case Owner\",\n      \"placeHolder\" : \"${Cases.Case Owner}\"\n    }, {\n      \"i18nFieldLabel\" : \"Status\",\n      \"fieldLabel\" : \"Status\",\n      \"placeHolder\" : \"${Cases.Status}\"\n    }, {\n      \"i18nFieldLabel\" : \"Contact Name\",\n      \"fieldLabel\" : \"Contact Name\",\n      \"placeHolder\" : \"${Cases.Contact Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Subject\",\n      \"fieldLabel\" : \"Subject\",\n      \"placeHolder\" : \"${Cases.Subject}\"\n    }, {\n      \"i18nFieldLabel\" : \"Product Name\",\n      \"fieldLabel\" : \"Product Name\",\n      \"placeHolder\" : \"${Cases.Product Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Product Name\",\n      \"fieldLabel\" : \"Product Name\",\n      \"placeHolder\" : \"${Cases.Product Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Resolution\",\n      \"fieldLabel\" : \"Resolution\",\n      \"placeHolder\" : \"${Cases.Resolution}\"\n    } ],\n    \"i18nModule\" : \"Tickets\",\n    \"module\" : \"Cases\"\n  }, {\n    \"supportedPlaceHolders\" : [ {\n      \"i18nFieldLabel\" : \"First Name\",\n      \"fieldLabel\" : \"First Name\",\n      \"placeHolder\" : \"${User.First Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Last Name\",\n      \"fieldLabel\" : \"Last Name\",\n      \"placeHolder\" : \"${User.Last Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Mobile\",\n      \"fieldLabel\" : \"Mobile\",\n      \"placeHolder\" : \"${User.Mobile}\"\n    } ],\n    \"i18nModule\" : \"Agent\",\n    \"module\" : \"User\"\n  }, {\n    \"supportedPlaceHolders\" : [ {\n      \"i18nFieldLabel\" : \"Organization Name\",\n      \"fieldLabel\" : \"Organization Name\",\n      \"placeHolder\" : \"${Organization.Organization Name}\"\n    }, {\n      \"i18nFieldLabel\" : \"Organization Logo\",\n      \"fieldLabel\" : \"Organization Logo\",\n      \"placeHolder\" : \"${Organization.Organization Logo}\"\n    }, {\n      \"i18nFieldLabel\" : \"City\",\n      \"fieldLabel\" : \"City\",\n      \"placeHolder\" : \"${Organization.City}\"\n    } ],\n    \"i18nModule\" : \"Organization\",\n    \"module\" : \"Organization\"\n  } ]\n}"
  },
  {
    "Api name": "Cloning a Email Template Attachments",
    "Api URL": "/api/v1/templates/{template_id}/cloneAttachments",
    "Api Method": "POST",
    "Desc": "Cloning an exisiting Template's attachments",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://support.zoho.com/api/v1/templates/1000000013124/cloneAttachments\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"size\" : \"10247\",\n    \"name\" : \"mortytwo.jpeg\",\n    \"parentAttachmentId\" : \"1000000211013\",\n    \"href\" : \"https://support.zoho.com/api/v1/uploads/1000000212005/content\",\n    \"clonedAttachmentId\" : \"1000000212005\"\n  }, {\n    \"size\" : \"11682\",\n    \"name\" : \"12img.png\",\n    \"parentAttachmentId\" : \"1000000211015\",\n    \"href\" : \"https://support.zoho.com/api/v1/uploads/1000000212007/content\",\n    \"clonedAttachmentId\" : \"1000000212007\"\n  } ]\n}"
  },
  {
    "Api name": "TemplateFolders",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A pack of Email templates",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Adding a Template Folder",
    "Api URL": "/api/v1/templateFolders",
    "Api Method": "Post",
    "Desc": "Adding a Template Folder",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X Post\nhttps://support.zoho.com/api/v1/templateFolders\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"folderDesc\" : \"contains details\",\n  \"folderAccessDetails\" : {\n    \"type\" : \"allAgents\"\n  },\n  \"departmentId\" : \"4000000007039\",\n  \"folderName\" : \"New my Folder\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "folderName",
        "data_type": "string required, max chars : 250",
        "description": "name of the template folder"
      },
      {
        "name": "folderDesc",
        "data_type": "string optional, max chars : 32000",
        "description": "the description of the folder"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "the id of the department"
      },
      {
        "name": "folderAccessDetails show Attributes",
        "data_type": "object required",
        "description": "the access details of the folder"
      }
    ],
    "Response Example": "-d'{\n  \"folderDesc\" : \"contains details\",\n  \"folderAccessDetails\" : {\n    \"type\" : \"allAgents\"\n  },\n  \"departmentId\" : \"4000000007039\",\n  \"folderName\" : \"New my Folder\"\n}'"
  },
  {
    "Api name": "Getting a single Template Folder",
    "Api URL": "/api/v1/templateFolders/{templateFolder_id}",
    "Api Method": "GET",
    "Desc": "Listing  a particular Template Folder",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/templateFolders/1892000000082079\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"type\" : \"allAgents\"\n  },\n  \"departmentId\" : \"1892000000082069\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Public Email Templates\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"folderId\" : \"1892000000082079\"\n}"
  },
  {
    "Api name": "Updating a Template Folder",
    "Api URL": "/api/v1/templateFolders/{templateFolder_id}",
    "Api Method": "PATCH",
    "Desc": "Updating a Template Folder",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://support.zoho.com/api/v1/templateFolders/4000000043001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"folderName\" : \"NEw Folder\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "folderName",
        "data_type": "string optional, max chars : 250",
        "description": "name of the template folder"
      },
      {
        "name": "folderDesc",
        "data_type": "string optional, max chars : 32000",
        "description": "the description of the folder"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "the id of the department"
      },
      {
        "name": "folderAccessDetails show Attributes",
        "data_type": "object optional",
        "description": "the access details of the folder"
      }
    ],
    "Response Example": "-d'{\n  \"folderName\" : \"NEw Folder\"\n}'"
  },
  {
    "Api name": "Delete Template Folder",
    "Api URL": "/api/v1/templateFolders/{templateFolder_id}",
    "Api Method": "DELETE",
    "Desc": "Delete a Template Folder",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://support.zoho.com/api/v1/templateFolders/1892000000082079?\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "Listing Template Folders",
    "Api URL": "/api/v1/templateFolders",
    "Api Method": "GET",
    "Desc": "List all Template Folders in alphabetical order",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/templateFolders?departmentId=11000000013068&from=1&limit=100&include=emailTemplatesCount\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "the corresponding department to be fetched"
      },
      {
        "name": "from",
        "data_type": "integer required, default : 1, range : 1-1000",
        "description": "from index, DEFAULT 1"
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 1000, range : 1-1000",
        "description": "number of folders to be retrieved Range 1-50, DEFAULT 50"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Meta information related to the template Folder. Values allowed are: smsTemplatesCount , emailTemplatesCount . You can pass multiple values by separating them with commas in the API request."
      }
    ],
    "Response Example": "[ {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : \"2020-05-03T07:46:46.000Z\",\n  \"createdBy\" : \"11000000038001\",\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"restrictedAccess\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : [ \"11000000038001\", \"11000000058011\" ]\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : \"11000000038001\",\n  \"folderName\" : \"aaaa\",\n  \"category\" : \"CUSTOM_FOLDER\",\n  \"createdOn\" : \"2020-05-02T22:59:52.000Z\",\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"1\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000065077\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : \"11000000038001\",\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"restrictedAccess\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : [ \"11000000016526\", \"11000000038001\" ]\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"accesible by agent1\",\n  \"category\" : \"CUSTOM_FOLDER\",\n  \"createdOn\" : \"2020-05-03T07:09:14.000Z\",\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"2\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000070193\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"allAgents\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : null\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Agent Notification\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"13\",\n      \"kbCategory\" : \"10\",\n      \"calls\" : \"4\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"events\" : \"4\",\n      \"tasks\" : \"4\",\n      \"contacts\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000013052\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"allAgents\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : null\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Contact Notification\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"9\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000013048\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"allAgents\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : null\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Public SMS Templates\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"0\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000013046\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"allAgents\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : null\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Secondary Contacts Notification\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"8\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000013054\"\n}, {\n  \"folderDesc\" : null,\n  \"modifiedOn\" : null,\n  \"createdBy\" : null,\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"allAgents\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : null\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : null,\n  \"folderName\" : \"Team Notification\",\n  \"category\" : \"DEFAULT_FOLDER\",\n  \"createdOn\" : null,\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"6\",\n      \"calls\" : \"3\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"events\" : \"3\",\n      \"tasks\" : \"3\",\n      \"contacts\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000013050\"\n}, {\n  \"folderDesc\" : \"tset\",\n  \"modifiedOn\" : \"2020-04-30T13:09:33.000Z\",\n  \"createdBy\" : \"11000000016526\",\n  \"folderAccessDetails\" : {\n    \"teams\" : null,\n    \"roles\" : null,\n    \"type\" : \"restrictedAccess\",\n    \"rolesAndSubordinates\" : null,\n    \"agents\" : [ \"11000000016526\", \"11000000038001\" ]\n  },\n  \"departmentId\" : \"11000000013068\",\n  \"modifiedBy\" : \"11000000016526\",\n  \"folderName\" : \"zzmyfolder\",\n  \"category\" : \"CUSTOM_FOLDER\",\n  \"createdOn\" : \"2020-04-30T10:38:15.000Z\",\n  \"templatesCount\" : [ {\n    \"templateType\" : \"Email\",\n    \"count\" : {\n      \"tickets\" : \"39\",\n      \"calls\" : \"0\",\n      \"solutions\" : \"0\",\n      \"accounts\" : \"0\",\n      \"contacts\" : \"0\",\n      \"tasks\" : \"0\",\n      \"events\" : \"0\",\n      \"products\" : \"0\"\n    }\n  } ],\n  \"folderId\" : \"11000000057021\"\n} ]"
  },
  {
    "Api name": "BugTracker",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Bug tracker related REST API's",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "description",
        "data_type": "string",
        "description": "description of bug"
      },
      {
        "name": "title",
        "data_type": "string",
        "description": "Title of Bug"
      },
      {
        "name": "projectId",
        "data_type": "long",
        "description": "project Id of bug to file"
      },
      {
        "name": "threadId",
        "data_type": "long",
        "description": "threadId"
      },
      {
        "name": "reporterEmail",
        "data_type": "string",
        "description": "Reporter Email"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Linked Tickets by Bug Id",
    "Api URL": "/api/v1/bug/{bugId}/tickets",
    "Api Method": "GET",
    "Desc": "This API fetches support tickets associated with the Bug Id specified in the API request.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/bug/4000000003023/tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
  },
  {
    "Api name": "Ticket Count",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Ticket count refers to the number of tickets raised across all the departments in your help desk.Note:1. Query parameters, especially those of string type, pertaining to count APIs must be URL-encoded.2. New resources added to your help desk might take some time to be indexed for search. Therefore, if API responses do not reflect the updated ticket count, wait for a few minutes and try again.Example of CustomField Data Without URL Encoding:customField1=cf_ModelName:F3z3customField2=cf_phone:9022334455customField3=cf_permanentAddress: Wall StreetExample of CustomField Data with URL Encoding:customField1=cf_ModelName%3AF3z3customField2=cf_phone%3A9022334455customField3=cf_permanentAddress%3AWall%20Street",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get ticket count",
    "Api URL": "/api/v1/ticketsCount",
    "Api Method": "GET",
    "Desc": "This API returns the ticket count of your help desk.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketsCount\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which ticket count must be fetched. If you do not pass this parameter in the API request, ticket count across all departments will be returned."
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to resolve the ticket"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact who raised the ticket"
      },
      {
        "name": "category",
        "data_type": "String optional",
        "description": "Category of the ticket"
      },
      {
        "name": "customField1",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      }
    ],
    "Response Example": "{\n  \"count\" : 200\n}"
  },
  {
    "Api name": "Get ticket count by field",
    "Api URL": "/api/v1/ticketsCountByFieldValues",
    "Api Method": "GET",
    "Desc": "This API returns the ticket count of your help desk, filtered by a specific field.",
    "OAuth Scope": "Desk.search.READ, Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/ticketsCountByFieldValues?field=statusType,status,priority,channel,spam,overDue,escalated\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the department from which ticket count must be fetched. If you do not pass this parameter in the API request, ticket count across all departments will be returned."
      },
      {
        "name": "assigneeId",
        "data_type": "long optional",
        "description": "ID of the agent assigned to resolve the ticket"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "ID of the contact who raised the ticket"
      },
      {
        "name": "accountId",
        "data_type": "long optional",
        "description": "ID of the account to which the ticket is mapped"
      },
      {
        "name": "category",
        "data_type": "String optional",
        "description": "Category of the ticket"
      },
      {
        "name": "customField1",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "customField2",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "customField3",
        "data_type": "String optional",
        "description": "User-defined field in the ticket"
      },
      {
        "name": "createdTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "modifiedTimeRange",
        "data_type": "timestamp optional",
        "description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; For example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
      },
      {
        "name": "field",
        "data_type": "String required",
        "description": "Field by which the ticket count must be filtered. Values allowed are. status, priority, channel, statusType, spam, escalated, overDue"
      }
    ],
    "Response Example": "{\n  \"overDue\" : 2,\n  \"statusType\" : [ {\n    \"count\" : \"13\",\n    \"value\" : \"OPEN\"\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"ONHOLD\"\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"CLOSED\"\n  } ],\n  \"escalated\" : 10,\n  \"channel\" : [ {\n    \"count\" : \"6\",\n    \"value\" : \"twitter\"\n  }, {\n    \"count\" : \"3\",\n    \"value\" : \"forums\"\n  }, {\n    \"count\" : \"2\",\n    \"value\" : \"chat\"\n  }, {\n    \"count\" : \"2\",\n    \"value\" : \"web\"\n  } ],\n  \"priority\" : [ {\n    \"count\" : \"8\",\n    \"value\" : \"high\"\n  }, {\n    \"count\" : \"5\",\n    \"value\" : \"medium\"\n  } ],\n  \"spam\" : 10,\n  \"status\" : [ {\n    \"count\" : \"9\",\n    \"value\" : \"open\"\n  }, {\n    \"count\" : \"4\",\n    \"value\" : \"escalated\"\n  } ]\n}"
  },
  {
    "Api name": "Jira",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Jira, developed by Atlassian, is one of the leading bug-tracking tools in the industry. Jira’s integration with Zoho Desk helps in instantly filing issues in Jira right from a customer support ticket in Desk. These APIs pertain to the integration between these tools.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get Linked Tickets by Jira Issue Id",
    "Api URL": "/api/v1/jiraIssue/{issueId}/tickets",
    "Api Method": "GET",
    "Desc": "This API fetches support tickets associated with the Jira issue specified in the API request.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/jiraIssue/190176/tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "long optional",
        "description": "Start index"
      },
      {
        "name": "limit",
        "data_type": "long optional, range : 1-100",
        "description": "length of the response"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"assignee\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"John\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"Smith\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
  },
  {
    "Api name": "Badgification",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Gamification refers to the concept of applying game-based practices, principles, and incentives for non-game activities in any environment. This is generally done in the form of providing points, virtual badges and trophies, and so on to individuals who show deep involvement in the activity. In Zoho Desk, gamification is currently available in the user community. End-customers who actively participate in community forum discussions receive badges and credits and move up from one level to the next when they fulfill certain conditions. The expected outcome of gamification in this context is more solutions from customers and lesser burden on support agents.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List badges",
    "Api URL": "/api/v1/badges",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of default and custom badges, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/badges\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number starting from which the badges must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of badges to list"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 100",
        "description": "Type of badge: default or custom"
      }
    ],
    "Response Example": "[ {\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Best Contributor\",\n  \"levelName\" : null,\n  \"id\" : \"1\",\n  \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n} ]"
  },
  {
    "Api name": "Add badge",
    "Api URL": "/api/v1/badges",
    "Api Method": "POST",
    "Desc": "This API adds a badge to your user community.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/badges\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"Best Contributor\",\n  \"defaultIconId\" : \"1\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the badge"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the badge"
      },
      {
        "name": "isCustom",
        "data_type": "boolean required",
        "description": "Key that specifies if the badge is user-defined or not"
      },
      {
        "name": "customIconId",
        "data_type": "int optional",
        "description": "ID of the file attachment that contains the badge icon"
      },
      {
        "name": "defaultIconId",
        "data_type": "int optional",
        "description": "ID of the default icon"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"Best Contributor\",\n  \"defaultIconId\" : \"1\"\n}'"
  },
  {
    "Api name": "Update badge",
    "Api URL": "/api/v1/badges/([0-9]+)",
    "Api Method": "PUT",
    "Desc": "This API updates the details of a badge.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/badges/3000000000010\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Badge 2\",\n  \"description\" : \"Top Contributor\",\n  \"customIconId\" : \"3000000000017\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the badge"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the badge"
      },
      {
        "name": "customIconId",
        "data_type": "int optional",
        "description": "ID of the file attachment that contains the badge icon"
      },
      {
        "name": "defaultIconId",
        "data_type": "int optional",
        "description": "ID of the default icon"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Badge 2\",\n  \"description\" : \"Top Contributor\",\n  \"customIconId\" : \"3000000000017\"\n}'"
  },
  {
    "Api name": "Delete badge",
    "Api URL": "/api/v1/badges/([0-9]+)",
    "Api Method": "DELETE",
    "Desc": "This API deletes a badge from the user community.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/badges/3000000000010\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List levels",
    "Api URL": "/api/v1/levels",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of levels, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/levels\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number, starting from which the levels must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of limits to list"
      }
    ],
    "Response Example": "[ {\n  \"badge\" : {\n    \"name\" : \"Best Contributor\",\n    \"id\" : \"3000000000345\",\n    \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n  },\n  \"pointsToReach\" : \"200\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\",\n  \"id\" : \"3000000000335\"\n} ]"
  },
  {
    "Api name": "Add level",
    "Api URL": "/api/v1/levels",
    "Api Method": "POST",
    "Desc": "This API adds a level to the user community.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/levels\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"pointsToReach\" : \"200\",\n  \"badgeId\" : \"3000000000345\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the level"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the level"
      },
      {
        "name": "badgeId",
        "data_type": "long optional",
        "description": "ID of the badge to associate with the level"
      },
      {
        "name": "pointsToReach",
        "data_type": "double required",
        "description": "Minimum number of credits a user needs to reach the level"
      }
    ],
    "Response Example": "-d'{\n  \"pointsToReach\" : \"200\",\n  \"badgeId\" : \"3000000000345\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\"\n}'"
  },
  {
    "Api name": "Update level",
    "Api URL": "/api/v1/levels/([0-9]+)",
    "Api Method": "PUT",
    "Desc": "This API updates the details of a level.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/levels/3000000000345\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"pointsToReach\" : \"300\",\n  \"name\" : \"Level 2\",\n  \"description\" : \"Beginner\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the level"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the level"
      },
      {
        "name": "badgeId",
        "data_type": "long optional",
        "description": "ID of the badge to associate with the level"
      },
      {
        "name": "pointsToReach",
        "data_type": "double required",
        "description": "Minimum number of credits a user needs to reach the level"
      }
    ],
    "Response Example": "-d'{\n  \"pointsToReach\" : \"300\",\n  \"name\" : \"Level 2\",\n  \"description\" : \"Beginner\"\n}'"
  },
  {
    "Api name": "Delete level",
    "Api URL": "/api/v1/levels/([0-9]+)",
    "Api Method": "DELETE",
    "Desc": "This API deletes a level from the user community.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/levels/3000000000345\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List creditworthy activities",
    "Api URL": "/api/v1/credits",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of creditworthy activities, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/credits\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number, starting from which the activities must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of activities to list"
      },
      {
        "name": "type",
        "data_type": "string optional, max chars : 100",
        "description": "Type of creditworthy activity: default of custom"
      }
    ],
    "Response Example": "[ {\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Post Idea\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Post an Idea to get 100 points\",\n  \"id\" : \"3000000000315\",\n  \"points\" : \"100\"\n}, {\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Post Question\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Post a Question to get 50 points\",\n  \"id\" : \"3000000000320\",\n  \"points\" : \"50\"\n} ]"
  },
  {
    "Api name": "Add creditworthy activity",
    "Api URL": "/api/v1/credits",
    "Api Method": "POST",
    "Desc": "This API adds a creditworthy activity to the user community.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/credits\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Custom Credit\",\n  \"description\" : \"This is given to the people who have attended Webinar\",\n  \"points\" : \"100\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the creditworthy activity"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the creditworthy activity"
      },
      {
        "name": "points",
        "data_type": "double required",
        "description": "Number of credits associated with the activity"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Custom Credit\",\n  \"description\" : \"This is given to the people who have attended Webinar\",\n  \"points\" : \"100\"\n}'"
  },
  {
    "Api name": "Update creditworthy activity",
    "Api URL": "/api/v1/credits/([0-9]+)",
    "Api Method": "PUT",
    "Desc": "This API updates a creditworthy activity.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PUT\nhttps://desk.zoho.com/api/v1/credits/3000000000335\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Active User\",\n  \"description\" : \"This is given to the people who are active\",\n  \"points\" : \"200\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string required, max chars : 200",
        "description": "Name of the creditworthy activity"
      },
      {
        "name": "description",
        "data_type": "string optional, max chars : 200",
        "description": "Description of the creditworthy activity"
      },
      {
        "name": "isEnabled",
        "data_type": "boolean optional",
        "description": "Key that specifies if the activity is enabled or not"
      },
      {
        "name": "points",
        "data_type": "double required",
        "description": "Number of credits associated with the activity"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Active User\",\n  \"description\" : \"This is given to the people who are active\",\n  \"points\" : \"200\"\n}'"
  },
  {
    "Api name": "Delete creditworthy activity",
    "Api URL": "/api/v1/credits/([0-9]+)",
    "Api Method": "DELETE",
    "Desc": "This API deletes a creditworthy activity from the user community.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/credits/3000000000375\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "200"
  },
  {
    "Api name": "List credit holders",
    "Api URL": "/api/v1/credits/([0-9]+)/users",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users with credits, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/credits/3000000000435/users\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of users to list"
      }
    ],
    "Response Example": "{\n  \"users\" : [ {\n    \"name\" : \"Jade Tywin\",\n    \"id\" : \"3000000000485\"\n  }, {\n    \"name\" : \"Steve\",\n    \"id\" : \"3000000000487\"\n  } ]\n}"
  },
  {
    "Api name": "Add credit holders",
    "Api URL": "/api/v1/credits/([0-9]+)/associateUsers",
    "Api Method": "POST",
    "Desc": "This API adds the users specified in the request to the credit holders list.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/credits/3000000000300/associateUsers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3000000000985\", \"3000000000485\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users who must be added as credit holders"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3000000000985\", \"3000000000485\" ]\n}'"
  },
  {
    "Api name": "Remove credit holders",
    "Api URL": "/api/v1/credits/([0-9]+)/dissociateUsers",
    "Api Method": "POST",
    "Desc": "This API removes users from the custom holders list.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/credits/3000000000300/dissociateUsers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3000000000885\", \"3000000000495\", \"3000000000285\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users who must be added as credit holders"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3000000000885\", \"3000000000495\", \"3000000000285\" ]\n}'"
  },
  {
    "Api name": "List badge holders",
    "Api URL": "/api/v1/badges/([0-9]+)/users",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of users with badges, based on the limit defined.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/badges/3000000000185/users\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "Integer required, default : 1, range : >0",
        "description": "Index number, starting from which the users must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer required, default : 10, range : 1-100",
        "description": "Number of users to list"
      }
    ],
    "Response Example": "{\n  \"users\" : [ {\n    \"name\" : \"Jade Tywin\",\n    \"id\" : \"3000000000455\"\n  }, {\n    \"name\" : \"Steve\",\n    \"id\" : \"3000000000385\"\n  } ]\n}"
  },
  {
    "Api name": "Add badge holders",
    "Api URL": "/api/v1/badges/([0-9]+)/associateUsers",
    "Api Method": "POST",
    "Desc": "This API adds the users specified in the request to the badge holders list.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/badges/3000000000375/associateUsers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3000000000378\", \"3000000000395\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users who must be added as badge holders"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3000000000378\", \"3000000000395\" ]\n}'"
  },
  {
    "Api name": "Remove badge holders",
    "Api URL": "/api/v1/badges/([0-9]+)/dissociateUsers",
    "Api Method": "POST",
    "Desc": "This API removes users from the badge holders list.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/badges/3000000000893/dissociateUsers\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"userIds\" : [ \"3000000000813\", \"3000000000193\", \"3000000000903\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "userIds",
        "data_type": "list required",
        "description": "IDs of the users who must be added as badge holders"
      }
    ],
    "Response Example": "-d'{\n  \"userIds\" : [ \"3000000000813\", \"3000000000193\", \"3000000000903\" ]\n}'"
  },
  {
    "Api name": "List available icons",
    "Api URL": "/api/v1/availableBadgeIcons",
    "Api Method": "GET",
    "Desc": "This API lists all icons that are not assigned to any badges in the user community.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/availableBadgeIcons\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "[ {\n  \"id\" : \"3000000000234\",\n  \"iconUrl\" : \"https://www.zylker.com/pic1.jpg\"\n}, {\n  \"id\" : \"3000000000722\",\n  \"iconUrl\" : \"https://www.zylker.com/pic2.jpg\"\n} ]"
  },
  {
    "Api name": "HolidayList",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Holiday list refers to the list of public holidays applicable to your help desk. In Zoho Desk, you can configure multiple holiday lists, based on the regions you cater to. Holiday lists are factored in calculating the due time for responding to and resolving tickets. They play a critical role in time tracking and SLAs. You can associate a holiday list with multiple business hour sets, but each business hour set can include only one holiday list.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the holiday list"
      },
      {
        "name": "holidays show Attributes",
        "data_type": "list",
        "description": "Holidays to define in the list"
      },
      {
        "name": "holidayName",
        "data_type": "String",
        "description": "Name of the holiday"
      },
      {
        "name": "from",
        "data_type": "String",
        "description": "Starting date of the holiday, defined in the mm-dd format"
      },
      {
        "name": "to",
        "data_type": "String",
        "description": "Ending date of the holiday, defined in the mm-dd format"
      },
      {
        "name": "status",
        "data_type": "String",
        "description": "Activation status of the holiday list. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "associatedBusinessHourIds show Attributes",
        "data_type": "list",
        "description": "IDs of the business hour sets associated with the holiday list"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create holiday list",
    "Api URL": "/api/v1/holidayList",
    "Api Method": "POST",
    "Desc": "This API creates a holiday list in your help desk portal",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/holidayList\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000101005\", \"4000000103001\" ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"name\" : \"My Company Holidays\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the holiday list"
      },
      {
        "name": "holidays",
        "data_type": "list required",
        "description": "Holidays to define in the list"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Activation status of the holiday list. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "associatedBusinessHourIds",
        "data_type": "list optional",
        "description": "IDs of the business hour sets associated with the holiday list"
      }
    ],
    "Response Example": "-d'{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000101005\", \"4000000103001\" ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"name\" : \"My Company Holidays\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "Get holiday list",
    "Api URL": "/api/v1/holidayList/{holidayListId}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a holiday list configured in your help desk portal",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/holidayList/4000000191371\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"associatedBusinessHours\" : [ {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101003\",\n    \"businessHourName\" : \"UK Day Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101005\",\n    \"businessHourName\" : \"Indian Night Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000103001\",\n    \"businessHourName\" : \"UK Night Shift\"\n  } ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"createdBy\" : \"4000000016079\",\n  \"name\" : \"My Company Holidays\",\n  \"createdTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000191371\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update holiday list",
    "Api URL": "/api/v1/holidayList/{holidayListId}",
    "Api Method": "PATCH",
    "Desc": "This API updates the details of a holiday list configured in your help desk portal",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/holidayList/6000000045009\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000103001\" ],\n  \"name\" : \"My Holidays\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the holiday list"
      },
      {
        "name": "holidays",
        "data_type": "list optional",
        "description": "Holidays to define in the list"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the holiday list. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "associatedBusinessHourIds",
        "data_type": "list optional",
        "description": "IDs of the business hour sets associated with the holiday list"
      }
    ],
    "Response Example": "-d'{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000103001\" ],\n  \"name\" : \"My Holidays\"\n}'"
  },
  {
    "Api name": "Delete holiday list",
    "Api URL": "/api/v1/holidayList/{holidayListId}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a holiday list from your help desk portal",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/holidayList/4000000191371\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "List holiday lists",
    "Api URL": "/api/v1/holidayList",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of holiday lists, based on the limit specified",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/holidayList\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the holiday lists must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of holiday lists to list"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Activation status of the holiday list. Values allowed are ACTIVE and INACTIVE"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-12-10T10:48:48.772Z\",\n    \"associatedBusinessHours\" : [ {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000101003\",\n      \"businessHourName\" : \"UK Day Shift\"\n    }, {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000103001\",\n      \"businessHourName\" : \"UK Night Shift\"\n    }, {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000101005\",\n      \"businessHourName\" : \"Indian Night Shift\"\n    } ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"My Company Holidays\",\n    \"createdTime\" : \"2018-12-10T10:48:48.772Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000191456\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-10T10:35:36.071Z\",\n    \"associatedBusinessHours\" : [ ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"My Holidays\",\n    \"createdTime\" : \"2018-12-10T10:35:36.071Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000191337\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T14:56:17.481Z\",\n    \"associatedBusinessHours\" : [ ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"Overlapping Holidays\",\n    \"createdTime\" : \"2018-12-03T13:27:30.454Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000117001\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:54.223Z\",\n    \"associatedBusinessHours\" : [ {\n      \"businessHourStatus\" : \"INACTIVE\",\n      \"businessHourId\" : \"4000000101009\",\n      \"businessHourName\" : \"Indian Shift\"\n    } ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"General HolidayList\",\n    \"createdTime\" : \"2018-11-28T13:04:53.327Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000105030\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Notification",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Notifications are automated messages that alert end-users, including contacts and agents, of any support-related activities or updates",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId see documentation",
        "data_type": "Long",
        "description": "ID of the department in which the notification is configured"
      },
      {
        "name": "departmentName",
        "data_type": "String",
        "description": "Name of the department in which the notification is configured"
      },
      {
        "name": "channel",
        "data_type": "String",
        "description": "Channel through which the ticket was received"
      },
      {
        "name": "ticketNumber",
        "data_type": "String",
        "description": "Serial number of the ticket in the help desk portal"
      },
      {
        "name": "ticketId",
        "data_type": "Long",
        "description": "ID of the ticket"
      },
      {
        "name": "subject",
        "data_type": "String",
        "description": "Subject of the ticket"
      },
      {
        "name": "threadId",
        "data_type": "Long",
        "description": "ID of the thread"
      },
      {
        "name": "errorMessage",
        "data_type": "String",
        "description": "Error message in the email delivery failure thread"
      },
      {
        "name": "reason",
        "data_type": "String",
        "description": "Reason for email delivery failure"
      },
      {
        "name": "assignee show Attributes",
        "data_type": "object",
        "description": "Agent assigned to resolve the ticket"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "First name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Last name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the profile photo of the user. The ZohoContacts.userphoto.READ OAuth scope is mandatory to access this resource."
      },
      {
        "name": "requester show Attributes",
        "data_type": "object",
        "description": "Details of user who requested for the approval"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "ID of the user"
      },
      {
        "name": "firstName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "lastName",
        "data_type": "string",
        "description": "Name of the user"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email ID of the user"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "URL to access the photo of the user You need ZohoContacts.userphoto.READ OAuth Scope to access this API."
      },
      {
        "name": "description",
        "data_type": "String",
        "description": "Description of the approval"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List email delivery failure alerts",
    "Api URL": "/api/v1/emailFailureAlerts",
    "Api Method": "GET",
    "Desc": "This API lists the email delivery failure alerts configured in a particular department.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/emailFailureAlerts?department=1892000000056007&from=1&limit=20\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "department",
        "data_type": "String required",
        "description": "ID of the department from which the email delivery failure alerts must be fetched. You can pass a specific department ID or allDepartment in the API request."
      },
      {
        "name": "from",
        "data_type": "Integer optional",
        "description": "Index number, starting from which the alerts must be listed"
      },
      {
        "name": "limit",
        "data_type": "Integer optional, range : 1-50",
        "description": "Number of alerts to list"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"departmentName\" : \"Sales\",\n    \"threadId\" : \"4000002350527\",\n    \"ticketNumber\" : \"102\",\n    \"reason\" : \"452 4.3.1 Temporary System Error\",\n    \"subject\" : \"zPhone not working\",\n    \"departmentId\" : \"4000000019077\",\n    \"channel\" : \"EMAIL\",\n    \"errorMessage\" : \"Error while processing the request! Unable to send message;\",\n    \"assignee\" : {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"ticketId\" : \"4000000014345\"\n  }, {\n    \"departmentName\" : \"Marketing\",\n    \"threadId\" : \"4000002353427\",\n    \"ticketNumber\" : \"102\",\n    \"reason\" : \"Email reply failed from being sent! Momentary issues with the mail server, Try resending this email again.\",\n    \"subject\" : \"zPhone not working\",\n    \"departmentId\" : \"4000000019067\",\n    \"channel\" : \"TWITTER\",\n    \"errorMessage\" : \"null\",\n    \"assignee\" : {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"ticketId\" : \"4000000014335\"\n  } ]\n}"
  },
  {
    "Api name": "Clear email delivery failure alerts",
    "Api URL": "/api/v1/emailFailureAlerts",
    "Api Method": "PATCH",
    "Desc": "This API deletes all email delivery failure alerts configured in a particular department.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/emailFailureAlerts?department=1892000000056007\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "department",
        "data_type": "String required",
        "description": "ID of the department from which the email delivery failure alerts must be deleted. You can pass a specific department ID or allDepartment in the API request"
      }
    ],
    "Response Example": "204"
  },
  {
    "Api name": "Get my pending approvals",
    "Api URL": "/api/v1/myPendingApprovals",
    "Api Method": "GET",
    "Desc": "This API lists the pending approvals for a given user",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/myPendingApprovals?department=1892000000056007&from=10&limit=20\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the pending approvals for a give user must be fetched."
      },
      {
        "name": "department",
        "data_type": "String required",
        "description": "ID of the department from which pending approvals must be fetched. You can pass a specific department ID or allDepartment in the API request."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 10, range : 1-100",
        "description": "Number of pending approvals to list"
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: createdTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      }
    ],
    "Response Example": "{\n  \"myPendingApprovals\" : [ {\n    \"departmentName\" : \"Sales\",\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Smith\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n      \"id\" : \"5000000012902\",\n      \"email\" : null\n    },\n    \"ticketNumber\" : \"102\",\n    \"subject\" : \"Sample subject\",\n    \"departmentId\" : \"4000000019077\",\n    \"createdTime\" : \"2019-06-21T13:16:14.000Z\",\n    \"description\" : \"Sample description\",\n    \"id\" : \"4000002350527\",\n    \"ticketId\" : \"4000002350527\"\n  }, {\n    \"departmentName\" : \"Marketing\",\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"John\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012932/photo\",\n      \"id\" : \"5000000012932\",\n      \"email\" : null\n    },\n    \"ticketNumber\" : \"102\",\n    \"subject\" : \"Sample subject\",\n    \"departmentId\" : \"4000000019067\",\n    \"createdTime\" : \"2019-06-21T13:16:14.000Z\",\n    \"description\" : \"\",\n    \"id\" : \"4000002350527\",\n    \"ticketId\" : \"4000000014335\"\n  } ],\n  \"assignee\" : {\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Carol\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n    \"id\" : \"1892000000056007\",\n    \"email\" : \"carol@zylker.com\"\n  }\n}"
  },
  {
    "Api name": "Data Sharing Rules",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Data sharing rules refer to user permissions related to viewing and/or editing resources in the different modules in Zoho Desk.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contracts",
        "data_type": "string",
        "description": "Data sharing rules related to SLA contracts"
      },
      {
        "name": "tickets",
        "data_type": "string",
        "description": "Data sharing rules related to tickets"
      },
      {
        "name": "contacts",
        "data_type": "string",
        "description": "Data sharing rules related to contacts"
      },
      {
        "name": "accounts",
        "data_type": "string",
        "description": "Data sharing rules related to accounts"
      },
      {
        "name": "products",
        "data_type": "string",
        "description": "Data sharing rules related to products"
      },
      {
        "name": "tasks",
        "data_type": "string",
        "description": "Data sharing rules related to tasks"
      },
      {
        "name": "calls",
        "data_type": "string",
        "description": "Data sharing rules related to calls"
      },
      {
        "name": "events",
        "data_type": "string",
        "description": "Data sharing rules related to events"
      },
      {
        "name": "cm_[a-zA-Z0-9_]+",
        "data_type": "string",
        "description": "Data sharing rules related to custom module"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get data sharing rules",
    "Api URL": "/api/v1/dataSharingRules",
    "Api Method": "GET",
    "Desc": "This API fetches the different data sharing rules configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/dataSharingRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"tickets\" : \"public\",\n  \"calls\" : \"public read only\",\n  \"accounts\" : \"public read only\",\n  \"contracts\" : \"private\",\n  \"contacts\" : \"public\",\n  \"tasks\" : \"private\",\n  \"events\" : \"public\",\n  \"products\" : \"public\"\n}"
  },
  {
    "Api name": "Update data sharing rules",
    "Api URL": "/api/v1/dataSharingRules",
    "Api Method": "PATCH",
    "Desc": "This API updates the data sharing rules configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/dataSharingRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"tickets\" : \"public\",\n  \"calls\" : \"public read only\",\n  \"accounts\" : \"public read only\",\n  \"contracts\" : \"private\",\n  \"contacts\" : \"public\",\n  \"tasks\" : \"private\",\n  \"events\" : \"public\",\n  \"products\" : \"public\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contracts",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to SLA contracts"
      },
      {
        "name": "tickets",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to tickets"
      },
      {
        "name": "contacts",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to contacts"
      },
      {
        "name": "accounts",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to accounts"
      },
      {
        "name": "products",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to products"
      },
      {
        "name": "tasks",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to tasks"
      },
      {
        "name": "calls",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to calls"
      },
      {
        "name": "events",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to events"
      },
      {
        "name": "cm_[a-zA-Z0-9_]+",
        "data_type": "string optional, max chars : 100",
        "description": "Data sharing rules related to custom module"
      }
    ],
    "Response Example": "-d'{\n  \"tickets\" : \"public\",\n  \"calls\" : \"public read only\",\n  \"accounts\" : \"public read only\",\n  \"contracts\" : \"private\",\n  \"contacts\" : \"public\",\n  \"tasks\" : \"private\",\n  \"events\" : \"public\",\n  \"products\" : \"public\"\n}'"
  },
  {
    "Api name": "Finance",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Finance related REST API's",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Update estimate status",
    "Api URL": "/api/v1/zohoFinance/{financeService}/estimates/{id}",
    "Api Method": "PATCH",
    "Desc": "This will update status of estimate.",
    "OAuth Scope": "Desk.integrations.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/zohoFinance/books/estimates/1332784000000108001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"status\" : \"draft\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "status to be updated"
      }
    ],
    "Response Example": "-d'{\n  \"status\" : \"draft\"\n}'"
  },
  {
    "Api name": "List invoices",
    "Api URL": "/api/v1/zohoFinance/{financeService}/invoices",
    "Api Method": "GET",
    "Desc": "To list invoices.",
    "OAuth Scope": "Desk.integrations.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/zohoFinance/books/invoices\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "deskEntityId",
        "data_type": "long optional",
        "description": "To fetch invoice by desk contact or account or ticket id"
      },
      {
        "name": "deskModuleName",
        "data_type": "String required",
        "description": "Desk Module Name:  Contacts or Cases or Accounts"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Department Id"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "To fetch invoice by status, Available status are sent, draft, overdue, paid, void, unpaid, partially_paid and viewed"
      },
      {
        "name": "pageNumber",
        "data_type": "integer optional",
        "description": "page number"
      }
    ],
    "Response Example": "{\n  \"deskEntityId\" : \"5000000014010\",\n  \"data\" : [ {\n    \"date\" : \"2018-09-23\",\n    \"total\" : 117,\n    \"isViewdByClient\" : false,\n    \"totalFormatted\" : \"AED117.00\",\n    \"invoiceNumber\" : \"INV-000025\",\n    \"id\" : \"1332784000000108001\",\n    \"dateFormatted\" : \"23 Sep 2018\",\n    \"currencyCode\" : \"AED\",\n    \"statusFormatted\" : \"Draft\",\n    \"status\" : \"draft\"\n  } ],\n  \"deskModuleName\" : \"Contacts\"\n}"
  },
  {
    "Api name": "Update invoice status",
    "Api URL": "/api/v1/zohoFinance/{financeService}/invoices/{id}",
    "Api Method": "PATCH",
    "Desc": "This will  update status of invoice.",
    "OAuth Scope": "Desk.integrations.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/zohoFinance/books/invoices/1332784000000108001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"status\" : \"draft\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "status to be updated"
      }
    ],
    "Response Example": "-d'{\n  \"status\" : \"draft\"\n}'"
  },
  {
    "Api name": "MarkAllInvoicesSent",
    "Api URL": "/api/v1/zohoFinance/{financeService}/invoices/markAsSent",
    "Api Method": "POST",
    "Desc": "This will update status of invoice to sent.",
    "OAuth Scope": "Desk.integrations.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/zohoFinance/books/invoices/markAsSent\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"1332784000000108001\", \"1332784000000108004\", \"1332784000000108006\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "JSONArray optional",
        "description": "id of the invoice or estimate"
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"1332784000000108001\", \"1332784000000108004\", \"1332784000000108006\" ]\n}'"
  },
  {
    "Api name": "List estimates",
    "Api URL": "/api/v1/zohoFinance/{financeService}/estimates",
    "Api Method": "GET",
    "Desc": "To list estimates.",
    "OAuth Scope": "Desk.integrations.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/zohoFinance/books/estimates\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "deskEntityId",
        "data_type": "long optional",
        "description": "To fetch estimates by desk contact or account or ticket id"
      },
      {
        "name": "deskModuleName",
        "data_type": "String required",
        "description": "Desk Module Name. allowed modules are Contacts, Cases, Accounts"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "To fetch estimates by status, Available status are draft, sent, invoiced , accepted, declined and expired"
      },
      {
        "name": "pageNumber",
        "data_type": "integer optional",
        "description": "page number"
      }
    ],
    "Response Example": "{\n  \"deskEntityId\" : \"5000000014010\",\n  \"data\" : [ {\n    \"date\" : \"2018-09-23\",\n    \"total\" : 117,\n    \"isViewdByClient\" : false,\n    \"estimateNumber\" : \"INV-000025\",\n    \"totalFormatted\" : \"AED117.00\",\n    \"id\" : \"1332784000000108001\",\n    \"dateFormatted\" : \"23 Sep 2018\",\n    \"currencyCode\" : \"AED\",\n    \"statusFormatted\" : \"Draft\",\n    \"status\" : \"draft\"\n  } ],\n  \"deskModuleName\" : \"Contacts\"\n}"
  },
  {
    "Api name": "Get tickets for invoices",
    "Api URL": "/api/v1/finance/invoices/{id}/tickets",
    "Api Method": "GET",
    "Desc": "To get associated tickets for invoice id.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/finance/invoices/7388387778738/tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"assignee\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"John\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"Smith\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
  },
  {
    "Api name": "agentAvailability",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Agent availability refers to your support agents' presence for responding to customers.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Update Agent Availability Configuration",
    "Api URL": "/api/v1/agentAvailabilityConfig",
    "Api Method": "POST",
    "Desc": "This API updates the agent availability setting configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE, Desk.basic.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agentAvailabilityConfig\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentIdleTime\" : \"30\",\n  \"treatIdleAgentsAsOffline\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "treatIdleAgentsAsOffline",
        "data_type": "boolean optional",
        "description": "Key that specifies if idle agents should be marked as offline after a particular duration."
      },
      {
        "name": "agentIdleTime",
        "data_type": "int optional, range : 1-540",
        "description": "Duration after which idle agents should be marked as offline. The value can range from 1 to 540."
      }
    ],
    "Response Example": "-d'{\n  \"agentIdleTime\" : \"30\",\n  \"treatIdleAgentsAsOffline\" : true\n}'"
  },
  {
    "Api name": "Get Agent Availability Configuration",
    "Api URL": "/api/v1/agentAvailabilityConfig",
    "Api Method": "GET",
    "Desc": "This API fetches the agent availability setting configured in your help desk portal.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agentAvailabilityConfig\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"agentIdleTime\" : \"30\",\n  \"treatIdleAgentsAsOffline\" : true\n}"
  },
  {
    "Api name": "Get Current Availability",
    "Api URL": "api/v1/agentAvailability",
    "Api Method": "GET",
    "Desc": "This API lists the current availability of agents in a particular department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agentAvailability?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as -1 ."
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Key that includes additional, channel-specific information. Values allowed are: mailStatus , phoneStatus , phoneMode , chatStatus , and presenceStatus ."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 50, range : 1-50",
        "description": "Number of agents to list. The default and the maximum value allowed is 50."
      },
      {
        "name": "from",
        "data_type": "integer required, default : 0, range : 1-5999",
        "description": "Index number, starting from which the agents must be fetched. The default value is 0 and the maximum value allowed is 5999."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"OFFLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"OFFLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"OFFLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
  },
  {
    "Api name": "Get Online Agents",
    "Api URL": "api/v1/onlineAgents",
    "Api Method": "GET",
    "Desc": "This API lists the agents who are currently online in a particular department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/onlineAgents?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as -1 ."
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Key that includes additional, channel-specific information. Values allowed are: mailStatus , phoneStatus , phoneMode , chatStatus , and presenceStatus ."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 20, range : 1-6000",
        "description": "Number of agents to list. The default value is 20 and the maximum value allowed is 6000."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
  },
  {
    "Api name": "Get Offline Agents",
    "Api URL": "api/v1/offlineAgents",
    "Api Method": "GET",
    "Desc": "This API lists the agents who are currently offline in a particular department.",
    "OAuth Scope": "Desk.settings.READ, Desk.basic.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/offlineAgents?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as -1 ."
      },
      {
        "name": "include",
        "data_type": "String optional",
        "description": "Key that includes additional, channel-specific information. Values allowed are: mailStatus , phoneStatus , phoneMode , chatStatus , and presenceStatus ."
      },
      {
        "name": "limit",
        "data_type": "integer required, default : 20, range : 1-6000",
        "description": "Number of agents to list. The default value is 20 and the maximum value allowed is 6000."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"OFFLINE\",\n    \"status\" : \"OFFLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"OFFLINE\",\n    \"status\" : \"OFFLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
  },
  {
    "Api name": "AutomationFeatureCount",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A Common API to get various limits for Automation Features.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get Automation Feature Count",
    "Api URL": "/api/v1/automationFeatureCount",
    "Api Method": "GET",
    "Desc": "This API is used to Get Automation Feature Limits, For BusinessHours and HoldiayList, There are no mandatory params, For Workflows valid and mandatory params aremoduleanddepartmentId, Valid module param values for Workflows aretickets,contacts,contracts,accounts,tasks,products,timeEntry. For Skills and SkillTyedepartmentIdis mandatory param",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/automationFeatureCount?departmentId=1000000013248&module=tickets&feature=workflows\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Department Id"
      },
      {
        "name": "module",
        "data_type": "String optional",
        "description": "Module, allowed values tickets , contacts , contracts , accounts , tasks , products , timeEntry , events , calls , customModule"
      },
      {
        "name": "feature",
        "data_type": "String required",
        "description": "Feature, allowed values businesshours , holidaylist , Skills , SkillType , workflows , blueprints , automationAlerts , fieldUpdates , automationTasks , customFunctions"
      }
    ],
    "Response Example": "{\n  \"featureName\" : \"workflows\",\n  \"maxTotalCount\" : \"40\",\n  \"maxActiveCount\" : \"20\",\n  \"usedCountInfo\" : {\n    \"usedTotalCount\" : \"3\",\n    \"usedActiveCount\" : \"2\"\n  }\n}"
  },
  {
    "Api name": "Skills",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Skills, They are area of expertises which can be mapped with Tickets and Agents",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String",
        "description": "Name of the skill"
      },
      {
        "name": "description",
        "data_type": "String",
        "description": "description of the skill"
      },
      {
        "name": "status",
        "data_type": "String",
        "description": "Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "skillTypeId",
        "data_type": "long",
        "description": "ID of the Skill Type"
      },
      {
        "name": "criteria show Attributes",
        "data_type": "list",
        "description": "The criteria details for the skill"
      },
      {
        "name": "fieldConditions show Attributes",
        "data_type": "list",
        "description": "The criteria for Skills"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "The field to be added"
      },
      {
        "name": "value show Attributes",
        "data_type": "list",
        "description": "The value of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "The condition involved"
      },
      {
        "name": "fieldModule",
        "data_type": "string",
        "description": "Module of each condition"
      },
      {
        "name": "pattern",
        "data_type": "string",
        "description": "The pattern of criteria"
      },
      {
        "name": "agentIds show Attributes",
        "data_type": "list",
        "description": "IDs of the agents mapped with the skill"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create skill",
    "Api URL": "/api/v1/skills",
    "Api Method": "POST",
    "Desc": "This API Creates a skill",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/skills\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skillTypeId\" : \"1000000173001\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"India\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Phone\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"987532114\" ]\n    } ],\n    \"pattern\" : \"(1or2)\"\n  },\n  \"name\" : \"India\",\n  \"description\" : \"Country is India\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the skill"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "description of the skill"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "skillTypeId",
        "data_type": "long required",
        "description": "ID of the Skill Type"
      },
      {
        "name": "criteria",
        "data_type": "list required",
        "description": "The criteria details for the skill"
      },
      {
        "name": "agentIds",
        "data_type": "list optional",
        "description": "IDs of the agents mapped with the skill"
      }
    ],
    "Response Example": "-d'{\n  \"skillTypeId\" : \"1000000173001\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"India\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Phone\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"987532114\" ]\n    } ],\n    \"pattern\" : \"(1or2)\"\n  },\n  \"name\" : \"India\",\n  \"description\" : \"Country is India\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "View skill",
    "Api URL": "/api/v1/skills/{skillId}",
    "Api Method": "GET",
    "Desc": "This API Gets the details of a skill",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skills/1000000173145\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"agentIds\" : [ \"1000000000059\" ],\n  \"skillType\" : {\n    \"skillTypeId\" : \"1000000173013\",\n    \"skillTypeName\" : \"Language\"\n  },\n  \"orderId\" : \"5\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"displayValue\" : [ \"Malayalam\" ],\n      \"condition\" : \"contains\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"Malayalam\" ]\n    } ],\n    \"pattern\" : \"1\"\n  },\n  \"departmentId\" : \"1000000013248\",\n  \"description\" : \"Language is Malayalam\",\n  \"skillTypeId\" : \"1000000173013\",\n  \"createdBy\" : \"1000000000059\",\n  \"name\" : \"Malayalam\",\n  \"createdTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173145\",\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update skill",
    "Api URL": "/api/v1/skills/{skillId}",
    "Api Method": "PATCH",
    "Desc": "This API Updates a skill",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/skills/1000000173145\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Malayalam\",\n  \"description\" : \"Malayali\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the skill"
      },
      {
        "name": "description",
        "data_type": "String optional",
        "description": "description of the skill"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "skillTypeId",
        "data_type": "long optional",
        "description": "ID of the Skill Type"
      },
      {
        "name": "criteria",
        "data_type": "list optional",
        "description": "The criteria details for the skill"
      },
      {
        "name": "agentIds",
        "data_type": "list optional",
        "description": "IDs of the agents mapped with the skill"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Malayalam\",\n  \"description\" : \"Malayali\"\n}'"
  },
  {
    "Api name": "Delete skill",
    "Api URL": "/api/v1/skills/{skillId}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a skill from your help desk portal",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/skills/6000000033001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "List all skills",
    "Api URL": "/api/v1/skills",
    "Api Method": "GET",
    "Desc": "This API lists all skills in a department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skills?departmentId=1000000013248\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department Id"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the skills must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of skill to list, allowed minimum value 1, maximum value 100,default is 100"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Active inactive filter for Skills. Values allowed are ACTIVE and INACTIVE"
      },
      {
        "name": "searchString",
        "data_type": "String optional",
        "description": "Search string, Used to filter skills by name starting with this string"
      },
      {
        "name": "skillTypeId",
        "data_type": "long optional",
        "description": "Skill Type Id, to Filter Skills by SkillType"
      },
      {
        "name": "skillIds",
        "data_type": "long optional",
        "description": "The IDs of the skills to list separated by commas. You can pass upto 50 IDs."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-07-23T12:44:42.574Z\",\n    \"agentIds\" : [ ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173001\",\n      \"skillTypeName\" : \"Country\"\n    },\n    \"orderId\" : \"1\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"India\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"India\" ]\n      }, {\n        \"displayValue\" : [ \"987532114\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Phone\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"987532114\" ]\n      } ],\n      \"pattern\" : \"(1or2)\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Country is India\",\n    \"skillTypeId\" : \"1000000173001\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"India\",\n    \"createdTime\" : \"2020-07-23T12:44:42.574Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173029\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:03:12.994Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173001\",\n      \"skillTypeName\" : \"Country\"\n    },\n    \"orderId\" : \"2\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Russia\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Russia\" ]\n      }, {\n        \"displayValue\" : [ \"987532114\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Phone\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"987532114\" ]\n      } ],\n      \"pattern\" : \"(1or2)\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Country is Russia\",\n    \"skillTypeId\" : \"1000000173001\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Russia\",\n    \"createdTime\" : \"2020-07-23T13:03:12.994Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173047\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:07:51.838Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"3\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"English\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"English\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Language is English\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"English\",\n    \"createdTime\" : \"2020-07-23T13:07:51.838Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173097\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:08:16.891Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"4\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Tamil\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Tamil\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Language is Tamil\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Tamil\",\n    \"createdTime\" : \"2020-07-23T13:08:16.891Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173121\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:08:36.093Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"5\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Malayalam\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Malayalam\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Malayali\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Malayalam\",\n    \"createdTime\" : \"2020-07-23T13:08:36.093Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173145\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "List associated automation rules",
    "Api URL": "/api/v1/skills/{skillId}/relatedRules",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of automation rules that include a skill,based on the limit specified",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skills/10000000317019/relatedRules\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the related rules must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of rules to list, allowed minimum value 1, maximum value 100,default is 100"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"ruleType\" : \"SUPERVISE\",\n    \"ruleName\" : \"TBA1\",\n    \"ruleId\" : \"6000000019012\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Priority-based SLAs\",\n    \"ruleId\" : \"6000000013508\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Bronze SLAs\",\n    \"ruleId\" : \"6000000013514\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Default Blueprint\",\n    \"ruleId\" : \"6000000016083\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"BH BP\",\n    \"ruleId\" : \"6000000018143\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Third Bp\",\n    \"ruleId\" : \"6000000023018\"\n  } ]\n}"
  },
  {
    "Api name": "Reorder Skills in a Department",
    "Api URL": "/api/v1/skills/order",
    "Api Method": "POST",
    "Desc": "This API lists reorders Skills in a Department",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/skills/order\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skillIds\" : [ \"1000000173121\", \"1000000173029\", \"1000000173047\", \"1000000173097\", \"1000000173145\" ],\n  \"departmentId\" : \"1000000013248\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "skillIds",
        "data_type": "JSONArray required",
        "description": "List of skill ids to reorder"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "department of the skills to be reordered"
      }
    ],
    "Response Example": "-d'{\n  \"skillIds\" : [ \"1000000173121\", \"1000000173029\", \"1000000173047\", \"1000000173097\", \"1000000173145\" ],\n  \"departmentId\" : \"1000000013248\"\n}'"
  },
  {
    "Api name": "Get Skills of an Agent",
    "Api URL": "/api/v1/agents/{agentId}/skills",
    "Api Method": "GET",
    "Desc": "Returns skills mapped with an agent by department",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/agents/1000000003234/skills?departmentIds=10000000030987,10000000038722,10000000030294\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentIds",
        "data_type": "long required",
        "description": "list of Department Ids separated by commas,Maximum 10 department ids allowed"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"French\",\n      \"skillId\" : \"1000000005432\",\n      \"skillTypeId\" : \"1000000019013\"\n    }, {\n      \"skillName\" : \"Blueprint\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"1000000019025\"\n    }, {\n      \"skillName\" : \"Reports\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"1000000019025\"\n    } ],\n    \"departmentId\" : \"10000000030987\"\n  }, {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"Workflow\",\n      \"skillId\" : \"1000000005432\",\n      \"skillTypeId\" : \"1000000019089\"\n    }, {\n      \"skillName\" : \"English\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"100000001342\"\n    } ],\n    \"departmentId\" : \"10000000038722\"\n  }, {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"Malayalam\",\n      \"skillId\" : \"1000000059234\",\n      \"skillTypeId\" : \"100000001421\"\n    }, {\n      \"skillName\" : \"Tamil\",\n      \"skillId\" : \"1000000003967\",\n      \"skillTypeId\" : \"100000001423\"\n    } ],\n    \"departmentId\" : \"10000000030294\"\n  } ]\n}"
  },
  {
    "Api name": "Map Skills in a Department with an Agent",
    "Api URL": "/api/v1/agents/{agentId}/mapSkills",
    "Api Method": "POST",
    "Desc": "This API modifies skills mapped for an agent in a department",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/agents/1000000000059/mapSkills?orgId=15157826\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"skillIds\" : [ \"1000000173047\", \"1000000173121\", \"1000000173029\" ],\n  \"departmentId\" : \"1000000013248\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "ID of the Department"
      },
      {
        "name": "skillIds",
        "data_type": "list optional",
        "description": "Ids of skills to be mapped"
      }
    ],
    "Response Example": "-d'{\n  \"skillIds\" : [ \"1000000173047\", \"1000000173121\", \"1000000173029\" ],\n  \"departmentId\" : \"1000000013248\"\n}'"
  },
  {
    "Api name": "Get Criteria Fields for Skill in a Department",
    "Api URL": "/api/v1/skills/criteriaFields",
    "Api Method": "GET",
    "Desc": "This API returns list of fields supported in criteria for Skills by module",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skills/criteriaFields?orgId=15157826&departmentId=1000000013248&module=tickets\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department Id"
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "Module, Allowed values are tickets , contacts and accounts"
      }
    ],
    "Response Example": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Account Name\",\n      \"i18NLabel\" : \"Account Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Contact Name\",\n      \"i18NLabel\" : \"Contact Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Email\",\n      \"i18NLabel\" : \"Email\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Subject\",\n      \"i18NLabel\" : \"Subject\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Description\",\n      \"i18NLabel\" : \"Description\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"i18NCondition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is ON HOLD\",\n        \"i18NCondition\" : \"is ON HOLD\",\n        \"value\" : [ \"${ONHOLD}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"i18NCondition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case Owner\",\n      \"i18NLabel\" : \"Ticket Owner\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Created By\",\n      \"i18NLabel\" : \"Created By\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Modified By\",\n      \"i18NLabel\" : \"Modified By\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      } ],\n      \"fieldLabel\" : \"Created Time\",\n      \"i18NLabel\" : \"Created Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case On Hold Time\",\n      \"i18NLabel\" : \"Ticket On Hold Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case Closed Time\",\n      \"i18NLabel\" : \"Ticket Closed Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      } ],\n      \"fieldLabel\" : \"Modified Time\",\n      \"i18NLabel\" : \"Modified Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Request Id\",\n      \"i18NLabel\" : \"Ticket Id\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"To Address\",\n      \"i18NLabel\" : \"To Address\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Thread Count\",\n      \"i18NLabel\" : \"Number of Threads\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Comment Count\",\n      \"i18NLabel\" : \"Number of Comments\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"Good\", \"Bad\", \"Okay\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"Good\", \"Bad\", \"Okay\" ]\n      }, {\n        \"condition\" : \"is received\",\n        \"i18NCondition\" : \"is received\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"is not received\",\n        \"i18NCondition\" : \"is not received\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"link provided\",\n        \"i18NCondition\" : \"link provided\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"link not provided\",\n        \"i18NCondition\" : \"link not provided\",\n        \"value\" : [ ]\n      } ],\n      \"fieldLabel\" : \"Happiness Rating\",\n      \"i18NLabel\" : \"Happiness Rating\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"has agents\",\n        \"i18NCondition\" : \"has agents\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Team\",\n      \"i18NLabel\" : \"Team\",\n      \"type\" : \"team\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Due Date\",\n      \"i18NLabel\" : \"Due Date\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Tags\",\n      \"i18NLabel\" : \"Tags\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Priority\",\n      \"i18NLabel\" : \"Priority\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Mode\",\n      \"i18NLabel\" : \"Channel\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Overdue\",\n      \"i18NLabel\" : \"Is Overdue\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Escalated\",\n      \"i18NLabel\" : \"Is Escalated\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Resolution\",\n      \"i18NLabel\" : \"Resolution\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is Less Than\",\n        \"i18NCondition\" : \"is Less Than\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is Greater Than\",\n        \"i18NCondition\" : \"is Greater Than\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Time to Respond\",\n      \"i18NLabel\" : \"Time to Respond\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Skill\",\n      \"i18NLabel\" : \"Skill\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      }, {\n        \"condition\" : \"contain all of\",\n        \"i18NCondition\" : \"contain all of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contain any of\",\n        \"i18NCondition\" : \"contain any of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contain none of\",\n        \"i18NCondition\" : \"contain none of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Skills\",\n      \"i18NLabel\" : \"Skills\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Response Overdue\",\n      \"i18NLabel\" : \"Is Response Overdue\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"during business hours of\",\n        \"i18NCondition\" : \"during business hours of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"outside business hours of\",\n        \"i18NCondition\" : \"outside business hours of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"on a holiday of\",\n        \"i18NCondition\" : \"on a holiday of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"not a holiday of\",\n        \"i18NCondition\" : \"not a holiday of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Execution Time\",\n      \"i18NLabel\" : \"Execution Time\",\n      \"type\" : \"businesshour\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"Public\", \"Private\" ]\n      } ],\n      \"fieldLabel\" : \"Recent Comment Type\",\n      \"i18NLabel\" : \"Recent Comment Type\",\n      \"type\" : \"commenttype\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"contains one of the following words\",\n        \"i18NCondition\" : \"contains one of the following words\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains none of the following words\",\n        \"i18NCondition\" : \"contains none of the following words\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains the string\",\n        \"i18NCondition\" : \"contains the string\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"does not contain the string\",\n        \"i18NCondition\" : \"does not contain the string\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"has @ mentions of\",\n        \"i18NCondition\" : \"has @ mentions of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Recent Comment\",\n      \"i18NLabel\" : \"Recent Comment\",\n      \"type\" : \"comment\"\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "SkillTypes",
    "Api URL": "",
    "Api Method": "",
    "Desc": "SkillType is a Category for grouping skills",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Create Skill Type",
    "Api URL": "/api/v1/skillTypes",
    "Api Method": "POST",
    "Desc": "This API Creates a Skill Type",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/skillTypes\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the skilltype"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "departmentId of the Skill Type"
      }
    ],
    "Response Example": "-d'{\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\"\n}'"
  },
  {
    "Api name": "View Skill Type",
    "Api URL": "/api/v1/skillTypes/{skilTypeId}",
    "Api Method": "GET",
    "Desc": "This API Gets the details of a Skill Type",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skillTypes/1000000173001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"associatedSkills\" : [ {\n    \"skillName\" : \"India\",\n    \"skillId\" : \"1000000173029\",\n    \"skillStatus\" : \"ACTIVE\"\n  }, {\n    \"skillName\" : \"Russia\",\n    \"skillId\" : \"1000000173047\",\n    \"skillStatus\" : \"ACTIVE\"\n  } ],\n  \"createdBy\" : \"1000000000059\",\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\",\n  \"createdTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173001\"\n}"
  },
  {
    "Api name": "Update a Skill Type",
    "Api URL": "/api/v1/skillTypes/{skilTypeId}",
    "Api Method": "PATCH",
    "Desc": "This API Updates a Skill Type",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/skillTypes/4000003016645\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"name\" : \"Product\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the skilltype"
      }
    ],
    "Response Example": "-d'{\n  \"name\" : \"Product\"\n}'"
  },
  {
    "Api name": "Delete a Skill Type",
    "Api URL": "/api/v1/skillTypes/{skilTypeId}",
    "Api Method": "DELETE",
    "Desc": "This API Deletes a Skill Type",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/skillTypes/4000003016645\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "List all Skill Types",
    "Api URL": "/api/v1/skillTypes",
    "Api Method": "GET",
    "Desc": "This API Lists all Skill Types in a department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skillTypes?departmentId=4000003016008\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Department Id"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the skills must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of skilltypes to list, allowed minimum value 1, maximum value 100,default is 100"
      },
      {
        "name": "mappedSkillsStatus",
        "data_type": "String optional",
        "description": "Filter skill types by associated skills status, allowed values ACTIVE and INACTIVE"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-07-23T12:36:44.544Z\",\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"India\",\n      \"skillId\" : \"1000000173029\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Russia\",\n      \"skillId\" : \"1000000173047\",\n      \"skillStatus\" : \"ACTIVE\"\n    } ],\n    \"mappedSkillsStatus\" : [ \"ACTIVE\" ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Country\",\n    \"createdTime\" : \"2020-07-23T12:36:44.544Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173001\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:38:59.455Z\",\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"English\",\n      \"skillId\" : \"1000000173097\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Malayalam\",\n      \"skillId\" : \"1000000173145\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Tamil\",\n      \"skillId\" : \"1000000173121\",\n      \"skillStatus\" : \"INACTIVE\"\n    } ],\n    \"mappedSkillsStatus\" : [ \"INACTIVE\", \"ACTIVE\" ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Language\",\n    \"createdTime\" : \"2020-07-23T12:38:59.455Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173013\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:39:47.900Z\",\n    \"associatedSkills\" : [ ],\n    \"mappedSkillsStatus\" : [ ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Product\",\n    \"createdTime\" : \"2020-07-23T12:39:11.776Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173019\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:38:53.429Z\",\n    \"associatedSkills\" : [ ],\n    \"mappedSkillsStatus\" : [ ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Region\",\n    \"createdTime\" : \"2020-07-23T12:38:53.429Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173007\"\n  } ]\n}"
  },
  {
    "Api name": "SkillConfiguration",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Department Level Configurations for Skill Stamping",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long",
        "description": "ID of the Department"
      },
      {
        "name": "attachSkillsOption",
        "data_type": "string",
        "description": "Append new skills at AT_FIRST or AT_THE_END or BY_SKILL_ORDER"
      },
      {
        "name": "autoSkillStamping",
        "data_type": "string",
        "description": "This indicates Auto Stamping is Active or not, Allowed values ACTIVE or INACTIVE"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Skill Configuration",
    "Api URL": "/api/v1/skillConfiguration",
    "Api Method": "GET",
    "Desc": "This API gets Configuration of Skill in a Department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/skillConfiguration?departmentId=1000000013248\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department Id"
      }
    ],
    "Response Example": "{\n  \"autoSkillStamping\" : \"ACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_THE_END\"\n}"
  },
  {
    "Api name": "Update Skill Configuration",
    "Api URL": "/api/v1/skillConfiguration",
    "Api Method": "PATCH",
    "Desc": "This API updates Configuration of Skill in a Department",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/skillConfiguration\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"autoSkillStamping\" : \"INACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_FIRST\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "ID of the Department"
      },
      {
        "name": "attachSkillsOption",
        "data_type": "string optional, max chars : 100",
        "description": "Append new skills at AT_FIRST or AT_THE_END or BY_SKILL_ORDER"
      },
      {
        "name": "autoSkillStamping",
        "data_type": "string optional, max chars : 100",
        "description": "This indicates Auto Stamping is Active or not, Allowed values ACTIVE or INACTIVE"
      }
    ],
    "Response Example": "-d'{\n  \"autoSkillStamping\" : \"INACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_FIRST\"\n}'"
  },
  {
    "Api name": "RoutingPreference",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Common Configurations for Routing Rules",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long",
        "description": "department Id"
      },
      {
        "name": "isThresholdEnabled",
        "data_type": "boolean",
        "description": "Used to enable/disable ticket threshold for Round Robin"
      },
      {
        "name": "thresholdLimit",
        "data_type": "integer",
        "description": "Threshold Per Agent, Range 1-500,thresholdEnabled has to be True to Update this limit"
      },
      {
        "name": "assignBacklog",
        "data_type": "boolean",
        "description": "Will bulk-assign tickets that were created when agents were unavailable."
      },
      {
        "name": "backLogLimit",
        "data_type": "integer",
        "description": "Max. number of backlog tickets that can be bulk-assigned to an agent. Range 1-50"
      },
      {
        "name": "assignBacklogsBy",
        "data_type": "String",
        "description": "Assign Backlogs Based on Due Date or Created Time, Allowed values DUEDATE and CREATEDTIME"
      },
      {
        "name": "assignToOfflineAgents",
        "data_type": "boolean",
        "description": "Will include mail-channel offline agents also while assigning tickets."
      },
      {
        "name": "freshTicketAssignMode",
        "data_type": "String",
        "description": "Fresh Ticket Assignment Mode, allowed values are IMMEDIATE , MOVE_TO_BACKLOG"
      },
      {
        "name": "isCustomThresholdEnabled",
        "data_type": "boolean",
        "description": "Key that enables or disables agent specific thresholds. The default value is false ."
      },
      {
        "name": "customThresholdVsAgents show Attributes",
        "data_type": "list",
        "description": "List of Agent Specific Thresholds"
      },
      {
        "name": "customThreshold",
        "data_type": "integer",
        "description": "Custom threshold, Min 1 and Max 600"
      },
      {
        "name": "agentIds show Attributes",
        "data_type": "list",
        "description": "List of Agent Ids to set default template"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get Routing Preferences",
    "Api URL": "/api/v1/routingPreferences",
    "Api Method": "GET",
    "Desc": "This API is used to Get the Routing Preferences for a Department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/routingPreferences?departmentId=1000000013248\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department Id"
      }
    ],
    "Response Example": "{\n  \"assignBacklog\" : true,\n  \"assignToOfflineAgents\" : true,\n  \"thresholdLimit\" : \"40\",\n  \"backLogLimit\" : \"5\",\n  \"isThresholdEnabled\" : true,\n  \"departmentId\" : \"1000000013248\",\n  \"assignBacklogsBy\" : \"DUEDATE\",\n  \"freshTicketAssignMode\" : \"IMMEDIATE\",\n  \"customThresholdVsAgents\" : [ {\n    \"customThreshold\" : \"10\",\n    \"agents\" : [ {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000013200/photo?orgId=536339\",\n      \"name\" : \"Fredric\",\n      \"id\" : \"1000000013200\",\n      \"zuid\" : \"538762\"\n    } ]\n  }, {\n    \"customThreshold\" : \"15\",\n    \"agents\" : [ {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000013288/photo?orgId=536339\",\n      \"name\" : \"Baby\",\n      \"id\" : \"1000000013288\",\n      \"zuid\" : \"796851\"\n    }, {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000013299/photo?orgId=536339\",\n      \"name\" : \"Denver\",\n      \"id\" : \"1000000013299\",\n      \"zuid\" : \"538065\"\n    } ]\n  } ],\n  \"isCustomThresholdEnabled\" : true\n}"
  },
  {
    "Api name": "Update Routing Preferences",
    "Api URL": "/api/v1/routingPreferences",
    "Api Method": "PATCH",
    "Desc": "This API is used to Update the Routing Preferences for a Department",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/routingPreferences\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"assignBacklog\" : true,\n  \"isThresholdEnabled\" : \"true\",\n  \"backLogLimit\" : \"22\",\n  \"departmentId\" : \"1000000013248\",\n  \"customThresholdVsAgents\" : [ {\n    \"agentIds\" : [ \"1000000013288\", \"1000000013299\" ],\n    \"customThreshold\" : \"15\"\n  }, {\n    \"agentIds\" : [ \"1000000013200\" ],\n    \"customThreshold\" : \"10\"\n  } ],\n  \"isCustomThresholdEnabled\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "department Id"
      },
      {
        "name": "isThresholdEnabled",
        "data_type": "boolean optional",
        "description": "Used to enable/disable ticket threshold for Round Robin"
      },
      {
        "name": "thresholdLimit",
        "data_type": "integer optional, range : 1-500",
        "description": "Threshold Per Agent, Range 1-500,thresholdEnabled has to be True to Update this limit"
      },
      {
        "name": "assignBacklog",
        "data_type": "boolean optional",
        "description": "Will bulk-assign tickets that were created when agents were unavailable."
      },
      {
        "name": "backLogLimit",
        "data_type": "integer optional, range : 1-50",
        "description": "Max. number of backlog tickets that can be bulk-assigned to an agent. Range 1-50"
      },
      {
        "name": "assignBacklogsBy",
        "data_type": "String optional",
        "description": "Assign Backlogs Based on Due Date or Created Time, Allowed values DUEDATE and CREATEDTIME"
      },
      {
        "name": "assignToOfflineAgents",
        "data_type": "boolean optional",
        "description": "Will include mail-channel offline agents also while assigning tickets."
      },
      {
        "name": "freshTicketAssignMode",
        "data_type": "String optional",
        "description": "Fresh Ticket Assignment Mode, allowed values are IMMEDIATE , MOVE_TO_BACKLOG"
      },
      {
        "name": "isCustomThresholdEnabled",
        "data_type": "boolean optional, default : false",
        "description": "Key that enables or disables agent specific thresholds. The default value is false ."
      }
    ],
    "Response Example": "-d'{\n  \"assignBacklog\" : true,\n  \"isThresholdEnabled\" : \"true\",\n  \"backLogLimit\" : \"22\",\n  \"departmentId\" : \"1000000013248\",\n  \"customThresholdVsAgents\" : [ {\n    \"agentIds\" : [ \"1000000013288\", \"1000000013299\" ],\n    \"customThreshold\" : \"15\"\n  }, {\n    \"agentIds\" : [ \"1000000013200\" ],\n    \"customThreshold\" : \"10\"\n  } ],\n  \"isCustomThresholdEnabled\" : true\n}'"
  },
  {
    "Api name": "Recycle Bin",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The Recycle Bin is the location where deleted resources, such as tickets, contacts, tasks, and time entries among others, are temporarily stored. From this location, users can retrieve resources that may have been accidentally deleted.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids show Attributes",
        "data_type": "list",
        "description": "Array containing the IDs of the resources."
      },
      {
        "name": "isChildNeedToBeRestored",
        "data_type": "boolean",
        "description": "Key that denotes whether the child resources must be restored or not."
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long",
        "description": "ID of the department to which the deleted resources belong."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List deleted resources",
    "Api URL": "api/v1/recycleBin",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of deleted resources, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/recycleBin?include=deletedBy,department\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=0",
        "description": "Index number, starting from which the resources must be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of resources to list. The default value is 10 and the maximum value supported is 100."
      },
      {
        "name": "departmentId see documentation",
        "data_type": "long optional",
        "description": "ID of the department to which the deleted resources belong."
      },
      {
        "name": "sortBy",
        "data_type": "string optional, max chars : 100",
        "description": "Sort by a specific attribute: name , type , department , deletedBy , or deletedTime . The default sorting order is ascending. A - prefix denotes descending order of sorting."
      },
      {
        "name": "module deprecated",
        "data_type": "String optional",
        "description": "Filter by a specific module: accounts , contacts , tickets , tasks , timeEntry , calls , events , contracts , products , topics , or solutions"
      },
      {
        "name": "moduleId see documentation",
        "data_type": "long optional",
        "description": "ID of the module to which the deleted resources belong."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the resources. Values allowed are: department and deletedBy . You can pass multiple values by separating them with commas in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : null,\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046163\",\n    \"type\" : \"Attachments\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046093\",\n    \"type\" : \"Calls\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000017184\",\n    \"type\" : \"Tickets\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046029\",\n    \"type\" : \"Tickets\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : null,\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000019005\",\n    \"type\" : \"Contacts\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046131\",\n    \"type\" : \"Events\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046111\",\n    \"type\" : \"Tasks\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046153\",\n    \"type\" : \"Time Entry\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  } ]\n}"
  },
  {
    "Api name": "Restore deleted resources",
    "Api URL": "api/v1/recycleBin/restore",
    "Api Method": "POST",
    "Desc": "This API restores the deleted resources specified in the API request. Additionally, the parent resources are also restored.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/recycleBin/restore\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isChildNeedToBeRestored\" : \"true\",\n  \"ids\" : [ \"232323\", \"400000005634\", \"232\", \"4000000056156\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the resources to restore"
      },
      {
        "name": "isChildNeedToBeRestored",
        "data_type": "boolean optional",
        "description": "Key that denotes whether the child resources must be restored or not."
      }
    ],
    "Response Example": "-d'{\n  \"isChildNeedToBeRestored\" : \"true\",\n  \"ids\" : [ \"232323\", \"400000005634\", \"232\", \"4000000056156\" ]\n}'"
  },
  {
    "Api name": "Restore all resources from Recycle Bin",
    "Api URL": "api/v1/recycleBin/restoreAll",
    "Api Method": "POST",
    "Desc": "This API restores all deleted resources from the Recycle Bin.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/recycleBin/restoreAll\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "202"
  },
  {
    "Api name": "Delete resources from Recycle Bin",
    "Api URL": "api/v1/recycleBin/delete",
    "Api Method": "POST",
    "Desc": "This API permanently deletes the resources specified in the API request. Additionally, the child resources are also permanently deleted.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/recycleBin/delete\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ \"232323\", \"3213123\", \"40000000561232\", \"4000000056156\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the resources to delete."
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ \"232323\", \"3213123\", \"40000000561232\", \"4000000056156\" ]\n}'"
  },
  {
    "Api name": "Delete all resources from Recycle Bin",
    "Api URL": "api/v1/recycleBin/deleteAll",
    "Api Method": "POST",
    "Desc": "This API permanently deletes all resources from the Recycle Bin.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/recycleBin/deleteAll\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "202"
  },
  {
    "Api name": "Subject Access Requests",
    "Api URL": "",
    "Api Method": "",
    "Desc": "As part of the General Data Protection Regulation (GDPR), which is the core of Europe's digital privacy legislation, every customer or end-user has the right to ask an organization whether or not their personal information is used and/or stored. This is called the right of access, and exercising this right is called making a Subject Access Request (SAR).",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "List subject access requests",
    "Api URL": "/api/v1/subjectAccessRequests",
    "Api Method": "GET",
    "Desc": "This API lists a particular number of subject access requests, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/subjectAccessRequests?include=createdBy,modifiedBy\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=1",
        "description": "Index number, starting from which the requests must be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-100",
        "description": "Number of requests to list. The default value is 10 and the maximum value supported is 100 ."
      },
      {
        "name": "contactEmailId",
        "data_type": "string optional, max chars : 100",
        "description": "Email ID of the contact who made the request."
      },
      {
        "name": "status see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Processing status of the request. Values allowed are: INITIATED , INPROGRESS , COMPLETED , CANCELED , EXPORTED , PARTIALLY_COMPLETED , PARTIALLY_EXPORTED and FAILED . You can pass multiple values by separating them using commas in the API request."
      },
      {
        "name": "duration",
        "data_type": "string optional, max chars : 100",
        "description": "Period in which the requests were made. Values allowed are: TODAY , LAST_24_HOURS , LAST_7_DAYS , LAST_30_DAYS , CURRENT_WEEK , and CURRENT_MONTH ."
      },
      {
        "name": "startTime",
        "data_type": "string optional, max chars : 100",
        "description": "Starting time of the time range in which the requests should have been created. The time should be in the UTC time zone and expressed in a timestamp."
      },
      {
        "name": "endTime",
        "data_type": "string optional, max chars : 100",
        "description": "Ending time of the time range in which the requests should have been created. The time should be in the UTC time zone and expressed in a timestamp."
      },
      {
        "name": "requestType see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Filter by type of the request. Values allowed are: ACCESS_REQUEST , ERASURE_REQUEST . You can pass multiple values by separating them using commas in the API request."
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the requests. Values allowed are: createdBy and modifiedBy . You can pass multiple values by separating them using commas in the API request."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"referencereferenceTicketNumber\" : \"105\",\n    \"contactEmailId\" : \"john@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"sarNumber\" : \"141\",\n    \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092437\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"COMPLETED\"\n  }, {\n    \"contactEmailId\" : \"nirmal@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"140\",\n    \"createdTime\" : \"2020-10-29T12:10:16.890Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092243\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INITIATED\"\n  }, {\n    \"contactEmailId\" : \"mark@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : \"102\",\n    \"sarNumber\" : \"139\",\n    \"createdTime\" : \"2020-10-29T12:08:18.838Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092049\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INPROGRESS\"\n  }, {\n    \"contactEmailId\" : \"john@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"138\",\n    \"createdTime\" : \"2020-10-29T12:02:29.954Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000091353\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INPROGRESS\"\n  }, {\n    \"contactEmailId\" : \"mark@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"137\",\n    \"createdTime\" : \"2020-10-29T11:59:26.592Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000091159\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INITIATED\"\n  } ]\n}"
  },
  {
    "Api name": "Get subject access request",
    "Api URL": "/api/v1/subjectAccessRequests/{subjectAccessRequest_id}",
    "Api Method": "GET",
    "Desc": "This API fetches the details of a particular SAR.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/400000005634\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the request. Values allowed are: createdBy and modifiedBy . You can pass multiple values by separating them using commas in the API request."
      }
    ],
    "Response Example": "{\n  \"contactEmailId\" : \"carrol@zylker.com\",\n  \"requestType\" : \"ERASURE_REQUEST\",\n  \"recordType\" : \"SPECIFIC\",\n  \"module\" : \"tickets\",\n  \"query\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is before\",\n      \"field\" : {\n        \"apiName\" : \"createdTime\",\n        \"fieldLabel\" : \"Created Time\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"displayKey\" : \"${CURRENTTIME}\",\n          \"key\" : \"${CURRENTTIME}\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"1\"\n  },\n  \"downloadURL\" : null,\n  \"modifiedById\" : \"7000000000247\",\n  \"createdBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n    \"firstName\" : \"Nirmal\",\n    \"lastName\" : \"Kumar\",\n    \"id\" : \"7000000000247\",\n    \"email\" : \"nirmal@zylker.com\"\n  },\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"141\",\n  \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n    \"firstName\" : \"Nirmal\",\n    \"lastName\" : \"Kumar\",\n    \"id\" : \"7000000000247\",\n    \"email\" : \"john@zylker.com\"\n  },\n  \"id\" : \"7000000092437\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"INPROGRESS\"\n}"
  },
  {
    "Api name": "List resources related to subject",
    "Api URL": "api/v1/subjectAccessRequests/entities",
    "Api Method": "POST",
    "Desc": "This API lists a particular number of resources related to the subject, based on the limit specified.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/entities\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"Carol\" ]\n  } ],\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"contacts\",\n  \"limit\" : \"5\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Name of the modules from which the resources must be fetched. Values allowed are tickets and contacts . If you want to fetch resources from both modules, pass the value allEntities ."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the contact who made the request."
      },
      {
        "name": "from",
        "data_type": "integer optional, range : >=1",
        "description": "Index number, starting from which the resources must be fetched."
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of resources to list. The default value is 10 and the maximum value supported is 50 ."
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Field-related conditions, based on which the resources must be filtered."
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"Carol\" ]\n  } ],\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"contacts\",\n  \"limit\" : \"5\"\n}'"
  },
  {
    "Api name": "Get count of resources related to request",
    "Api URL": "api/v1/subjectAccessRequests/count",
    "Api Method": "POST",
    "Desc": "This API returns the number of resources related to a subject access request.",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/count\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"allEntities\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Field-related conditions, based on which the resources must be filtered"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Name of the modules from which the data must be exported. Values allowed are tickets and contacts . If you want to fetch data from both modules, pass the value allEntities ."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the user who made the request."
      }
    ],
    "Response Example": "-d'{\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"allEntities\"\n}'"
  },
  {
    "Api name": "Export all subject data from Zoho Desk",
    "Api URL": "api/v1/subjectAccessRequests/exportAll",
    "Api Method": "POST",
    "Desc": "This API exports data related to the subject, from your Zoho Desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/exportAll\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"callBackUrl\" : \"https://test.com\",\n  \"module\" : \"contacts\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Name of the modules from which the resources must be fetched. Values allowed are tickets and contacts . If you want to fetch resources from both modules, pass the value allEntities ."
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Field-related conditions, based on which the data must be filtered."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the user who made the request."
      },
      {
        "name": "callBackUrl",
        "data_type": "string optional, max chars : 2000",
        "description": "The url which will be used for the notification"
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"callBackUrl\" : \"https://test.com\",\n  \"module\" : \"contacts\"\n}'"
  },
  {
    "Api name": "Export specific resources",
    "Api URL": "api/v1/subjectAccessRequests/export",
    "Api Method": "POST",
    "Desc": "This API exports specific resources related to a subject access request.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/export\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the resources that must be exported."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the user who made the request."
      }
    ],
    "Response Example": "-d'{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}'"
  },
  {
    "Api name": "Get fields and conditions",
    "Api URL": "api/v1/subjectAccessRequests/fieldsAndConditions",
    "Api Method": "GET",
    "Desc": "This API fetchs possible fileds list and conditions",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/fieldsAndConditions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Name of the modules from which the resources must be fetched. Values allowed are tickets and contacts . If you want to fetch resources from both modules, pass the value allEntities ."
      }
    ],
    "Response Example": "{\n  \"displayLabel\" : \"AllEntities\",\n  \"name\" : \"AllEntities\",\n  \"fieldDetails\" : [ {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"starts with\",\n      \"i18NCondition\" : \"starts with\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is empty\",\n      \"i18NCondition\" : \"is empty\",\n      \"value\" : [ \"${EMPTY}\" ]\n    }, {\n      \"condition\" : \"is not empty\",\n      \"i18NCondition\" : \"is not empty\",\n      \"value\" : [ \"${NOTEMPTY}\" ]\n    } ],\n    \"fieldLabel\" : \"Phone\",\n    \"i18NLabel\" : \"Phone\",\n    \"type\" : \"text\"\n  }, {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is after\",\n      \"i18NCondition\" : \"is after\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is before\",\n      \"i18NCondition\" : \"is before\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"between\",\n      \"i18NCondition\" : \"between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    }, {\n      \"condition\" : \"not between\",\n      \"i18NCondition\" : \"not between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    } ],\n    \"fieldLabel\" : \"Created Time\",\n    \"i18NLabel\" : \"Created Time\",\n    \"type\" : \"dateTime\"\n  }, {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is after\",\n      \"i18NCondition\" : \"is after\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is before\",\n      \"i18NCondition\" : \"is before\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"between\",\n      \"i18NCondition\" : \"between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    }, {\n      \"condition\" : \"not between\",\n      \"i18NCondition\" : \"not between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    } ],\n    \"fieldLabel\" : \"Modified Time\",\n    \"i18NLabel\" : \"Modified Time\",\n    \"type\" : \"dateTime\"\n  } ]\n}"
  },
  {
    "Api name": "Erase all subject data from Zoho Desk",
    "Api URL": "api/v1/subjectAccessRequests/eraseAll",
    "Api Method": "POST",
    "Desc": "This API erases data related to the subject, from your Zoho Desk portal.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/eraseAll\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"module\" : \"contact\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Name of the modules from which the resources must be fetched. Values allowed are tickets and contacts . If you want to fetch resources from both modules, pass the value allEntities ."
      },
      {
        "name": "fieldConditions",
        "data_type": "list optional",
        "description": "Field-related conditions, based on which the data must be filtered."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the user who made the request."
      }
    ],
    "Response Example": "-d'{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"module\" : \"contact\"\n}'"
  },
  {
    "Api name": "Erase specific resources",
    "Api URL": "api/v1/subjectAccessRequests/erase",
    "Api Method": "POST",
    "Desc": "This API erases specific resources related to a subject access request.",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/subjectAccessRequests/erase\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "Array containing the IDs of the resources that must be exported."
      },
      {
        "name": "contactEmailId",
        "data_type": "string required, max chars : 100",
        "description": "Email ID of the user who made the request."
      }
    ],
    "Response Example": "-d'{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}'"
  },
  {
    "Api name": "SupportPlan",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Support plans specify the type of support you'll provide to customers. This type can be hour based, ticket based or cost based where the offered support is regulated by no of hours, no of tickets and service cost respectively. You can also set the type to unlimited in which the customer can avail support without any limits. Every support plan has an associated SLA which defines the standard at which the customer will be supported. You must bind the support plan in a contract to set its period of validity.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Create Support Plan",
    "Api URL": "/api/v1/supportPlans",
    "Api Method": "POST",
    "Desc": "This API Creates a Support Plan",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/supportPlans\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"supportType\" : \"Hours\",\n  \"slaId\" : \"146284000033706001\",\n  \"creditDetails\" : {\n    \"isAdditionalUsageAllowed\" : false,\n    \"isCarryForwardAllowed\" : false,\n    \"creditLimit\" : \"10\",\n    \"creditCycle\" : \"Weekly\"\n  },\n  \"departmentId\" : \"146284000010377075\",\n  \"name\" : \"SupportPlan for GoldCustomer\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String required",
        "description": "Name of the support plan"
      },
      {
        "name": "status",
        "data_type": "String required",
        "description": "Status of the support plan, Values allowed are ACTIVE and DISCONTINUED"
      },
      {
        "name": "departmentId",
        "data_type": "Long required",
        "description": "Department of the support plan"
      },
      {
        "name": "slaId",
        "data_type": "Long required",
        "description": "SLA configured in the support plan"
      },
      {
        "name": "supportType",
        "data_type": "String required",
        "description": "Type of the support plan, Values allowed are UNLIMITED_SUPPORT , TICKET"
      },
      {
        "name": "creditDetails show Attributes",
        "data_type": "object optional",
        "description": "Credit details of the support plan"
      }
    ],
    "Response Example": "-d'{\n  \"supportType\" : \"Hours\",\n  \"slaId\" : \"146284000033706001\",\n  \"creditDetails\" : {\n    \"isAdditionalUsageAllowed\" : false,\n    \"isCarryForwardAllowed\" : false,\n    \"creditLimit\" : \"10\",\n    \"creditCycle\" : \"Weekly\"\n  },\n  \"departmentId\" : \"146284000010377075\",\n  \"name\" : \"SupportPlan for GoldCustomer\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "Get Support Plan Details",
    "Api URL": "/api/v1/supportPlans/{supportPlanId}",
    "Api Method": "GET",
    "Desc": "To get details of a specific support plan",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/supportPlans/4000000019017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"supportType\" : \"Hours\",\n  \"modifiedTime\" : \"2022-07-26T10:00:07.538Z\",\n  \"creditDetails\" : {\n    \"isAdditionalUsageAllowed\" : false,\n    \"isCarryForwardAllowed\" : false,\n    \"creditLimit\" : \"10\",\n    \"creditCycle\" : \"Weekly\"\n  },\n  \"createdBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n    \"name\" : \"SanGhem\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"name\" : \"SupportPlan for GoldCustomer\",\n  \"sla\" : {\n    \"name\" : \"Gold-SLA\",\n    \"id\" : \"4000000019056\",\n    \"status\" : \"ACTIVE\"\n  },\n  \"creadtedTime\" : \"2022-07-26T10:00:07.538Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n    \"name\" : \"SanGhem\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"id\" : \"4000000019017\",\n  \"department\" : {\n    \"name\" : \"Automation Department\",\n    \"id\" : \"4000000019012\"\n  },\n  \"status\" : \"ACTIVE\"\n}"
  },
  {
    "Api name": "Update Support Plan",
    "Api URL": "/api/v1/supportPlans/{supportPlanId}",
    "Api Method": "PATCH",
    "Desc": "This API Updates the Support Plan",
    "OAuth Scope": "Desk.settings.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/supportPlans/4000000019017\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"supportType\" : \"Hours\",\n  \"slaId\" : \"146284000033706001\",\n  \"creditDetails\" : {\n    \"isAdditionalUsageAllowed\" : false,\n    \"isCarryForwardAllowed\" : false,\n    \"creditLimit\" : \"10\",\n    \"creditCycle\" : \"Weekly\"\n  },\n  \"name\" : \"SupportPlan for GoldCustomer\",\n  \"status\" : \"ACTIVE\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "String optional",
        "description": "Name of the support plan"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Status of the support plan, Values allowed are ACTIVE and DISCONTINUED"
      },
      {
        "name": "slaId",
        "data_type": "Long optional",
        "description": "SLA configured in the support plan"
      },
      {
        "name": "supportType",
        "data_type": "String optional",
        "description": "Type of the support plan, Values allowed are UNLIMITED_SUPPORT , TICKET"
      },
      {
        "name": "creditDetails show Attributes",
        "data_type": "object optional",
        "description": "Credit details of the support plan"
      }
    ],
    "Response Example": "-d'{\n  \"supportType\" : \"Hours\",\n  \"slaId\" : \"146284000033706001\",\n  \"creditDetails\" : {\n    \"isAdditionalUsageAllowed\" : false,\n    \"isCarryForwardAllowed\" : false,\n    \"creditLimit\" : \"10\",\n    \"creditCycle\" : \"Weekly\"\n  },\n  \"name\" : \"SupportPlan for GoldCustomer\",\n  \"status\" : \"ACTIVE\"\n}'"
  },
  {
    "Api name": "List all Support Plans",
    "Api URL": "/api/v1/supportPlans",
    "Api Method": "GET",
    "Desc": "This API lists all support plans in a department",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/supportPlans?departmentId=1000000013248\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department Id"
      },
      {
        "name": "from",
        "data_type": "integer optional",
        "description": "Index number, starting from which the support plans must be listed"
      },
      {
        "name": "limit",
        "data_type": "integer optional, range : 1-50",
        "description": "Number of support plans to list, allowed minimum value 1, maximum value 50,default is 50"
      },
      {
        "name": "status",
        "data_type": "String optional",
        "description": "Active,Discontinued filter for support plans. Values allowed are ACTIVE and DISCONTINUED"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"supportType\" : \"Hours\",\n    \"modifiedTime\" : \"2022-07-26T10:00:07.538Z\",\n    \"creditDetails\" : {\n      \"creditLimit\" : \"10\",\n      \"creditCycle\" : \"Weekly\"\n    },\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n      \"name\" : \"SanGhem\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"name\" : \"SupportPlan for GoldCustomer\",\n    \"sla\" : {\n      \"name\" : \"Gold-SLA\",\n      \"id\" : \"4000000019056\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creadtedTime\" : \"2022-07-26T10:00:07.538Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n      \"name\" : \"SanGhem\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019017\",\n    \"department\" : {\n      \"name\" : \"Automation Department\",\n      \"id\" : \"4000000019012\"\n    },\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"supportType\" : \"Hours\",\n    \"modifiedTime\" : \"2022-07-26T10:00:07.590Z\",\n    \"creditDetails\" : {\n      \"creditLimit\" : \"10\",\n      \"creditCycle\" : \"Weekly\"\n    },\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n      \"name\" : \"SanGhem\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"name\" : \"SupportPlan for SilverCustomer\",\n    \"sla\" : {\n      \"name\" : \"Silver-SLA\",\n      \"id\" : \"4000000019056\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creadtedTime\" : \"2022-07-26T10:00:07.590Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000000045/photo?orgId=234587\",\n      \"name\" : \"SanGhem\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019016\",\n    \"department\" : {\n      \"name\" : \"Automation Department\",\n      \"id\" : \"4000000019012\"\n    },\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
  },
  {
    "Api name": "Delete Support Plan",
    "Api URL": "/api/v1/supportPlans/{supportPlanId}",
    "Api Method": "DELETE",
    "Desc": "This API deletes a support plan.",
    "OAuth Scope": "Desk.settings.DELETE",
    "Request Example": "$ curl -X DELETE\nhttps://desk.zoho.com/api/v1/supportPlans/6000000033001\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "204"
  },
  {
    "Api name": "Generic Actions",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Generic Actions are distinct functional units that allow you to perform customized actions. For example, create a record, update a record, and more.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "The name of the Generic Action"
      },
      {
        "name": "inputParams show Attributes",
        "data_type": "list",
        "description": "The array of input parameters that are required as input for the action."
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Display name of the param"
      },
      {
        "name": "targetTemplateKey",
        "data_type": "string",
        "description": "Target Template key of the param"
      },
      {
        "name": "placeHolderContext",
        "data_type": "string",
        "description": "Context of the param if exists"
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "Unique name of the param"
      },
      {
        "name": "isMandatory",
        "data_type": "boolean",
        "description": "Param is whether mandatory"
      },
      {
        "name": "length",
        "data_type": "integer",
        "description": "Length of the param"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the param"
      },
      {
        "name": "order",
        "data_type": "integer",
        "description": "Order of the param"
      },
      {
        "name": "isEncrypted",
        "data_type": "boolean",
        "description": "Param is whether encrypted"
      },
      {
        "name": "picklistValues show Attributes",
        "data_type": "array",
        "description": "Values for the picklist"
      },
      {
        "name": "prompt",
        "data_type": "null",
        "description": "Name for the value"
      },
      {
        "name": "value",
        "data_type": "null",
        "description": "Value for the picklist"
      },
      {
        "name": "hooks show Attributes",
        "data_type": "list",
        "description": "Events on which urls will be called"
      },
      {
        "name": "event",
        "data_type": "event",
        "description": "Event type. The on_entry and on_type are only available for Lookup Picklist and Array type"
      },
      {
        "name": "payload show Attributes",
        "data_type": "object",
        "description": "The payload object that will be passed to url on event trigger. Allowed placeholders ${this.mappingTargetTemplateName}"
      },
      {
        "name": "valueUrl",
        "data_type": "url",
        "description": "The url to load dynamic values for the picklist"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Execute Action",
    "Api URL": "/api/v1/actions/([0-9]+)/execute",
    "Api Method": "POST",
    "Desc": "This API executes an action with the given input values.",
    "OAuth Scope": "Desk.settings.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/actions/1000009638757/execute\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"executionType\" : \"SYNC\",\n  \"actionParamMappings\" : [ {\n    \"apiName\" : \"staticParam1\",\n    \"value\" : \"My Action\"\n  }, {\n    \"apiName\" : \"staticParam2\",\n    \"value\" : \"1000000026140\"\n  }, {\n    \"apiName\" : \"staticParam3\",\n    \"value\" : {\n      \"subject\" : \"hello ${tickets.$createdBy}\"\n    }\n  }, {\n    \"picklistValues\" : [ ],\n    \"apiName\" : \"dyamicParam1\",\n    \"placeHolderContext\" : null,\n    \"origin\" : \"STATIC\",\n    \"length\" : \"100\",\n    \"type\" : \"TEXT\",\n    \"isEncrypted\" : false,\n    \"name\" : \"Dynamic Param\",\n    \"uiType\" : null,\n    \"targetTemplateName\" : null,\n    \"hooks\" : [ ],\n    \"value\" : \"Some value\",\n    \"isMandatory\" : true,\n    \"order\" : \"1\"\n  } ],\n  \"moduleId\" : \"1000000000581\",\n  \"entityIds\" : [ \"1000000048371\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "entityIds",
        "data_type": "list required",
        "description": "IDs of the entities on which the action is to be performed. Eg: Ticket Id, Record Id"
      },
      {
        "name": "moduleId",
        "data_type": "long optional",
        "description": "ID of the module to which the entities belong. It could be a system or custom module."
      },
      {
        "name": "executionType",
        "data_type": "string optional, max chars : 5",
        "description": "Specifies the type of action execution. The allowed values are SYNC and ASYNC."
      },
      {
        "name": "actionParamMappings",
        "data_type": "list required",
        "description": "Maps the input parameters of the Action with the appropriate value."
      }
    ],
    "Response Example": "-d'{\n  \"executionType\" : \"SYNC\",\n  \"actionParamMappings\" : [ {\n    \"apiName\" : \"staticParam1\",\n    \"value\" : \"My Action\"\n  }, {\n    \"apiName\" : \"staticParam2\",\n    \"value\" : \"1000000026140\"\n  }, {\n    \"apiName\" : \"staticParam3\",\n    \"value\" : {\n      \"subject\" : \"hello ${tickets.$createdBy}\"\n    }\n  }, {\n    \"picklistValues\" : [ ],\n    \"apiName\" : \"dyamicParam1\",\n    \"placeHolderContext\" : null,\n    \"origin\" : \"STATIC\",\n    \"length\" : \"100\",\n    \"type\" : \"TEXT\",\n    \"isEncrypted\" : false,\n    \"name\" : \"Dynamic Param\",\n    \"uiType\" : null,\n    \"targetTemplateName\" : null,\n    \"hooks\" : [ ],\n    \"value\" : \"Some value\",\n    \"isMandatory\" : true,\n    \"order\" : \"1\"\n  } ],\n  \"moduleId\" : \"1000000000581\",\n  \"entityIds\" : [ \"1000000048371\" ]\n}'"
  },
  {
    "Api name": "IM Channel",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A channel refers to the platform or medium through which a message is sent or received. In IM a channel is created using configuration parameters, refer to the settings that can be adjusted to customize the behaviour of the channel.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Channel ID of the channel"
      },
      {
        "name": "accountName",
        "data_type": "string",
        "description": "Account name of the channel"
      },
      {
        "name": "integrationServiceType",
        "data_type": "string",
        "description": "Integration Service of the channel. Available integration services are TELEGRAM , TWILIO , LINE , WECHAT , WHATSAPP , FACEBOOKMESSENGER"
      },
      {
        "name": "defaultBotId",
        "data_type": "long",
        "description": "Bot ID of the channel"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the channel"
      },
      {
        "name": "isActive",
        "data_type": "boolean",
        "description": "Is channel Active ?"
      },
      {
        "name": "isStorageEnabled",
        "data_type": "boolean",
        "description": "Is storage enabled for the channel ?"
      },
      {
        "name": "isSandBox",
        "data_type": "boolean",
        "description": "Is sandbox channel ?"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Channel creation time"
      },
      {
        "name": "createdBy",
        "data_type": "long",
        "description": "Agent Id who created the channel"
      },
      {
        "name": "isAuthorizationPending",
        "data_type": "boolean",
        "description": "Is authorization pending ?"
      },
      {
        "name": "isSubscribed",
        "data_type": "boolean",
        "description": "Is channel subscribed ?"
      },
      {
        "name": "authenticationURL",
        "data_type": "string",
        "description": "Authentication Url"
      },
      {
        "name": "isOwner",
        "data_type": "boolean",
        "description": "Is the agent owner of the channel ?"
      },
      {
        "name": "conversationCount",
        "data_type": "long",
        "description": "Total conversation count of the channel"
      },
      {
        "name": "universalLink",
        "data_type": "string",
        "description": "Universal link of the channel"
      },
      {
        "name": "isDeleted",
        "data_type": "boolean",
        "description": "Is channel deleted ?"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "Photo Url of the channel"
      },
      {
        "name": "departmentId",
        "data_type": "long",
        "description": "Department Id for which channel is associated"
      },
      {
        "name": "appName",
        "data_type": "string",
        "description": "App name and channel name is same for a IM channel"
      },
      {
        "name": "code",
        "data_type": "string",
        "description": "Code Name of the channel. This is uniquely generated while creating a channel by using the channel name."
      },
      {
        "name": "configParams show Attributes",
        "data_type": "JSONArray",
        "description": "ConfigParams contains a list of configuration properties of the channel with which a channel is created. Config param is specific for a integration."
      },
      {
        "name": "isRequired",
        "data_type": "boolean",
        "description": "Is config param required ?"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Modified time of the config param"
      },
      {
        "name": "isSecured",
        "data_type": "boolean",
        "description": "Is config param secured ?"
      },
      {
        "name": "isDeprecated",
        "data_type": "boolean",
        "description": "Is config param deprecated ?"
      },
      {
        "name": "defaultValue",
        "data_type": "string",
        "description": "Default value of the config param"
      },
      {
        "name": "label",
        "data_type": "string",
        "description": "Label of the config param"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the config param"
      },
      {
        "name": "uuid",
        "data_type": "string",
        "description": "Config param uuid"
      },
      {
        "name": "isInternal",
        "data_type": "boolean",
        "description": "Is internal config param ?"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Name of the config param"
      },
      {
        "name": "options",
        "data_type": "string",
        "description": "Options of the config param"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Config param ID"
      },
      {
        "name": "value",
        "data_type": "string",
        "description": "Value of the config param"
      },
      {
        "name": "maxLen",
        "data_type": "int",
        "description": "Max length of param"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Channels",
    "Api URL": "/api/v1/im/channels",
    "Api Method": "GET",
    "Desc": "This API lists all channels",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/channels\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "integrationServiceId",
        "data_type": "string optional, max chars : 100",
        "description": "Integration Service ID to filter. Available integration services are TELEGRAM , TWILIO , LINE , WECHAT , WHATSAPP , FACEBOOKMESSENGER"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Department Id for which channels to be fetched"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the channels.If passed in the param, then these values will be appended in the channel response. Allowed values are preference , creator , meta , configParams"
      },
      {
        "name": "isSandBox",
        "data_type": "boolean optional",
        "description": "Set this to fetch sandbox channels only."
      },
      {
        "name": "isActive",
        "data_type": "boolean optional",
        "description": "Set this to fetch only the active channels"
      },
      {
        "name": "includeDeleted",
        "data_type": "boolean optional",
        "description": "Set this to fetch along with the deleted channels"
      },
      {
        "name": "configName",
        "data_type": "string optional, max chars : 100",
        "description": "Set this to fetch channels with the given Config Param Name. Refer config param attribute of channel to get Config Name"
      },
      {
        "name": "configValue",
        "data_type": "string optional, max chars : 100",
        "description": "Set this to fetch channels with the given Config Param Value. Refer config param attribute of channel to get Config Value"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"defaultBotId\" : \"-1\",\n    \"code\" : \"SANDBOX\",\n    \"accountName\" : \"+13312040199\",\n    \"integrationServiceType\" : \"WHATSAPP\",\n    \"appName\" : \"Sandbox\",\n    \"departmentId\" : \"186543000000006907\",\n    \"universalLink\" : \"https://wa.me/13312040199\",\n    \"isActive\" : true,\n    \"isAuthorizationPending\" : false,\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/sandbox/photo?orgId=78412359\",\n    \"isSubscribed\" : true,\n    \"isDeleted\" : false,\n    \"isStorageEnabled\" : false,\n    \"createdBy\" : \"78412824\",\n    \"isOwner\" : true,\n    \"name\" : \"Sandbox\",\n    \"createdTime\" : \"2023-09-04T09:13:56.000Z\",\n    \"id\" : \"3942000000045001\",\n    \"authenticationURL\" : null,\n    \"isSandBox\" : true\n  }, {\n    \"defaultBotId\" : \"-1\",\n    \"code\" : \"TEST_SOFTWARE_4_3\",\n    \"accountName\" : \"Test Software 4\",\n    \"integrationServiceType\" : \"FACEBOOKMESSENGER\",\n    \"appName\" : \"Test Software 4\",\n    \"departmentId\" : \"186543000000393040\",\n    \"universalLink\" : \"https://m.me/168123406390163\",\n    \"isActive\" : true,\n    \"isAuthorizationPending\" : false,\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/test_software_4_3/photo?orgId=78412359\",\n    \"isSubscribed\" : true,\n    \"isDeleted\" : false,\n    \"isStorageEnabled\" : false,\n    \"createdBy\" : \"78412824\",\n    \"isOwner\" : true,\n    \"name\" : \"Test Software 4\",\n    \"createdTime\" : \"2024-02-07T06:28:32.000Z\",\n    \"id\" : \"3942000000943035\",\n    \"authenticationURL\" : null,\n    \"isSandBox\" : false\n  }, {\n    \"defaultBotId\" : \"-1\",\n    \"code\" : \"TEST_DEP\",\n    \"accountName\" : \"ZImAbhiTestBot\",\n    \"integrationServiceType\" : \"TELEGRAM\",\n    \"appName\" : \"Test DEP\",\n    \"departmentId\" : \"186543000000393040\",\n    \"universalLink\" : \"https://t.me/ZImAbhiTestBot\",\n    \"isActive\" : true,\n    \"isAuthorizationPending\" : false,\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/test_dep/photo?orgId=78412359\",\n    \"isSubscribed\" : true,\n    \"isDeleted\" : false,\n    \"isStorageEnabled\" : false,\n    \"createdBy\" : \"76837521\",\n    \"isOwner\" : true,\n    \"name\" : \"Test DEP\",\n    \"createdTime\" : \"2024-01-16T04:17:16.000Z\",\n    \"id\" : \"3942000000735961\",\n    \"authenticationURL\" : null,\n    \"isSandBox\" : false\n  } ]\n}"
  },
  {
    "Api name": "Get a Channel",
    "Api URL": "/api/v1/im/channels/{channel_id}",
    "Api Method": "GET",
    "Desc": "This API fetches details of an channel.",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/channels/3942000001423029\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "include",
        "data_type": "string optional, max chars : 100",
        "description": "Additional information related to the channel. Allowed values are preference , creator"
      }
    ],
    "Response Example": "{\n  \"defaultBotId\" : \"-1\",\n  \"code\" : \"TEST_WA_CHANNEL_4\",\n  \"accountName\" : \"+14328784611\",\n  \"integrationServiceType\" : \"WHATSAPP\",\n  \"appName\" : \"Test WA Channel\",\n  \"departmentId\" : \"186543000000006907\",\n  \"universalLink\" : \"https://wa.me/14328784611\",\n  \"isActive\" : true,\n  \"isAuthorizationPending\" : false,\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/test_wa_channel_4/photo?orgId=78412359\",\n  \"isSubscribed\" : true,\n  \"isDeleted\" : false,\n  \"configParams\" : [ {\n    \"isRequired\" : false,\n    \"modifiedTime\" : \"2024-03-22T05:33:40.000Z\",\n    \"isSecured\" : false,\n    \"isDeprecated\" : false,\n    \"defaultValue\" : \"CREATED\",\n    \"parentParams\" : [ ],\n    \"label\" : \"Current Onboarding Status\",\n    \"type\" : \"SYSTEM_DEFINED\",\n    \"uuid\" : \"56302cb334385d818e3400a023091560\",\n    \"isInternal\" : false,\n    \"name\" : \"CURRENT_STATUS\",\n    \"options\" : null,\n    \"id\" : \"3942000001423031\",\n    \"value\" : \"CONNECTED\",\n    \"maxLen\" : \"255\"\n  }, {\n    \"isRequired\" : true,\n    \"modifiedTime\" : \"2024-03-22T05:33:40.000Z\",\n    \"isSecured\" : false,\n    \"isDeprecated\" : false,\n    \"defaultValue\" : null,\n    \"parentParams\" : [ ],\n    \"label\" : \"WhatsApp Phone Number\",\n    \"type\" : \"OPTIONS_COMPUTED\",\n    \"uuid\" : \"56302cb334385d818e3400a023091560\",\n    \"isInternal\" : false,\n    \"name\" : \"PHONE_NUMBER\",\n    \"options\" : null,\n    \"id\" : \"3942000001423033\",\n    \"value\" : \"+14328784611\",\n    \"maxLen\" : \"255\"\n  } ],\n  \"isStorageEnabled\" : false,\n  \"createdBy\" : \"78412824\",\n  \"isOwner\" : true,\n  \"conversationCount\" : \"4\",\n  \"meta\" : [ ],\n  \"name\" : \"Test WA Channel\",\n  \"createdTime\" : \"2024-03-22T05:33:40.000Z\",\n  \"id\" : \"3942000001423029\",\n  \"authenticationURL\" : null,\n  \"isSandBox\" : false\n}"
  },
  {
    "Api name": "Initiate Session",
    "Api URL": "/api/v1/im/channels/([0-9]+)/initiateSession",
    "Api Method": "POST",
    "Desc": "This API initiates a session with a template message",
    "OAuth Scope": "Desk.InstantMessages.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/im/channels/([0-9]+)/initiateSession\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"receiverId\" : \"+918478935387\",\n  \"receiverType\" : \"PHONENUMBER\",\n  \"cannedMessageId\" : \"3942000001074175\",\n  \"language\" : \"en\",\n  \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "receiverId",
        "data_type": "string required, max chars : 100",
        "description": "ID to which Message Has to be sent"
      },
      {
        "name": "receiverType",
        "data_type": "string required, max chars : 100",
        "description": "Specifies receiverID type. Allowed value PHONENUMBER"
      },
      {
        "name": "cannedMessageId",
        "data_type": "long required",
        "description": "TemplateMessageId to send that template"
      },
      {
        "name": "message",
        "data_type": "string required, max chars : 1024",
        "description": "Content of the message"
      },
      {
        "name": "headerMessage",
        "data_type": "string optional, max chars : 60",
        "description": "Content of the header message"
      },
      {
        "name": "urlMessage",
        "data_type": "string optional, max chars : 2000",
        "description": "Content of the URL message"
      },
      {
        "name": "language",
        "data_type": "string required, max chars : 50",
        "description": "Language of Translation. Enter this input in ISO language code. For example en , fr , de , bn , ta etc"
      },
      {
        "name": "meta",
        "data_type": "JSONArray optional",
        "description": "Message meta to be added to chat message"
      }
    ],
    "Response Example": "-d'{\n  \"receiverId\" : \"+918478935387\",\n  \"receiverType\" : \"PHONENUMBER\",\n  \"cannedMessageId\" : \"3942000001074175\",\n  \"language\" : \"en\",\n  \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\"\n}'"
  },
  {
    "Api name": "Start a Facebook Messenger Session",
    "Api URL": "/api/v1/im/channels/([0-9]+)/sessions",
    "Api Method": "POST",
    "Desc": "This API is designed to trigger Facebook Messenger messages to end users outside the standard messaging window, provided you have the Facebook comment ID and Facebook user ID from a post where the user interacted. In facebookMessengerPayload JSONObject,facebookUserIdandfacebookCommentIdare mandatory params, if not passed in the payload, it will throw API error. Also, a single message can be sent with a given comment id. Attachment is also supported to be sent but make sure that if attachment is added, do not addmessagein facebookMessengerPayload JSON since it is restricted to send both attachment and message altogether in Facebook",
    "OAuth Scope": "Desk.InstantMessages.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/im/channels/([0-9]+)/sessions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"integrationServiceId\" : \"FACEBOOKMESSENGER\",\n  \"facebookMessengerPayload\" : {\n    \"facebookUserId\" : \"123456778\",\n    \"facebookUserName\" : \"John Cena\",\n    \"facebookCommentId\" : \"122127450026859324_989216176516248\",\n    \"message\" : \"This is test message\"\n  }\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "payload",
        "data_type": "null",
        "description": "Session payload for Facebook Messenger"
      },
      {
        "name": "file",
        "data_type": "Content-Type:multipart/form-data",
        "description": "File attachment to send"
      },
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "integrationServiceId",
        "data_type": "string required, max chars : 100",
        "description": "Integration Service of the channel. Only available integration service is FACEBOOKMESSENGER"
      },
      {
        "name": "facebookMessengerPayload",
        "data_type": "JSONObject optional",
        "description": "Facebook messenger payload for which the session needed to be created and message to be sent"
      },
      {
        "name": "meta",
        "data_type": "JSONArray optional",
        "description": "Message meta to be added to chat message"
      }
    ],
    "Response Example": "-d'{\n  \"integrationServiceId\" : \"FACEBOOKMESSENGER\",\n  \"facebookMessengerPayload\" : {\n    \"facebookUserId\" : \"123456778\",\n    \"facebookUserName\" : \"John Cena\",\n    \"facebookCommentId\" : \"122127450026859324_989216176516248\",\n    \"message\" : \"This is test message\"\n  }\n}'"
  },
  {
    "Api name": "IM Session",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A session denotes the communication between an agent and an end-user, during which messages are exchanged. Several sessions can exist within a channel. Multiple messages can be included within a single session. Additionally, each end-user will have an exclusive session linked to a channel.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Sesion ID of the session"
      },
      {
        "name": "channelId",
        "data_type": "long",
        "description": "Channel ID for which the session is created"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Status filter for the conversations. Allowed values are OPEN , ON_PROGRESS , ON_HOLD , BLOCKED"
      },
      {
        "name": "createdTime",
        "data_type": "timestamp",
        "description": "Session creation time"
      },
      {
        "name": "agentId",
        "data_type": "long",
        "description": "Agent Id assicoated with the session"
      },
      {
        "name": "botId",
        "data_type": "long",
        "description": "Bot ID associated with the session"
      },
      {
        "name": "actor show Attributes",
        "data_type": "JSONObject",
        "description": "Session actor"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Actor name"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Actor type, Allowed values are BOT , AGENT , ENDUSER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "Photo Url of the actor"
      },
      {
        "name": "externalId",
        "data_type": "string",
        "description": "External Id"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Contact ID of the actor"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email of the actor"
      },
      {
        "name": "botType",
        "data_type": "string",
        "description": "Bot type in the session"
      },
      {
        "name": "contactName",
        "data_type": "string",
        "description": "Actor contact name"
      },
      {
        "name": "subject",
        "data_type": "string",
        "description": "Subject of the session"
      },
      {
        "name": "messagesCount",
        "data_type": "int",
        "description": "Total message count in the session"
      },
      {
        "name": "agentLastActiveTime",
        "data_type": "timestamp",
        "description": "Last active time of agent"
      },
      {
        "name": "contactLastActiveTime",
        "data_type": "timestamp",
        "description": "End user last active time of agent"
      },
      {
        "name": "lastActiveTime",
        "data_type": "timestamp",
        "description": "Last active time of agent"
      },
      {
        "name": "unreadMessagesCount",
        "data_type": "int",
        "description": "Total unread message count in the session"
      },
      {
        "name": "integrationService",
        "data_type": "string",
        "description": "Integration Service of the channel. Available integration services are TELEGRAM , TWILIO , LINE , WECHAT , WHATSAPP , FACEBOOKMESSENGER"
      },
      {
        "name": "replyStatus",
        "data_type": "string",
        "description": "Session reply status. Allowed values are ACCEPTED , CHANNEL_INACTIVE , CHANNEL_REVOKED , SESSION_ENDED , SESSION_BLOCKED , SESSION_EXPIRED , UNASSIGNED , NOT_AN_ASSIGNEE , CREDIT_EXHAUSTED , ACCESSTOKEN_EXPIRED , PERMISSION_REVOKED , UNEXPECTED_ERROR , PAGE_REMOVED , SANDBOX_LIMIT_REACHED , CHANNEL_DELETED , ENDUSER_OFFLINE"
      },
      {
        "name": "contactId",
        "data_type": "long",
        "description": "End user desk contact Id"
      },
      {
        "name": "meta show Attributes",
        "data_type": "JSONObject",
        "description": "Session meta"
      },
      {
        "name": "DESK_TICKET_ID",
        "data_type": "long",
        "description": "Ticket id associated in the session"
      },
      {
        "name": "DESK_TICKET_NUMBER",
        "data_type": "int",
        "description": "Desk ticket number"
      },
      {
        "name": "deskAssignee show Attributes",
        "data_type": "JSONObject",
        "description": "Session assignee"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Actor name"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Actor type, Allowed values are BOT , AGENT , ENDUSER"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "Photo Url of the actor"
      },
      {
        "name": "externalId",
        "data_type": "string",
        "description": "External Id"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Contact ID of the actor"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email of the actor"
      },
      {
        "name": "botType",
        "data_type": "string",
        "description": "Bot type in the session"
      },
      {
        "name": "contactName",
        "data_type": "string",
        "description": "Actor contact name"
      },
      {
        "name": "channel",
        "data_type": "string",
        "description": "Channel code"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Sessions",
    "Api URL": "/api/v1/im/sessions",
    "Api Method": "GET",
    "Desc": "This API lists all sessions",
    "OAuth Scope": "Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/sessions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 0",
        "description": "Index number, starting from which the conversations must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 0",
        "description": "Number of conversations to fetch"
      },
      {
        "name": "channelId",
        "data_type": "long optional",
        "description": "Filter conversations of a channel"
      },
      {
        "name": "botIds",
        "data_type": "long optional",
        "description": "Filter conversations assigned to bots"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "Filter conversations assigned to an agent"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "Filter conversations of a contact"
      },
      {
        "name": "profileId",
        "data_type": "long optional",
        "description": "Filter conversations of a profile"
      },
      {
        "name": "modifiedAfter",
        "data_type": "timestamp optional",
        "description": "After which modified date conversations should be included. Enter a date in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "createdBefore",
        "data_type": "timestamp optional",
        "description": "Before which date conversations should be included. Enter a date in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "createdAfter",
        "data_type": "timestamp optional",
        "description": "After which date conversations should be included. Enter a date in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Status filter for the conversations. Allowed values are OPEN , ON_PROGRESS , ON_HOLD , BLOCKED"
      },
      {
        "name": "assigneeFilter",
        "data_type": "string optional, max chars : 100",
        "description": "Assignment status filter for the conversations. Allowed values are MINE , UNASSIGNED , NONE , BOT"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Filter conversations of all channels in given department"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"agentId\" : \"78412824\",\n    \"lastActiveTime\" : \"2024-03-22T07:57:13.000Z\",\n    \"contactId\" : \"186543000000451259\",\n    \"subject\" : \"This is test 2   Abhishek Aich\",\n    \"unreadMessagesCount\" : \"0\",\n    \"channel\" : \"TEST_WA_CHANNEL_4\",\n    \"integrationService\" : \"WHATSAPP\",\n    \"deskAssignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"botType\" : null,\n      \"contactName\" : null,\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : null,\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler.sales@zoho.com\"\n    },\n    \"contactLastActiveTime\" : \"2024-03-22T05:51:09.000Z\",\n    \"actor\" : {\n      \"photoURL\" : null,\n      \"botType\" : null,\n      \"contactName\" : \"Abhishek Aich\",\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : \"+918478935387\",\n      \"id\" : \"186543000000451285\",\n      \"type\" : \"ENDUSER\",\n      \"email\" : null\n    },\n    \"meta\" : {\n      \"DESK_TICKET_ID\" : \"186543000001662116\",\n      \"DESK_TICKET_NUMBER\" : \"480\"\n    },\n    \"createdTime\" : \"2024-03-22T05:34:19.000Z\",\n    \"replyStatus\" : \"SESSION_EXPIRED\",\n    \"botId\" : null,\n    \"messagesCount\" : \"10\",\n    \"id\" : \"3942000001423083\",\n    \"channelId\" : \"3942000001423029\",\n    \"agentLastActiveTime\" : \"2024-03-22T07:57:13.000Z\",\n    \"status\" : \"ON_PROGRESS\"\n  }, {\n    \"agentId\" : \"78412824\",\n    \"lastActiveTime\" : \"2024-03-22T07:57:03.000Z\",\n    \"contactId\" : \"186543000000451259\",\n    \"subject\" : \"This is test 2   Abhishek Aich\",\n    \"unreadMessagesCount\" : \"0\",\n    \"channel\" : \"SANDBOX\",\n    \"integrationService\" : \"WHATSAPP\",\n    \"deskAssignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"botType\" : null,\n      \"contactName\" : null,\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : null,\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler.sales@zoho.com\"\n    },\n    \"contactLastActiveTime\" : \"2024-03-21T09:11:00.000Z\",\n    \"actor\" : {\n      \"photoURL\" : null,\n      \"botType\" : null,\n      \"contactName\" : \"Abhishek Aich\",\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : \"+918478935387\",\n      \"id\" : \"186543000000451285\",\n      \"type\" : \"ENDUSER\",\n      \"email\" : null\n    },\n    \"meta\" : {\n      \"DESK_TICKET_ID\" : \"186543000001653193\",\n      \"DESK_TICKET_NUMBER\" : \"477\"\n    },\n    \"createdTime\" : \"2023-09-04T09:30:15.000Z\",\n    \"replyStatus\" : \"SESSION_EXPIRED\",\n    \"botId\" : null,\n    \"messagesCount\" : \"65\",\n    \"id\" : \"3942000000042104\",\n    \"channelId\" : \"3942000000045001\",\n    \"agentLastActiveTime\" : \"2024-03-22T07:57:03.000Z\",\n    \"status\" : \"ON_PROGRESS\"\n  }, {\n    \"agentId\" : \"78412824\",\n    \"lastActiveTime\" : \"2024-03-22T05:32:38.000Z\",\n    \"contactId\" : \"186543000000451259\",\n    \"subject\" : \"Hi good morning\",\n    \"unreadMessagesCount\" : \"0\",\n    \"channel\" : \"WA_CHANNEL\",\n    \"integrationService\" : \"WHATSAPP\",\n    \"deskAssignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"botType\" : null,\n      \"contactName\" : null,\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : null,\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler.sales@zoho.com\"\n    },\n    \"contactLastActiveTime\" : \"2024-03-22T05:04:06.000Z\",\n    \"actor\" : {\n      \"photoURL\" : null,\n      \"botType\" : null,\n      \"contactName\" : \"Abhishek Aich\",\n      \"name\" : \"Abhishek Aich\",\n      \"externalId\" : \"+918478935387\",\n      \"id\" : \"186543000000451285\",\n      \"type\" : \"ENDUSER\",\n      \"email\" : null\n    },\n    \"meta\" : {\n      \"DESK_TICKET_ID\" : \"186543000001662009\",\n      \"DESK_TICKET_NUMBER\" : \"479\"\n    },\n    \"createdTime\" : \"2024-03-22T05:04:06.000Z\",\n    \"replyStatus\" : \"CHANNEL_DELETED\",\n    \"botId\" : null,\n    \"messagesCount\" : \"5\",\n    \"id\" : \"3942000001422171\",\n    \"channelId\" : \"3942000001422011\",\n    \"agentLastActiveTime\" : \"2024-03-22T05:32:38.000Z\",\n    \"status\" : \"ON_PROGRESS\"\n  } ],\n  \"hasMore\" : false\n}"
  },
  {
    "Api name": "Get a session",
    "Api URL": "/api/v1/im/sessions/{session_id}",
    "Api Method": "GET",
    "Desc": "This API fetches details of an session.",
    "OAuth Scope": "Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/sessions/3942000001423083\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"agentId\" : \"78412824\",\n  \"lastActiveTime\" : \"2024-03-22T07:57:13.000Z\",\n  \"contactId\" : \"186543000000451259\",\n  \"subject\" : \"This is test 2   Abhishek Aich\",\n  \"unreadMessagesCount\" : \"0\",\n  \"channel\" : \"TEST_WA_CHANNEL_4\",\n  \"integrationService\" : \"WHATSAPP\",\n  \"deskAssignee\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n    \"botType\" : null,\n    \"contactName\" : null,\n    \"name\" : \"Abhishek Aich\",\n    \"externalId\" : null,\n    \"id\" : \"186543000000190001\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"zykler.sales@zoho.com\"\n  },\n  \"contactLastActiveTime\" : \"2024-03-22T05:51:09.000Z\",\n  \"actor\" : {\n    \"photoURL\" : null,\n    \"botType\" : null,\n    \"contactName\" : \"Abhishek Aich\",\n    \"name\" : \"Abhishek Aich\",\n    \"externalId\" : \"+918478935387\",\n    \"id\" : \"186543000000451285\",\n    \"type\" : \"ENDUSER\",\n    \"email\" : null\n  },\n  \"meta\" : {\n    \"DESK_TICKET_ID\" : \"186543000001662116\",\n    \"DESK_TICKET_NUMBER\" : \"480\"\n  },\n  \"createdTime\" : \"2024-03-22T05:34:19.000Z\",\n  \"botId\" : null,\n  \"messagesCount\" : \"10\",\n  \"id\" : \"3942000001423083\",\n  \"channelId\" : \"3942000001423029\",\n  \"agentLastActiveTime\" : \"2024-03-22T07:57:13.000Z\",\n  \"status\" : \"ON_PROGRESS\"\n}"
  },
  {
    "Api name": "Update an IM session",
    "Api URL": "/api/v1/im/sessions/{session_id}",
    "Api Method": "PATCH",
    "Desc": "This API updates an IM session. Providing either agent Id or bot Id will assgin the session to that particular Id.",
    "OAuth Scope": "Desk.InstantMessages.UPDATE",
    "Request Example": "$ curl -X PATCH\nhttps://desk.zoho.com/api/v1/im/sessions/3942000001423083\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"agentId\" : 186543000000451285,\n  \"status\" : \"ON_PROGRESS\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "agentId",
        "data_type": "long optional",
        "description": "Current assignee of this session"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Current status of the session to be set. Possible values are OPEN , ENDED , ON_PROGRESS , ON_HOLD , BLOCKED"
      },
      {
        "name": "botId",
        "data_type": "long optional",
        "description": "Current Desk bot assignee of this session."
      }
    ],
    "Response Example": "-d'{\n  \"agentId\" : 186543000000451285,\n  \"status\" : \"ON_PROGRESS\"\n}'"
  },
  {
    "Api name": "IM Template Message",
    "Api URL": "",
    "Api Method": "",
    "Desc": "An IM template Message predefined comman message to send while initiating a session",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Template Message ID"
      },
      {
        "name": "title",
        "data_type": "string",
        "description": "Message title"
      },
      {
        "name": "displayMessage",
        "data_type": "string",
        "description": "Display Message"
      },
      {
        "name": "isPrivate",
        "data_type": "boolean",
        "description": "Specify whether the message is private to the creator"
      },
      {
        "name": "message",
        "data_type": "string",
        "description": "Content of the message"
      },
      {
        "name": "tags",
        "data_type": "string",
        "description": "Message tags"
      },
      {
        "name": "modifiedTime",
        "data_type": "timestamp",
        "description": "Last modified time"
      },
      {
        "name": "departmentId",
        "data_type": "long",
        "description": "Department ID"
      },
      {
        "name": "wabaId",
        "data_type": "string",
        "description": "Waba ID"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Message Type. Allowed value is TEMPLATE"
      },
      {
        "name": "status",
        "data_type": "string",
        "description": "Message status"
      },
      {
        "name": "isActive",
        "data_type": "boolean",
        "description": "Is active ?"
      },
      {
        "name": "actor show Attributes",
        "data_type": "JSONObject",
        "description": "Actor"
      },
      {
        "name": "name",
        "data_type": "string",
        "description": "Actor name"
      },
      {
        "name": "photoURL",
        "data_type": "string",
        "description": "Photo Url of the actor"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Actor type, Allowed values are BOT , AGENT , ENDUSER"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "Contact ID of the actor"
      },
      {
        "name": "email",
        "data_type": "string",
        "description": "Email of the actor"
      },
      {
        "name": "translations show Attributes",
        "data_type": "JSONArray",
        "description": "List of translations"
      },
      {
        "name": "language",
        "data_type": "string",
        "description": "Language of Translation"
      },
      {
        "name": "message",
        "data_type": "string",
        "description": "Content of the message"
      },
      {
        "name": "templateItems show Attributes",
        "data_type": "JSONObject",
        "description": "Template Items"
      },
      {
        "name": "header show Attributes",
        "data_type": "JSONObject",
        "description": "Header JSON"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the Header to be sent. Allowed values TEXT , IMAGE , DOCUMENT , VIDEO"
      },
      {
        "name": "message",
        "data_type": "string",
        "description": "Message content accepted only if type is TEXT"
      },
      {
        "name": "attachmentId",
        "data_type": "long",
        "description": "Uploaded Attachment ID if type is IMAGE/VIDEO/DOCUMENT"
      },
      {
        "name": "footer show Attributes",
        "data_type": "JSONObject",
        "description": "Footer JSON"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of the Footer to be sent. Allowed value TEXT"
      },
      {
        "name": "message",
        "data_type": "string",
        "description": "Footer Message Content. Only TEXT allowed"
      },
      {
        "name": "buttons show Attributes",
        "data_type": "JSONArray",
        "description": "Button JSON"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "Type of button. Allowed values QUICK_REPLY , PHONE_NUMBER , URL"
      },
      {
        "name": "message",
        "data_type": "string",
        "description": "Message content on the button"
      },
      {
        "name": "action",
        "data_type": "string",
        "description": "Aplicable only for type PHONE_NUMBER and URL"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "List Template Message",
    "Api URL": "/api/v1/im/cannedMessages",
    "Api Method": "GET",
    "Desc": "This API lists all sessions",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/cannedMessages\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "from",
        "data_type": "int optional, default : 0",
        "description": "Index number, starting from which the canned messages must be fetched"
      },
      {
        "name": "limit",
        "data_type": "int optional, default : 0",
        "description": "Number of canned messages to fetch"
      },
      {
        "name": "modifiedAfter",
        "data_type": "timestamp optional",
        "description": "After which date entities to be included. Enter a date in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ."
      },
      {
        "name": "tag",
        "data_type": "string optional, max chars : 100",
        "description": "Tag to filter by"
      },
      {
        "name": "isActive",
        "data_type": "boolean optional",
        "description": "Canned Message Active Status"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department ID for which the canned messages to be fetched"
      },
      {
        "name": "wabaId",
        "data_type": "string optional, max chars : 100",
        "description": "Waba ID for which the canned messages to be fetched"
      },
      {
        "name": "channelId",
        "data_type": "long optional",
        "description": "Channel ID for which the canned messages to be fetched"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "Contact ID for which the canned messages to be applied"
      },
      {
        "name": "status",
        "data_type": "string optional, max chars : 100",
        "description": "Filter with Status of Message Applicable only if messageType is Template. Allowed values are PENDING , FAILED , APPROVED , REJECTED"
      },
      {
        "name": "type",
        "data_type": "string required, max chars : 100",
        "description": "Filter by MessageType. Allowed values are TEMPLATE"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 100",
        "description": "Language to filter canned message. Enter this input in ISO language code. For example en , fr , de , bn , ta etc"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2024-03-22T05:36:02.000Z\",\n    \"departmentId\" : \"186543000000006907\",\n    \"title\" : \"fb marketing\",\n    \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n    \"type\" : \"TEMPLATE\",\n    \"isActive\" : true,\n    \"tags\" : \"MARKETING\",\n    \"actor\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"name\" : \"Abhishek Aich\",\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler@sales.com\"\n    },\n    \"wabaId\" : \"102086489526176\",\n    \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n    \"translations\" : [ {\n      \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n      \"templateItems\" : {\n        \"buttons\" : [ {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Cakes\"\n        }, {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"pizza\"\n        } ],\n        \"footer\" : null,\n        \"header\" : null\n      },\n      \"language\" : \"en\",\n      \"id\" : \"3942000001074177\",\n      \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n      \"rejectionReason\" : null,\n      \"status\" : \"APPROVED\"\n    } ],\n    \"id\" : \"3942000001074175\",\n    \"status\" : \"APPROVED\"\n  }, {\n    \"modifiedTime\" : \"2024-03-22T05:35:53.000Z\",\n    \"departmentId\" : \"186543000000006907\",\n    \"title\" : \"Rice Marketing\",\n    \"message\" : \"Hello please select our new rice items\",\n    \"type\" : \"TEMPLATE\",\n    \"isActive\" : true,\n    \"tags\" : \"MARKETING\",\n    \"actor\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"name\" : \"Abhishek Aich\",\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler@sales.com\"\n    },\n    \"wabaId\" : \"102086489526176\",\n    \"displayMessage\" : \"Hello please select our new rice items\",\n    \"translations\" : [ {\n      \"displayMessage\" : \"Hello please select our new rice items\",\n      \"templateItems\" : {\n        \"buttons\" : [ {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Boiled Rice\"\n        }, {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Rice Cake\"\n        }, {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Fried Rice\"\n        } ],\n        \"footer\" : null,\n        \"header\" : {\n          \"attachment\" : null,\n          \"type\" : \"TEXT\",\n          \"message\" : \"Welcome Back\"\n        }\n      },\n      \"language\" : \"en\",\n      \"id\" : \"3942000001423160\",\n      \"message\" : \"Hello please select our new rice items\",\n      \"rejectionReason\" : null,\n      \"status\" : \"APPROVED\"\n    } ],\n    \"id\" : \"3942000001423158\",\n    \"status\" : \"APPROVED\"\n  }, {\n    \"modifiedTime\" : \"2024-03-22T04:47:53.000Z\",\n    \"departmentId\" : \"186543000000006907\",\n    \"title\" : \"Whatsapp marketing\",\n    \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\\nHere are our new products\",\n    \"type\" : \"TEMPLATE\",\n    \"isActive\" : true,\n    \"tags\" : \"UTILITY\",\n    \"actor\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n      \"name\" : \"Abhishek Aich\",\n      \"id\" : \"186543000000190001\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"zykler@sales.com\"\n    },\n    \"wabaId\" : \"102086489526176\",\n    \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\\nHere are our new products\",\n    \"translations\" : [ {\n      \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\\nHere are our new products\",\n      \"templateItems\" : {\n        \"buttons\" : [ {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Croissants\"\n        }, {\n          \"action\" : null,\n          \"type\" : \"QUICK_REPLY\",\n          \"message\" : \"Pizza\"\n        } ],\n        \"footer\" : null,\n        \"header\" : null\n      },\n      \"language\" : \"en\",\n      \"id\" : \"3942000001262607\",\n      \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\\nHere are our new products\",\n      \"rejectionReason\" : null,\n      \"status\" : \"APPROVED\"\n    } ],\n    \"id\" : \"3942000001262605\",\n    \"status\" : \"APPROVED\"\n  } ],\n  \"hasMore\" : false\n}"
  },
  {
    "Api name": "Get a Template Message",
    "Api URL": "/api/v1/im/cannedMessages/{template_message_id}",
    "Api Method": "GET",
    "Desc": "This API fetches details of a template message.",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/im/cannedMessages/3942000001300011\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedTime\" : \"2024-03-22T05:36:02.000Z\",\n  \"departmentId\" : \"186543000000006907\",\n  \"title\" : \"fb marketing\",\n  \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n  \"type\" : \"TEMPLATE\",\n  \"isActive\" : true,\n  \"tags\" : \"MARKETING\",\n  \"actor\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/186543000000190001/photo?orgId=78412359\",\n    \"name\" : \"Abhishek Aich\",\n    \"id\" : \"186543000000190001\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"zykler@sales.com\"\n  },\n  \"wabaId\" : \"102086489526176\",\n  \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n  \"translations\" : [ {\n    \"displayMessage\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n    \"templateItems\" : {\n      \"buttons\" : [ {\n        \"action\" : null,\n        \"type\" : \"QUICK_REPLY\",\n        \"message\" : \"Cakes\"\n      }, {\n        \"action\" : null,\n        \"type\" : \"QUICK_REPLY\",\n        \"message\" : \"pizza\"\n      } ],\n      \"footer\" : {\n        \"type\" : \"TEXT\",\n        \"message\" : \"Thank you\"\n      },\n      \"header\" : null\n    },\n    \"language\" : \"en\",\n    \"id\" : \"3942000001074177\",\n    \"message\" : \"Welcome to Tasty Bakery. What would you like to eat?\",\n    \"rejectionReason\" : null,\n    \"status\" : \"APPROVED\"\n  } ],\n  \"id\" : \"3942000001074175\",\n  \"status\" : \"APPROVED\"\n}"
  },
  {
    "Api name": "Get applied Canned Message",
    "Api URL": "/api/v1/im/cannedMessages/{template_message_id}/apply",
    "Api Method": "POST",
    "Desc": "Get a canned message or a template message with applied contact information in the placeholders",
    "OAuth Scope": "Desk.basic.CREATE, Desk.InstantMessages.CREATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/im/cannedMessages/111000005515319/apply\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "contactId",
        "data_type": "long optional",
        "description": "Contact id for which the canned message has to be applied"
      },
      {
        "name": "language",
        "data_type": "string optional, max chars : 100",
        "description": "Language for which the canned message has to be applied. Enter this input in ISO language code. For example en , fr , de , bn , ta etc"
      }
    ],
    "Response Example": "{\n  \"modifiedTime\" : \"2025-05-22T06:16:49.347Z\",\n  \"departmentId\" : \"222222000000006907\",\n  \"title\" : \"UTILITY template - orders\",\n  \"message\" : \"Dear John Cena, this is the updated invoice for the month of May\\n\\ncheck the policy document  \",\n  \"type\" : \"TEMPLATE\",\n  \"isActive\" : true,\n  \"tags\" : \"UTILITY\",\n  \"actor\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/11111111000005421001/photo?orgId=111111111\",\n    \"name\" : \"De Paul\",\n    \"id\" : \"11111111000005421001\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"de.paul@zykler.com\"\n  },\n  \"wabaId\" : \"123456789123456789\",\n  \"displayMessage\" : \"Dear John Cena, this is the updated invoice for the month of May\\n\\ncheck the policy document  \",\n  \"translations\" : [ {\n    \"modifiedTime\" : null,\n    \"displayMessage\" : \"Dear ${Contacts.Last Name}, this is the updated invoice for the month of May\\n\\ncheck the policy document ${Contacts.policy}\",\n    \"templateItems\" : {\n      \"buttons\" : [ {\n        \"action\" : \"+1123456787\",\n        \"type\" : \"PHONE_NUMBER\",\n        \"message\" : \"Call us\"\n      }, {\n        \"action\" : \"https://www.zoho.com/visit-us\",\n        \"type\" : \"URL\",\n        \"message\" : \"Visit Us\"\n      } ],\n      \"footer\" : null,\n      \"header\" : {\n        \"attachment\" : {\n          \"size\" : \"829429\",\n          \"name\" : \"test.png\",\n          \"id\" : \"1111000005511111\",\n          \"type\" : \"image/png\",\n          \"uuid\" : \"5f0a1866c9885cdcbf81ed20ca630738\",\n          \"url\" : \"https://desk.zoho.com/api/v1/im/attachments/5f0a1866c9885cdcbf81ed20ca630738?orgId=111111111\"\n        },\n        \"type\" : \"IMAGE\",\n        \"message\" : null\n      }\n    },\n    \"language\" : \"en\",\n    \"id\" : \"1111000005515321\",\n    \"message\" : \"Dear ${Contacts.Last Name}, this is the updated invoice for the month of May\\n\\ncheck the policy document ${Contacts.policy}\",\n    \"uuid\" : \"65f0db516cb659e3b872d579c3d81424\",\n    \"status\" : \"APPROVED\",\n    \"failedReason\" : null\n  } ],\n  \"id\" : \"111000005515319\",\n  \"primaryLanguage\" : \"en\",\n  \"status\" : \"APPROVED\"\n}"
  },
  {
    "Api name": "Automation Engine",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The automation engine serves as the core component that drives automation.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get Supported Actions of an Engine",
    "Api URL": "/api/v1/automationEngine/engineSupportedActions",
    "Api Method": "GET",
    "Desc": "This API fetches the supported Actions of an AutomationEngine",
    "OAuth Scope": "Desk.settings.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/automationEngine/engineSupportedActions\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "engineSysName",
        "data_type": "string optional, max chars : 100",
        "description": "AutomationEngine's system name"
      },
      {
        "name": "engineId",
        "data_type": "long optional",
        "description": "AutomationEngine's id"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "Module name for filtering supported actions"
      },
      {
        "name": "event",
        "data_type": "string required, max chars : 100",
        "description": "Event name for filtering supported actions"
      },
      {
        "name": "departmentId",
        "data_type": "long required",
        "description": "Department ID for context"
      }
    ],
    "Response Example": "{\n  \"engineName\" : \"WORKFLOWS\",\n  \"actions\" : [ {\n    \"async\" : true,\n    \"name\" : \"StopEngine\",\n    \"reusable\" : true\n  }, {\n    \"async\" : true,\n    \"name\" : \"StartEngine\",\n    \"reusable\" : true\n  } ],\n  \"modules\" : [ {\n    \"name\" : \"TICKETS\",\n    \"actions\" : [ {\n      \"async\" : true,\n      \"name\" : \"StopEngine\",\n      \"reusable\" : true\n    }, {\n      \"async\" : true,\n      \"name\" : \"StartEngine\",\n      \"reusable\" : true\n    } ],\n    \"events\" : [ {\n      \"name\" : \"CREATE\",\n      \"submodule\" : \"\",\n      \"actions\" : [ {\n        \"async\" : true,\n        \"name\" : \"LogCreate\",\n        \"reusable\" : true\n      }, {\n        \"async\" : true,\n        \"name\" : \"NotifyCreate\",\n        \"reusable\" : true\n      } ]\n    }, {\n      \"name\" : \"UPDATE\",\n      \"submodule\" : null,\n      \"actions\" : [ {\n        \"async\" : true,\n        \"name\" : \"NotifyUpdate\",\n        \"reusable\" : true\n      }, {\n        \"async\" : true,\n        \"name\" : \"LogUpdate\",\n        \"reusable\" : true\n      } ]\n    } ]\n  }, {\n    \"name\" : \"CUSTOM_MODULE\",\n    \"actions\" : [ {\n      \"async\" : true,\n      \"name\" : \"StartEngine\",\n      \"reusable\" : true\n    }, {\n      \"async\" : true,\n      \"name\" : \"StopEngine\",\n      \"reusable\" : true\n    } ],\n    \"events\" : [ {\n      \"name\" : \"CREATE\",\n      \"submodule\" : \"\",\n      \"actions\" : [ {\n        \"async\" : true,\n        \"name\" : \"LogCreate\",\n        \"reusable\" : true\n      }, {\n        \"async\" : true,\n        \"name\" : \"NotifyCreate\",\n        \"reusable\" : true\n      } ]\n    }, {\n      \"name\" : \"UPDATE\",\n      \"submodule\" : null,\n      \"actions\" : [ {\n        \"async\" : true,\n        \"name\" : \"LogUpdate\",\n        \"reusable\" : true\n      }, {\n        \"async\" : true,\n        \"name\" : \"NotifyUpdate\",\n        \"reusable\" : true\n      } ]\n    } ]\n  } ]\n}"
  },
  {
    "Api name": "Pinned Conversations",
    "Api URL": "",
    "Api Method": "",
    "Desc": "A ticket in a support system often includes multiple conversations. As a result, crucial information might not be easily accessible.This feature allows users to pin threads or comments, ensuring they are prominently displayed whenever the ticket is viewed.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "The type of entity to pin. The allowed values are COMMENTS and THREADS"
      },
      {
        "name": "isPublic",
        "data_type": "boolean",
        "description": "The visibility of the pin."
      },
      {
        "name": "entityId",
        "data_type": "long",
        "description": "ID of the entity to pin."
      },
      {
        "name": "ids show Attributes",
        "data_type": "list",
        "description": "IDs of the pins to delete."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Create a pin on the ticket",
    "Api URL": "api/v1/tickets/{ticket_id}/pins",
    "Api Method": "POST",
    "Desc": "This API creates a new pin on the ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1235000000013359/pins\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"isPublic\" : false,\n  \"entityId\" : \"1235000000013468\",\n  \"type\" : \"comments\"\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "type",
        "data_type": "string required, max chars : 100",
        "description": "The type of entity to pin. The allowed values are COMMENTS and THREADS"
      },
      {
        "name": "isPublic",
        "data_type": "boolean optional",
        "description": "The visibility of the pin."
      },
      {
        "name": "entityId",
        "data_type": "long required",
        "description": "ID of the entity to pin."
      }
    ],
    "Response Example": "-d'{\n  \"isPublic\" : false,\n  \"entityId\" : \"1235000000013468\",\n  \"type\" : \"comments\"\n}'"
  },
  {
    "Api name": "Get pins of a ticket",
    "Api URL": "api/v1/tickets/{ticket_id}/pins",
    "Api Method": "GET",
    "Desc": "This API fetches the list of pins of a particular ticket.",
    "OAuth Scope": "Desk.tickets.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/tickets/1235000000013359/pins?types=comments,threads\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "types",
        "data_type": "string optional, max chars : 100",
        "description": "The type of pins to fetch as a comma separated list. The allowed values are comments and threads"
      },
      {
        "name": "include see documentation",
        "data_type": "string optional, max chars : 100",
        "description": "Secondary information related to the pinned conversations. Values allowed are pinnedBy , and mentions ."
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"pinnedTime\" : \"2024-05-07T05:24:34Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1235000000013295\",\n    \"pinnedBy\" : {\n      \"firstName\" : \"Nirmal\",\n      \"lastName\" : \"Kumar\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1235000000010078/photo?orgId=61815772\",\n      \"id\" : \"1235000000010078\",\n      \"email\" : \"nirmalkumar@zylker.com\"\n    },\n    \"type\" : \"comments\",\n    \"pinnedEntity\" : {\n      \"modifiedTime\" : \"2024-05-06T13:05:50.000Z\",\n      \"attachments\" : [ ],\n      \"encodedContent\" : \"&lt;div style&#x3d;&quot;font-size&#x3a; 13px&#x3b; font-family&#x3a; Arial, Helvetica, sans-serif&quot;&gt;&lt;div&gt;zsu&#x5b;&#x40;user&#x3a;76260187&#x5d;zsu a comment.&lt;br&gt;&lt;&#x2f;div&gt;&lt;&#x2f;div&gt;\",\n      \"commentedTime\" : \"2024-05-06T13:05:50.000Z\",\n      \"isPublic\" : false,\n      \"id\" : \"1235000000013468\",\n      \"contentType\" : \"html\",\n      \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, sans-serif\\\"><div>zsu[@user:76260187]zsu a comment.<br></div></div>\",\n      \"commenterId\" : \"1235000000010078\",\n      \"commenter\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1235000000010078/photo?orgId=61815772\",\n        \"firstName\" : \"Immanuel\",\n        \"lastName\" : \"T\",\n        \"id\" : \"1235000000010078\",\n        \"type\" : \"AGENT\",\n        \"email\" : \"immanuel.t@zylker.com\"\n      },\n      \"impersonatedUser\" : null,\n      \"mention\" : [ {\n        \"firstName\" : \"Kamalesh\",\n        \"lastName\" : \"SN\",\n        \"photoURL\" : \"https://deskt.zoho.com/api/v1/agents/1235000000034048/photo?orgId=61815772\",\n        \"offSet\" : \"77\",\n        \"length\" : \"22\",\n        \"id\" : \"1235000000034048\",\n        \"type\" : \"AGENT\",\n        \"email\" : \"kamalesh.sn@zylker.com\",\n        \"zuid\" : \"76260187\"\n      } ]\n    }\n  }, {\n    \"pinnedTime\" : \"2024-05-06T05:32:47Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1235000000014147\",\n    \"pinnedBy\" : {\n      \"firstName\" : \"Nirmal\",\n      \"lastName\" : \"Kumar\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1235000000010078/photo?orgId=61815772\",\n      \"id\" : \"1235000000010078\",\n      \"email\" : \"nirmalkumar@zylker.com\"\n    },\n    \"type\" : \"threads\",\n    \"pinnedEntity\" : {\n      \"sentiment\" : \"NEGATIVE\",\n      \"isDescriptionThread\" : false,\n      \"canReply\" : true,\n      \"bcc\" : \"\",\n      \"channel\" : \"EMAIL\",\n      \"aspects\" : [ ],\n      \"source\" : {\n        \"appName\" : null,\n        \"extId\" : null,\n        \"permalink\" : null,\n        \"type\" : \"SYSTEM\",\n        \"appPhotoURL\" : null\n      },\n      \"lastRatingIconURL\" : null,\n      \"impersonatedUser\" : null,\n      \"channelRelatedInfo\" : null,\n      \"createdTime\" : \"2024-04-22T10:32:08.000Z\",\n      \"id\" : \"1235000000013283\",\n      \"contentType\" : \"text/html\",\n      \"direction\" : \"in\",\n      \"summary\" : \"Email reply...\",\n      \"cc\" : \"\",\n      \"keyWords\" : [ ],\n      \"visibility\" : \"public\",\n      \"scheduleInfo\" : null,\n      \"author\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"Immanuel\",\n        \"lastName\" : \"T\",\n        \"id\" : \"1235000000011288\",\n        \"type\" : \"END_USER\",\n        \"email\" : \"immanuel.t@zylker.com\"\n      },\n      \"isForward\" : false,\n      \"hasAttach\" : true,\n      \"respondedIn\" : null,\n      \"attachmentCount\" : \"1\",\n      \"readReceipts\" : null,\n      \"to\" : \"\\\"zylker support\\\"<support@zylker.com>\",\n      \"fromEmailAddress\" : \"\\\"kamelesh sn\\\"<kamelsh.sn@zylker.com>\",\n      \"actions\" : [ ],\n      \"status\" : \"SUCCESS\"\n    }\n  } ]\n}"
  },
  {
    "Api name": "Unpin a ticket's pin",
    "Api URL": "api/v1/tickets/{ticket_id}/pins/unpin",
    "Api Method": "POST",
    "Desc": "This API deletes one or more pins from a ticket.",
    "OAuth Scope": "Desk.tickets.UPDATE",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/tickets/1235000000013359/pins/unpin\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"ids\" : [ 1235000000013295, 1235000000013345 ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "ids",
        "data_type": "list required",
        "description": "IDs of the pins to delete."
      }
    ],
    "Response Example": "-d'{\n  \"ids\" : [ 1235000000013295, 1235000000013345 ]\n}'"
  },
  {
    "Api name": "IM Metrics",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Metics APIs will provide various IM agent and conversation related metrics to the managers/leads.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "Get Agents Metrics",
    "Api URL": "/api/v1/im/metrics/agents",
    "Api Method": "GET",
    "Desc": "This data provides leads/managers with a holistic details into agents performance and can be used in coaching them.",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/supportapi/api/v1/im/metrics/agents?duration=LAST_WEEK&attributeGroup=RESPONSIVENESS&attributes=ATTENDED_CHATS,AVG_PICKUP_TIME,AVG_FIRST_RESPONSE_TIME,AVG_RESPONSE_TIME&departmentId=123456000000001234\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "Start date for metrics. Enter a date in the format of dd-mm-yyyy. This param will be taken into account only if duration equals to CUSTOM_IN_DATE"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "End date for metrics. Enter a date in the format of dd-mm-yyyy. This param will be taken into account only if duration equals to CUSTOM_IN_DATE"
      },
      {
        "name": "duration",
        "data_type": "string required, max chars : 100",
        "description": "Duration to filter the metrics. Available values are LAST24HOURS , TODAY , YESTERDAY , LAST_7_DAYS , LAST_30_DAYS , THIS_WEEK , LAST_WEEK , THIS_MONTH , LAST_MONTH , CUSTOM_IN_DATE , LAST_1_HOUR"
      },
      {
        "name": "attributeGroup",
        "data_type": "string required, max chars : 100",
        "description": "Denotes which attribute group data is required. Eg: RESPONSIVENESS - AVG_RESPONSE_TIME comes under responsiveness group. It's Mandatory Param. Available value is RESPONSIVENESS"
      },
      {
        "name": "attributes",
        "data_type": "string required, max chars : 100",
        "description": "Denotes which metrics are required in the response. Its a mandatory Param. Eg: AVG_RESPONSE_TIME of agent.This is a list-based parameter you can pass all the values or the rquired ones. Available values are ATTENDED_CHATS , AVG_PICKUP_TIME , AVG_FIRST_RESPONSE_TIME , AVG_RESPONSE_TIME"
      },
      {
        "name": "channelIds",
        "data_type": "string optional, max chars : 1000",
        "description": "To filter Agent Metrics only on a list of channelIds. It's a Optional Param"
      },
      {
        "name": "agentIds",
        "data_type": "string optional, max chars : 1000",
        "description": "To filter Agent Metrics only for particular Agents. It's a Optional Param"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Filter agent metrics in given department Id"
      },
      {
        "name": "integrationService",
        "data_type": "string optional, max chars : 100",
        "description": "Agent metrics for a particular integration service. Available values are TELEGRAM , TWILIO , LINE , WECHAT , WHATSAPP , FACEBOOKMESSENGER , INSTAGRAM"
      },
      {
        "name": "basedOn",
        "data_type": "string optional, max chars : 100",
        "description": "To get Agent Metrics based on the Conversation Started time or Ended Time. It's a Optional Param. Available values are START_TIME , END_TIME"
      }
    ],
    "Response Example": "{\n  \"data\" : [ {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"1\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : \"00:00:23\"\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"345343453\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"2\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"86434543\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"8\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"976543456\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"1\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"853447543\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"3\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"887764523\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"1\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"987654224\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"1\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"136000000321001\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"1\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"136000000414269\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"10\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"136000000537373\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"9\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"136000003639035\"\n  }, {\n    \"values\" : [ {\n      \"attribute\" : \"ATTENDED_CHATS\",\n      \"value\" : \"3\"\n    }, {\n      \"attribute\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"attribute\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"id\" : \"136000003759045\"\n  } ],\n  \"entityDetails\" : {\n    \"345343453\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/435798423232323001/photo?orgId=987876543\",\n      \"name\" : \"john\",\n      \"id\" : \"435798423232323001\",\n      \"email\" : \"john@zykler.com\"\n    },\n    \"887764523\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/232342342232323001/photo?orgId=987876543\",\n      \"name\" : \"siya\",\n      \"id\" : \"232342342232323001\",\n      \"email\" : \"siya@zykler.com\"\n    },\n    \"853447543\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/453223242232323001/photo?orgId=987876543\",\n      \"name\" : \"robert\",\n      \"id\" : \"453223242232323001\",\n      \"email\" : \"robert@zykler.com\"\n    },\n    \"86434543\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4212312313232323001/photo?orgId=987876543\",\n      \"name\" : \"tina\",\n      \"id\" : \"4212312313232323001\",\n      \"email\" : \"tina@zykler.com\"\n    },\n    \"987654224\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/642323432342342333/photo?orgId=987876543\",\n      \"name\" : \"donald\",\n      \"id\" : \"642323432342342333\",\n      \"email\" : \"donald@zykler.com\"\n    },\n    \"976543456\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/53234234234234234/photo?orgId=987876543\",\n      \"name\" : \"ram\",\n      \"id\" : \"53234234234234234\",\n      \"email\" : \"ram@zykler.com\"\n    }\n  },\n  \"entity\" : \"AGENT\"\n}"
  },
  {
    "Api name": "Get Session Metrics",
    "Api URL": "/api/v1/im/metrics/sessions/timeseries",
    "Api Method": "GET",
    "Desc": "This API lists various session related metrics such as avg. first response time, avg. response time and avg. pickup time.",
    "OAuth Scope": "Desk.basic.READ, Desk.InstantMessages.READ",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/supportapi/api/v1/im/metrics/sessions/timeseries?granularity=DAY&duration=THIS_WEEK&dimension=RESPONSIVENESS&dimensionValue=AVG_PICKUP_TIME,AVG_RESPONSE_TIME,AVG_FIRST_RESPONSE_TIME&departmentId=123456000000001234\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "startDate",
        "data_type": "string optional, max chars : 100",
        "description": "start date for metrics. Enter a date in the format of dd-mm-yyyy. This param will be taken into account only if duration equals to CUSTOM_IN_DATE"
      },
      {
        "name": "endDate",
        "data_type": "string optional, max chars : 100",
        "description": "end date for metrics. Enter a date in the format of dd-mm-yyyy. This param will be taken into account only if duration equals to CUSTOM_IN_DATE"
      },
      {
        "name": "duration",
        "data_type": "string required, max chars : 100",
        "description": "Duration to filter the metrics. Available values are LAST24HOURS , TODAY , YESTERDAY , LAST_7_DAYS , LAST_30_DAYS , THIS_WEEK , LAST_WEEK , THIS_MONTH , LAST_MONTH , CUSTOM_IN_DATE , LAST_1_HOUR"
      },
      {
        "name": "granularity",
        "data_type": "string required, max chars : 100",
        "description": "Provide metrics with time granularity. When timegap is within 24 hours, then HOURLY should be set in the param otherwise DAY should be set in this param. Available values HOURLY , DAY"
      },
      {
        "name": "dimension",
        "data_type": "string required, max chars : 100",
        "description": "Denotes the dimension in metrics - Eg: responsiveness - it gives how responsive the sessions in particular time duration- eg: avg pickup time. Available value is RESPONSIVENESS"
      },
      {
        "name": "dimensionValue",
        "data_type": "string required, max chars : 100",
        "description": "Denotes dimensionValues required in dimension-Eg: Avg Pickup Time, Avg Response time etc. This is a list based parameter, you can pass all the values or the required one. Available values are AVG_PICKUP_TIME , AVG_RESPONSE_TIME , AVG_FIRST_RESPONSE_TIME"
      },
      {
        "name": "integrationService",
        "data_type": "string optional, max chars : 100",
        "description": "Session metrics for a particular integration service. Available values are TELEGRAM , TWILIO , LINE , WECHAT , WHATSAPP , FACEBOOKMESSENGER , INSTAGRAM"
      },
      {
        "name": "channelIds",
        "data_type": "string optional, max chars : 1000",
        "description": "Filter Session metrics by channelId"
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Filter session metrics in given department Id"
      },
      {
        "name": "basedOn",
        "data_type": "string optional, max chars : 100",
        "description": "Used to select the required metrics, based on Session Started time or Ended Time. Available values are START_TIME , END_TIME"
      }
    ],
    "Response Example": "{\n  \"aggregatedMetrics\" : [ {\n    \"dimension\" : \"AVG_RESPONSE_TIME\",\n    \"value\" : \"07:57:38\"\n  }, {\n    \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n    \"value\" : \"07:57:48\"\n  }, {\n    \"dimension\" : \"AVG_PICKUP_TIME\",\n    \"value\" : \"00:00:00\"\n  } ],\n  \"trendDataList\" : [ {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"time\" : \"2024-11-16\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"time\" : \"2024-11-17\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : \"23:52:53\"\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : \"23:53:22\"\n    } ],\n    \"time\" : \"2024-11-18\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : \"00:00:00\"\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : \"00:00:01\"\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : \"00:00:01\"\n    } ],\n    \"time\" : \"2024-11-19\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : \"00:00:00\"\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : \"00:00:01\"\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : \"00:00:01\"\n    } ],\n    \"time\" : \"2024-11-20\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"time\" : \"2024-11-21\"\n  }, {\n    \"data\" : [ {\n      \"dimension\" : \"AVG_PICKUP_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_RESPONSE_TIME\",\n      \"value\" : null\n    }, {\n      \"dimension\" : \"AVG_FIRST_RESPONSE_TIME\",\n      \"value\" : null\n    } ],\n    \"time\" : \"2024-11-22\"\n  } ]\n}"
  },
  {
    "Api name": "Imports",
    "Api URL": "",
    "Api Method": "",
    "Desc": "This API directly imports data to Desk without the need for bundling it into a specific file format.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "id",
        "data_type": "long",
        "description": "The ID of the Import request."
      },
      {
        "name": "scopeId",
        "data_type": "string",
        "description": "The ID is used to uniquely identify the import scope, enabling multiple import requests within the same scope. The purpose of the scopeId is to categorize external data under a specific classification. This categorization ensures that the parent-child relationship between entities is established only within the same category. The value of scopeId will be a UUID."
      },
      {
        "name": "groupId",
        "data_type": "long",
        "description": "It is a unique ID used to identify a group. All the entity data under a group is sequentially imported. The sequential import order is determined by the parent-child relationship. For instance, if the contacts are linked to specific accounts, you might need to import accounts before contacts. Following the recommended order ensures that data dependencies are correctly established and maintained within the system after the import. This practice eliminates potential data integrity issues. Note: Entity data belonging to the same group will be imported sequentially, while entity data from different groups can be imported in parallel."
      },
      {
        "name": "importInitiatedTime",
        "data_type": "timestamp",
        "description": "The time at which the import request is initiated."
      },
      {
        "name": "importCompletedTime",
        "data_type": "timestamp",
        "description": "The time at which the import is completed."
      },
      {
        "name": "notifyUrl",
        "data_type": "string",
        "description": "Callback URL to receive notification upon the completion of a particular import."
      },
      {
        "name": "importedBy",
        "data_type": "long",
        "description": "The ID of the user who submitted the import request."
      },
      {
        "name": "hasError",
        "data_type": "boolean",
        "description": "The key that indicates whether the import has errors or not."
      },
      {
        "name": "status",
        "data_type": "String",
        "description": "The key that returns the status of the Import request. The values are queued , scheduled , completed and systemError ."
      },
      {
        "name": "data",
        "data_type": "String",
        "description": "The data to be imported."
      },
      {
        "name": "errorReportUrl",
        "data_type": "string",
        "description": "The URL to retrieve the import error log."
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "Get imports",
    "Api URL": "/api/v1/imports/{import_id}",
    "Api Method": "GET",
    "Desc": "This API fetches a single import info from your help desk portal.",
    "OAuth Scope": "Desk.imports",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/imports/1892000000042032\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"importInitiatedTime\" : \"2018-12-17T06:40:57.109Z\",\n  \"importCompletedTime\" : \"2018-12-17T12:11:04.000Z\",\n  \"scopeId\" : \"7d69f2c6-1d6d-4a75-99d1-fafc4e4177a7\",\n  \"errorReportUrl\" : \"https://desk.zoho.com/api/v1/importErrorLog/4000000024001\",\n  \"runAutomation\" : \"false\",\n  \"notifyUrl\" : \"www.demoServer.com/notifyImportStatus\",\n  \"hasError\" : true,\n  \"id\" : \"4000000024001\",\n  \"importedBy\" : \"4000000016079\",\n  \"status\" : \"completed\"\n}"
  },
  {
    "Api name": "Post imports",
    "Api URL": "/api/v1/imports",
    "Api Method": "POST",
    "Desc": "This API add a import entry under a given scope in your help desk portal.",
    "OAuth Scope": "Desk.imports",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/imports\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"scopeId\" : \"7d69f2c6-1d6d-4a75-99d1-fafc4e4177a7\",\n  \"data\" : {\n    \"endusers\" : [ {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Abraham\",\n      \"phone\" : null,\n      \"city\" : null,\n      \"displayName\" : \"John\",\n      \"mobile\" : null,\n      \"timeZone\" : \"Asia/Kolkata\",\n      \"endUserExtId\" : \"14091310393191\",\n      \"countryLocale\" : \"en_US\",\n      \"helpCenterId\" : \"894114121213421\",\n      \"email\" : [ {\n        \"emailAddress\" : \"john.ab@zylker.com\",\n        \"isPrimary\" : \"true\"\n      } ],\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"tickets\" : [ {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"subCategory\" : null,\n      \"contactExtId\" : \"externalContact1\",\n      \"productId\" : null,\n      \"contactId\" : null,\n      \"subject\" : \"Here's your first import ticket1.\",\n      \"departmentId\" : \"1000000012806\",\n      \"channel\" : \"Email\",\n      \"priority\" : null,\n      \"assigneeId\" : \"1000000016086\",\n      \"tags\" : [ \"meenakshi\" ],\n      \"ticketExtId\" : \"externalTicket1\",\n      \"phone\" : \"1 888 900 9646\",\n      \"createdTime\" : \"2019-07-17T14:00:32.000Z\",\n      \"category\" : null,\n      \"email\" : \"testmail@zylker.com\",\n      \"status\" : \"Open\"\n    }, {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"subCategory\" : null,\n      \"contactExtId\" : null,\n      \"productId\" : null,\n      \"contactId\" : 5000000016426,\n      \"subject\" : \"Here's your first import ticket2.\",\n      \"departmentId\" : \"1000000012806\",\n      \"channel\" : \"Email\",\n      \"priority\" : null,\n      \"assigneeId\" : \"1000000016086\",\n      \"tags\" : [ \"meenakshi\" ],\n      \"ticketExtId\" : \"externalTicket2\",\n      \"phone\" : \"1 888 900 9646\",\n      \"createdTime\" : \"2019-07-17T14:00:32.000Z\",\n      \"category\" : null,\n      \"email\" : \"testmail123@zylker.com\",\n      \"status\" : \"Open\"\n    } ],\n    \"kbRootCategories\" : [ {\n      \"isReviewEnabled\" : \"false\",\n      \"visibility\" : \"NONE\",\n      \"articleViewType\" : \"LISTVIEW\",\n      \"translations\" : [ {\n        \"name\" : \"Import sdcwed 1289\",\n        \"locale\" : \"en_US\",\n        \"permalink\" : \"importis1289\"\n      } ],\n      \"name\" : \"Import RootCatesdcwedgory 1289\",\n      \"description\" : \"sdcwed data 7812899\",\n      \"primaryDepartmentExtId\" : \"1000000025808\",\n      \"kbRootCategoryExtId\" : \"1289\",\n      \"status\" : \"SHOW_IN_HELPCENTER\",\n      \"associatedDepartmentIds\" : [ \"1000000025808\", \"1000000069588\" ]\n    } ],\n    \"accounts\" : [ {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"country\" : \"0country\",\n      \"website\" : \"www.test0.com\",\n      \"accountName\" : \"externalAccount-1\",\n      \"city\" : \"0city\",\n      \"customFields\" : { },\n      \"description\" : \"import account\",\n      \"industry\" : \"0industry\",\n      \"accountExtId\" : \"externalAccount-1\",\n      \"phone\" : \"+123 0\",\n      \"street\" : \"0street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"0state\",\n      \"fax\" : \"+111 0\",\n      \"email\" : \"02email@zylker.com\"\n    } ],\n    \"contacts\" : [ {\n      \"zip\" : 94588,\n      \"lastName\" : \" lastname 02\",\n      \"country\" : \"India\",\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"contactExtId\" : \"externalContactWithExternalAccount-1\",\n      \"secondaryEmail\" : \"00secondaryemail@zylker.com\",\n      \"city\" : \"0city\",\n      \"customFields\" : { },\n      \"facebook\" : \"testfacebook\",\n      \"mobile\" : null,\n      \"description\" : \"test contact for Import\",\n      \"title\" : \"Customer Support Executive\",\n      \"type\" : null,\n      \"accountExtId\" : \"externalAccount-1\",\n      \"accountId\" : null,\n      \"firstName\" : null,\n      \"twitter\" : \"testTwitter\",\n      \"phone\" : \"+1111 0\",\n      \"street\" : \"0street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"0state\",\n      \"email\" : \"00email@zylker.com\"\n    }, {\n      \"zip\" : 94588,\n      \"lastName\" : \" lastname 03\",\n      \"country\" : \"India\",\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"contactExtId\" : \"externalContactWithDeskAccount\",\n      \"secondaryEmail\" : \"03secondaryemail@zylker.com\",\n      \"city\" : \"03city\",\n      \"customFields\" : { },\n      \"facebook\" : \"testfacebook\",\n      \"mobile\" : null,\n      \"description\" : \"test contact for Import\",\n      \"title\" : \"Customer Support Executive\",\n      \"type\" : null,\n      \"accountExtId\" : null,\n      \"accountId\" : \"359876756\",\n      \"firstName\" : null,\n      \"twitter\" : \"testTwitter\",\n      \"phone\" : \"+1111 03\",\n      \"street\" : \"03street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"03state\",\n      \"email\" : \"03email@zylker.com\"\n    } ]\n  },\n  \"runAutomation\" : true\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "scopeId",
        "data_type": "string required, max chars : 36",
        "description": "The ID is used to uniquely identify the import scope, enabling multiple import requests within the same scope. The purpose of the scopeId is to categorize external data under a specific classification. This categorization ensures that the parent-child relationship between entities is established only within the same category. The value of scopeId will be a UUID."
      },
      {
        "name": "groupId",
        "data_type": "long optional",
        "description": "It is a unique ID used to identify a group. All the entity data under a group is sequentially imported. The sequential import order is determined by the parent-child relationship. For instance, if the contacts are linked to specific accounts, you might need to import accounts before contacts. Following the recommended order ensures that data dependencies are correctly established and maintained within the system after the import. This practice eliminates potential data integrity issues. Note: Entity data belonging to the same group will be imported sequentially, while entity data from different groups can be imported in parallel."
      },
      {
        "name": "notifyUrl",
        "data_type": "string optional, max chars : 500",
        "description": "Callback URL to receive notification upon the completion of a particular import."
      },
      {
        "name": "data show Attributes",
        "data_type": "object optional",
        "description": "The data to be imported."
      }
    ],
    "Response Example": "-d'{\n  \"scopeId\" : \"7d69f2c6-1d6d-4a75-99d1-fafc4e4177a7\",\n  \"data\" : {\n    \"endusers\" : [ {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Abraham\",\n      \"phone\" : null,\n      \"city\" : null,\n      \"displayName\" : \"John\",\n      \"mobile\" : null,\n      \"timeZone\" : \"Asia/Kolkata\",\n      \"endUserExtId\" : \"14091310393191\",\n      \"countryLocale\" : \"en_US\",\n      \"helpCenterId\" : \"894114121213421\",\n      \"email\" : [ {\n        \"emailAddress\" : \"john.ab@zylker.com\",\n        \"isPrimary\" : \"true\"\n      } ],\n      \"status\" : \"ACTIVE\"\n    } ],\n    \"tickets\" : [ {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"subCategory\" : null,\n      \"contactExtId\" : \"externalContact1\",\n      \"productId\" : null,\n      \"contactId\" : null,\n      \"subject\" : \"Here's your first import ticket1.\",\n      \"departmentId\" : \"1000000012806\",\n      \"channel\" : \"Email\",\n      \"priority\" : null,\n      \"assigneeId\" : \"1000000016086\",\n      \"tags\" : [ \"meenakshi\" ],\n      \"ticketExtId\" : \"externalTicket1\",\n      \"phone\" : \"1 888 900 9646\",\n      \"createdTime\" : \"2019-07-17T14:00:32.000Z\",\n      \"category\" : null,\n      \"email\" : \"testmail@zylker.com\",\n      \"status\" : \"Open\"\n    }, {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"subCategory\" : null,\n      \"contactExtId\" : null,\n      \"productId\" : null,\n      \"contactId\" : 5000000016426,\n      \"subject\" : \"Here's your first import ticket2.\",\n      \"departmentId\" : \"1000000012806\",\n      \"channel\" : \"Email\",\n      \"priority\" : null,\n      \"assigneeId\" : \"1000000016086\",\n      \"tags\" : [ \"meenakshi\" ],\n      \"ticketExtId\" : \"externalTicket2\",\n      \"phone\" : \"1 888 900 9646\",\n      \"createdTime\" : \"2019-07-17T14:00:32.000Z\",\n      \"category\" : null,\n      \"email\" : \"testmail123@zylker.com\",\n      \"status\" : \"Open\"\n    } ],\n    \"kbRootCategories\" : [ {\n      \"isReviewEnabled\" : \"false\",\n      \"visibility\" : \"NONE\",\n      \"articleViewType\" : \"LISTVIEW\",\n      \"translations\" : [ {\n        \"name\" : \"Import sdcwed 1289\",\n        \"locale\" : \"en_US\",\n        \"permalink\" : \"importis1289\"\n      } ],\n      \"name\" : \"Import RootCatesdcwedgory 1289\",\n      \"description\" : \"sdcwed data 7812899\",\n      \"primaryDepartmentExtId\" : \"1000000025808\",\n      \"kbRootCategoryExtId\" : \"1289\",\n      \"status\" : \"SHOW_IN_HELPCENTER\",\n      \"associatedDepartmentIds\" : [ \"1000000025808\", \"1000000069588\" ]\n    } ],\n    \"accounts\" : [ {\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"country\" : \"0country\",\n      \"website\" : \"www.test0.com\",\n      \"accountName\" : \"externalAccount-1\",\n      \"city\" : \"0city\",\n      \"customFields\" : { },\n      \"description\" : \"import account\",\n      \"industry\" : \"0industry\",\n      \"accountExtId\" : \"externalAccount-1\",\n      \"phone\" : \"+123 0\",\n      \"street\" : \"0street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"0state\",\n      \"fax\" : \"+111 0\",\n      \"email\" : \"02email@zylker.com\"\n    } ],\n    \"contacts\" : [ {\n      \"zip\" : 94588,\n      \"lastName\" : \" lastname 02\",\n      \"country\" : \"India\",\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"contactExtId\" : \"externalContactWithExternalAccount-1\",\n      \"secondaryEmail\" : \"00secondaryemail@zylker.com\",\n      \"city\" : \"0city\",\n      \"customFields\" : { },\n      \"facebook\" : \"testfacebook\",\n      \"mobile\" : null,\n      \"description\" : \"test contact for Import\",\n      \"title\" : \"Customer Support Executive\",\n      \"type\" : null,\n      \"accountExtId\" : \"externalAccount-1\",\n      \"accountId\" : null,\n      \"firstName\" : null,\n      \"twitter\" : \"testTwitter\",\n      \"phone\" : \"+1111 0\",\n      \"street\" : \"0street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"0state\",\n      \"email\" : \"00email@zylker.com\"\n    }, {\n      \"zip\" : 94588,\n      \"lastName\" : \" lastname 03\",\n      \"country\" : \"India\",\n      \"modifiedTime\" : \"2016-10-12T06:57:38.000Z\",\n      \"contactExtId\" : \"externalContactWithDeskAccount\",\n      \"secondaryEmail\" : \"03secondaryemail@zylker.com\",\n      \"city\" : \"03city\",\n      \"customFields\" : { },\n      \"facebook\" : \"testfacebook\",\n      \"mobile\" : null,\n      \"description\" : \"test contact for Import\",\n      \"title\" : \"Customer Support Executive\",\n      \"type\" : null,\n      \"accountExtId\" : null,\n      \"accountId\" : \"359876756\",\n      \"firstName\" : null,\n      \"twitter\" : \"testTwitter\",\n      \"phone\" : \"+1111 03\",\n      \"street\" : \"03street\",\n      \"createdTime\" : \"2016-08-12T06:57:38.000Z\",\n      \"state\" : \"03state\",\n      \"email\" : \"03email@zylker.com\"\n    } ]\n  },\n  \"runAutomation\" : true\n}'"
  },
  {
    "Api name": "Get import Mappings",
    "Api URL": "/api/v1/importMappings",
    "Api Method": "POST",
    "Desc": "This API fetches entity id's for given external ids your help desk portal.",
    "OAuth Scope": "Desk.imports",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/importMappings\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"scopeId\" : \"74da0304-e8e2-4f74-9da1-5359e4359d9a\",\n  \"module\" : \"tickets\",\n  \"externalIds\" : [ \"ticketLayout1\", \"ticketLayout3\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "scopeId",
        "data_type": "string required, max chars : 36",
        "description": "The ID is used to uniquely identify the Import scope, enabling multiple import requests within the same scope. The purpose of the scopeId is to categorize external data under a specific classification. This categorization ensures that the parent-child relationship between entities is established only within the same category. The value of scopeId will be a UUID."
      },
      {
        "name": "module",
        "data_type": "String required",
        "description": "The modules that are associated with the externalIds."
      },
      {
        "name": "externalIds",
        "data_type": "list required",
        "description": "The Id for which the entityId had to be fetched."
      }
    ],
    "Response Example": "-d'{\n  \"scopeId\" : \"74da0304-e8e2-4f74-9da1-5359e4359d9a\",\n  \"module\" : \"tickets\",\n  \"externalIds\" : [ \"ticketLayout1\", \"ticketLayout3\" ]\n}'"
  },
  {
    "Api name": "BulkExport",
    "Api URL": "",
    "Api Method": "",
    "Desc": "BulkExport helps you to export your records from helpdesk",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "exportId",
        "data_type": "long",
        "description": "Specifies the ID of the export"
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "The list of modules to export. Allowed values are tickets , contacts , tasks , calls , events , timeEntry , accounts , solutions , products , topics , departments , agents , teams or custom module"
      },
      {
        "name": "callBackUrl",
        "data_type": "string",
        "description": "Callback URL to receive notification upon the completion of a particular export."
      },
      {
        "name": "fields show Attributes",
        "data_type": "list",
        "description": "Fields of the selected module that are to be exported. Note: Provide the API name of the fields that are to be exported."
      },
      {
        "name": "modifiedAfter",
        "data_type": "timestamp",
        "description": "Specifies the timestamp after which data modifications are included in the export."
      },
      {
        "name": "fieldConditions show Attributes",
        "data_type": "list",
        "description": "Conditions defined for fields that are part of the view"
      },
      {
        "name": "fieldName",
        "data_type": "string",
        "description": "Name of the field"
      },
      {
        "name": "score",
        "data_type": "float",
        "description": "field score"
      },
      {
        "name": "value show Attributes",
        "data_type": "list",
        "description": "Value to assign to the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "Condition according to which records must be filtered for the view"
      },
      {
        "name": "fieldModule",
        "data_type": "string",
        "description": "Module of each condition"
      },
      {
        "name": "criteriaFields show Attributes",
        "data_type": "list",
        "description": "Name of the view to be created."
      },
      {
        "name": "field show Attributes",
        "data_type": "object",
        "description": "API name of the field."
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "API name of the field's module."
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "API name of the field"
      },
      {
        "name": "fieldLabel",
        "data_type": "string",
        "description": "Field label"
      },
      {
        "name": "path",
        "data_type": "string",
        "description": "Path of the field"
      },
      {
        "name": "condition",
        "data_type": "string",
        "description": "Criteria filter condition to compare."
      },
      {
        "name": "value show Attributes",
        "data_type": "object",
        "description": "Value of the criteria."
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "RHS Type"
      },
      {
        "name": "primitive show Attributes",
        "data_type": "object",
        "description": "PrimitiveValue"
      },
      {
        "name": "field show Attributes",
        "data_type": "string",
        "description": "RHS field."
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "API name of the field's module."
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "API name of the field"
      },
      {
        "name": "fieldLabel",
        "data_type": "string",
        "description": "Field label"
      },
      {
        "name": "path",
        "data_type": "string",
        "description": "Path of the field"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "File Structure",
    "Api URL": "",
    "Api Method": "",
    "Desc": "Structure of the exported fileWhen you export data using the/api/v1/bulkExport, the resulting exported file will contain specific CSV files depending on whether themodifiedAfterkey was passed in the request or not.If themodifiedAfterkey was not passed in the request, the exported .zip file will contain only one file mentioned below:Normal Records:This will include all active records.If themodifiedAfterkey was passed in the request, the exported .zip file contains below CSV files:RestoredRecords:File containing records restored after the time specified by themodifiedAfterkey.SpammedRecords:File containing the IDs and deleted time of records that were spammed after the time specified by themodifiedAfterkey.TrashedRecords:File containing the IDs and deleted time of records that were trashed after the time specified by themodifiedAfterkey.DeletedRecords:File containing the IDs and deleted time of the records that were deleted after the time specified by themodifiedAfterkey.Normal Records:File containing active records that were added or modified after the time specified by themodifiedAfterkey.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  },
  {
    "Api name": "BulkExport",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The exported data is provided as a set of CSV files that are zipped together.Each export request is limited to a maximum of 100,000 records.Users are limited to a maximum of 20 requests per module per day.The number of select fields for export via an endpoint is limited to a maximum of 200. If the count exceeds 200, all fields will be selected for export.You can fetch records in batches of 1 lakh using the exportId. Start with the initial export (1L records), then use the returned exportId to fetch the next set of records. Based on your needs, you can repeat the process until all records are fetched (i.e., the hasNextPage value becomes false) by passing the most recently returned exportId.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [
      {
        "name": "Attribute Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "type",
        "data_type": "string",
        "description": "RHS Type"
      },
      {
        "name": "primitive show Attributes",
        "data_type": "object",
        "description": "PrimitiveValue"
      },
      {
        "name": "field show Attributes",
        "data_type": "string",
        "description": "RHS field."
      },
      {
        "name": "module",
        "data_type": "string",
        "description": "API name of the field's module."
      },
      {
        "name": "apiName",
        "data_type": "string",
        "description": "API name of the field"
      },
      {
        "name": "fieldLabel",
        "data_type": "string",
        "description": "Field label"
      },
      {
        "name": "path",
        "data_type": "string",
        "description": "Path of the field"
      }
    ],
    "Response Example": null
  },
  {
    "Api name": "GetExportDetails",
    "Api URL": "/api/v1/bulkExport/{export_id}",
    "Api Method": "GET",
    "Desc": "To get Export details.",
    "OAuth Scope": "Desk.exports",
    "Request Example": "$ curl -X GET\nhttps://desk.zoho.com/api/v1/bulkExport/5000001003083\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [],
    "Response Example": "{\n  \"modifiedAfter\" : \"2019-05-06T18:20:37.733Z\",\n  \"callBackUrl\" : \"https://webhook.site/c57564f2-f262-4092-adc4-7c416d401d50\",\n  \"viewId\" : \"5000000031695\",\n  \"hasNextPage\" : \"false\",\n  \"module\" : \"tickets\",\n  \"departmentId\" : \"5000000031695\",\n  \"fields\" : [ \"email\", \"subject\", \"status\", \"isSpam\" ],\n  \"exportId\" : \"5000001003083\",\n  \"limitPerFile\" : \"100000\",\n  \"status\" : \"INITIATED\"\n}"
  },
  {
    "Api name": "InitiateModuleExports",
    "Api URL": "/api/v1/bulkExport",
    "Api Method": "POST",
    "Desc": "To initiate module Exports.",
    "OAuth Scope": "Desk.exports",
    "Request Example": "$ curl -X POST\nhttps://desk.zoho.com/api/v1/bulkExport\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"\n-d\n'{\n  \"modifiedAfter\" : \"2019-05-06T18:20:37.733Z\",\n  \"exportTimeFilter\" : {\n    \"duration\" : \"CUSTOM_IN_DATE\",\n    \"endDate\" : \"06-06-2024\",\n    \"filterField\" : \"4000000250354\",\n    \"startDate\" : \"06-05-2024\"\n  },\n  \"callBackUrl\" : \"https://webhook.site/c57564f2-f262-4092-adc4-7c416d401d50\",\n  \"viewId\" : \"5000000031695\",\n  \"criteria\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is\",\n      \"field\" : {\n        \"apiName\" : \"contactId\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Contact Name\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"key\" : \"13735000002029311\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    }, {\n      \"condition\" : \"is not empty\",\n      \"field\" : {\n        \"apiName\" : \"contactId\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Contact Name\"\n      },\n      \"value\" : {\n        \"primitive\" : [ ],\n        \"type\" : \"primitive\"\n      }\n    }, {\n      \"condition\" : \"is CLOSED\",\n      \"field\" : {\n        \"apiName\" : \"status\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Status\"\n      },\n      \"value\" : {\n        \"primitive\" : [ ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"((1and2)and3)\"\n  },\n  \"module\" : \"tickets\",\n  \"departmentId\" : \"5000000031695\",\n  \"fields\" : [ \"email\", \"subject\", \"status\", \"isSpam\" ]\n}'",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "exportId",
        "data_type": "long optional",
        "description": "Specifies the ID of the export"
      },
      {
        "name": "module",
        "data_type": "string required, max chars : 100",
        "description": "The list of modules to export. Allowed values are tickets , contacts , tasks , calls , events , timeEntry , accounts , solutions , products , topics , departments , agents , teams or custom module"
      },
      {
        "name": "callBackUrl",
        "data_type": "string optional, max chars : 2000",
        "description": "Callback URL to receive notification upon the completion of a particular export."
      },
      {
        "name": "fields",
        "data_type": "list optional",
        "description": "Fields of the selected module that are to be exported. Note: Provide the API name of the fields that are to be exported."
      },
      {
        "name": "limitPerFile",
        "data_type": "long optional, range : 1000-100000",
        "description": "The maximum number of rows per file."
      },
      {
        "name": "viewId",
        "data_type": "long optional",
        "description": "Specifies the ID of the view from which the corresponding records will be exported."
      },
      {
        "name": "departmentId",
        "data_type": "long optional",
        "description": "Specifies the ID of the department. Note : To export records from pre-defined views, both the viewId and departmentId must be provided; otherwise, all the view records will be fetched regardless of departments."
      }
    ],
    "Response Example": "-d'{\n  \"modifiedAfter\" : \"2019-05-06T18:20:37.733Z\",\n  \"exportTimeFilter\" : {\n    \"duration\" : \"CUSTOM_IN_DATE\",\n    \"endDate\" : \"06-06-2024\",\n    \"filterField\" : \"4000000250354\",\n    \"startDate\" : \"06-05-2024\"\n  },\n  \"callBackUrl\" : \"https://webhook.site/c57564f2-f262-4092-adc4-7c416d401d50\",\n  \"viewId\" : \"5000000031695\",\n  \"criteria\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is\",\n      \"field\" : {\n        \"apiName\" : \"contactId\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Contact Name\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"key\" : \"13735000002029311\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    }, {\n      \"condition\" : \"is not empty\",\n      \"field\" : {\n        \"apiName\" : \"contactId\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Contact Name\"\n      },\n      \"value\" : {\n        \"primitive\" : [ ],\n        \"type\" : \"primitive\"\n      }\n    }, {\n      \"condition\" : \"is CLOSED\",\n      \"field\" : {\n        \"apiName\" : \"status\",\n        \"module\" : \"tickets\",\n        \"fieldLabel\" : \"Status\"\n      },\n      \"value\" : {\n        \"primitive\" : [ ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"((1and2)and3)\"\n  },\n  \"module\" : \"tickets\",\n  \"departmentId\" : \"5000000031695\",\n  \"fields\" : [ \"email\", \"subject\", \"status\", \"isSpam\" ]\n}'"
  },
  {
    "Api name": "Download Export File",
    "Api URL": "api/v1/downloadBulkExportFile",
    "Api Method": "GET",
    "Desc": "API to download the bulk Export zip file from ZFS.",
    "OAuth Scope": "Desk.exports",
    "Request Example": "$ curl -X GET\nhttps://support.zoho.com/api/v1/downloadBulkExportFile\n-H\n\"orgId:2389290\"\n-H\n\"Authorization:Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s\"",
    "Params": [
      {
        "name": "Param Name",
        "data_type": "Data Type",
        "description": "Description"
      },
      {
        "name": "exportId",
        "data_type": "long required",
        "description": "the id of the export which was initiated for first time"
      }
    ],
    "Response Example": "200"
  },
  {
    "Api name": "Limitations",
    "Api URL": "",
    "Api Method": "",
    "Desc": "The exported data is provided as a set of CSV files that are zipped together.Each export request is limited to a maximum of 100,000 records.Users are limited to a maximum of 20 requests per module per day.The number of select fields for export via an endpoint is limited to a maximum of 200. If the count exceeds 200, all fields will be selected for export.You can fetch records in batches of 1 lakh using the exportId. Start with the initial export (1L records), then use the returned exportId to fetch the next set of records. Based on your needs, you can repeat the process until all records are fetched (i.e., the hasNextPage value becomes false) by passing the most recently returned exportId.",
    "OAuth Scope": null,
    "Request Example": "",
    "Params": [],
    "Response Example": null
  }
]